{"version":3,"names":["anchors","require","Node","stringifyComment","stringifyString","createStringifyContext","doc","options","opt","Object","assign","blockQuote","commentString","defaultKeyType","defaultStringType","directives","doubleQuotedAsJSON","doubleQuotedMinMultiLineLength","falseStr","flowCollectionPadding","indentSeq","lineWidth","minContentWidth","nullStr","simpleKeys","singleQuote","trueStr","verifyAliasOrder","schema","toStringOptions","inFlow","collectionStyle","Set","indent","indentStep","repeat","getTagObject","tags","item","tag","match","filter","t","length","find","format","tagObj","undefined","obj","isScalar","value","identify","nodeClass","name","constructor","Error","stringifyProps","node","anchors$1","props","anchor","isCollection","anchorIsValid","add","push","default","tagString","join","stringify","ctx","onComment","onChompKeep","isPair","toString","isAlias","resolvedAliases","has","TypeError","resolve","isNode","createNode","onTagObj","o","indentAtStart","str","exports"],"sources":["stringify.js"],"sourcesContent":["'use strict';\n\nvar anchors = require('../doc/anchors.js');\nvar Node = require('../nodes/Node.js');\nvar stringifyComment = require('./stringifyComment.js');\nvar stringifyString = require('./stringifyString.js');\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment.stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (Node.isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors: anchors$1, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (Node.isScalar(node) || Node.isCollection(node)) && node.anchor;\n    if (anchor && anchors.anchorIsValid(anchor)) {\n        anchors$1.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (Node.isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (Node.isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = Node.isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : Node.isScalar(node)\n            ? stringifyString.stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return Node.isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexports.createStringifyContext = createStringifyContext;\nexports.stringify = stringify;\n"],"mappings":"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"}