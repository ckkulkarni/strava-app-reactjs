{"version":3,"names":["Object","defineProperty","exports","value","create","default","_locale","require","_isAbsent","_interopRequireDefault","_schema","obj","__esModule","isNaN","NumberSchema","constructor","type","withMutation","transform","parsed","replace","NaN","isType","parseFloat","_typeCheck","Number","valueOf","min","message","number","test","name","exclusive","params","resolve","max","lessThan","less","moreThan","more","positive","msg","negative","integer","val","isInteger","truncate","round","method","_method","avail","toLowerCase","indexOf","TypeError","join","Math","prototype"],"sources":["number.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.default = void 0;\n\nvar _locale = require(\"./locale\");\n\nvar _isAbsent = _interopRequireDefault(require(\"./util/isAbsent\"));\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet isNaN = value => value != +value;\n\nfunction create() {\n  return new NumberSchema();\n}\n\nclass NumberSchema extends _schema.default {\n  constructor() {\n    super({\n      type: 'number'\n    });\n    this.withMutation(() => {\n      this.transform(function (value) {\n        let parsed = value;\n\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN; // don't use parseFloat to avoid positives on alpha-numeric strings\n\n          parsed = +parsed;\n        }\n\n        if (this.isType(parsed)) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n\n  _typeCheck(value) {\n    if (value instanceof Number) value = value.valueOf();\n    return typeof value === 'number' && !isNaN(value);\n  }\n\n  min(min, message = _locale.number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n\n      test(value) {\n        return (0, _isAbsent.default)(value) || value >= this.resolve(min);\n      }\n\n    });\n  }\n\n  max(max, message = _locale.number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n\n      test(value) {\n        return (0, _isAbsent.default)(value) || value <= this.resolve(max);\n      }\n\n    });\n  }\n\n  lessThan(less, message = _locale.number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n\n      test(value) {\n        return (0, _isAbsent.default)(value) || value < this.resolve(less);\n      }\n\n    });\n  }\n\n  moreThan(more, message = _locale.number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n\n      test(value) {\n        return (0, _isAbsent.default)(value) || value > this.resolve(more);\n      }\n\n    });\n  }\n\n  positive(msg = _locale.number.positive) {\n    return this.moreThan(0, msg);\n  }\n\n  negative(msg = _locale.number.negative) {\n    return this.lessThan(0, msg);\n  }\n\n  integer(message = _locale.number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      test: val => (0, _isAbsent.default)(val) || Number.isInteger(val)\n    });\n  }\n\n  truncate() {\n    return this.transform(value => !(0, _isAbsent.default)(value) ? value | 0 : value);\n  }\n\n  round(method) {\n    var _method;\n\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round'; // this exists for symemtry with the new Math.trunc\n\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !(0, _isAbsent.default)(value) ? Math[method](value) : value);\n  }\n\n}\n\nexports.default = NumberSchema;\ncreate.prototype = NumberSchema.prototype; //\n// Number Interfaces\n//"],"mappings":"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"}