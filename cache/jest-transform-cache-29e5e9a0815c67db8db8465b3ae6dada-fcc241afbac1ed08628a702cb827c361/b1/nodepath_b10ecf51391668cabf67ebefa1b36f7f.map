{"version":3,"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","DEFAULT_COLLECTION_PROP","DEFAULT_SINGLE_PROP","NodePath","node","parentPath","arguments","undefined","property","index","parent","value","_enforceProp","hasOwnProperty","Error","type","setChild","childPath","getForNode","appendChild","end","insertChildAt","splice","getTraversingIndex","updateTraversingIndex","_rebuildIndex","remove","isRemoved","registry","delete","path","replace","newNode","update","nodeProps","assign","getParent","getChild","n","expressions","expression","hasEqualSource","JSON","stringify","jsonSkipLoc","jsonEncode","_ref","format","useLoc","getPreviousSibling","getNextSibling","prop","has","set","get","initRegistry","Map","clear","dx","traversingIndexStack","module","exports"],"sources":["node-path.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_COLLECTION_PROP = 'expressions';\nvar DEFAULT_SINGLE_PROP = 'expression';\n\n/**\n * NodePath class encapsulates a traversing node,\n * its parent node, property name in the parent node, and\n * an index (in case if a node is part of a collection).\n * It also provides set of methods for AST manipulation.\n */\n\nvar NodePath = function () {\n  /**\n   * NodePath constructor.\n   *\n   * @param Object node - an AST node\n   * @param NodePath parentPath - a nullable parent path\n   * @param string property - property name of the node in the parent\n   * @param number index - index of the node in a collection.\n   */\n  function NodePath(node) {\n    var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, NodePath);\n\n    this.node = node;\n    this.parentPath = parentPath;\n    this.parent = parentPath ? parentPath.node : null;\n    this.property = property;\n    this.index = index;\n  }\n\n  _createClass(NodePath, [{\n    key: '_enforceProp',\n    value: function _enforceProp(property) {\n      if (!this.node.hasOwnProperty(property)) {\n        throw new Error('Node of type ' + this.node.type + ' doesn\\'t have \"' + property + '\" collection.');\n      }\n    }\n\n    /**\n     * Sets a node into a children collection or the single child.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param number index - index at which to set\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'setChild',\n    value: function setChild(node) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\n      var childPath = void 0;\n      if (index != null) {\n        if (!property) {\n          property = DEFAULT_COLLECTION_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property][index] = node;\n        childPath = NodePath.getForNode(node, this, property, index);\n      } else {\n        if (!property) {\n          property = DEFAULT_SINGLE_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property] = node;\n        childPath = NodePath.getForNode(node, this, property, null);\n      }\n      return childPath;\n    }\n\n    /**\n     * Appends a node to a children collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'appendChild',\n    value: function appendChild(node) {\n      var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\n      if (!property) {\n        property = DEFAULT_COLLECTION_PROP;\n      }\n      this._enforceProp(property);\n      var end = this.node[property].length;\n      return this.setChild(node, end, property);\n    }\n\n    /**\n     * Inserts a node into a collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to insert into a collection\n     * @param number index - index at which to insert\n     * @param string property - name of the collection property\n     */\n\n  }, {\n    key: 'insertChildAt',\n    value: function insertChildAt(node, index) {\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_COLLECTION_PROP;\n\n      this._enforceProp(property);\n\n      this.node[property].splice(index, 0, node);\n\n      // If we inserted a node before the traversing index,\n      // we should increase the later.\n      if (index <= NodePath.getTraversingIndex()) {\n        NodePath.updateTraversingIndex(+1);\n      }\n\n      this._rebuildIndex(this.node, property);\n    }\n\n    /**\n     * Removes a node.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      if (this.isRemoved()) {\n        return;\n      }\n      NodePath.registry.delete(this.node);\n\n      this.node = null;\n\n      if (!this.parent) {\n        return;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property].splice(this.index, 1);\n\n        // If we remove a node before the traversing index,\n        // we should increase the later.\n        if (this.index <= NodePath.getTraversingIndex()) {\n          NodePath.updateTraversingIndex(-1);\n        }\n\n        // Rebuild index.\n        this._rebuildIndex(this.parent, this.property);\n\n        this.index = null;\n        this.property = null;\n\n        return;\n      }\n\n      // A simple node.\n      delete this.parent[this.property];\n      this.property = null;\n    }\n\n    /**\n     * Rebuilds child nodes index (used on remove/insert).\n     */\n\n  }, {\n    key: '_rebuildIndex',\n    value: function _rebuildIndex(parent, property) {\n      var parentPath = NodePath.getForNode(parent);\n\n      for (var i = 0; i < parent[property].length; i++) {\n        var path = NodePath.getForNode(parent[property][i], parentPath, property, i);\n        path.index = i;\n      }\n    }\n\n    /**\n     * Whether the path was removed.\n     */\n\n  }, {\n    key: 'isRemoved',\n    value: function isRemoved() {\n      return this.node === null;\n    }\n\n    /**\n     * Replaces a node with the passed one.\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(newNode) {\n      NodePath.registry.delete(this.node);\n\n      this.node = newNode;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property][this.index] = newNode;\n      }\n\n      // A simple node.\n      else {\n          this.parent[this.property] = newNode;\n        }\n\n      // Rebuild the node path for the new node.\n      return NodePath.getForNode(newNode, this.parentPath, this.property, this.index);\n    }\n\n    /**\n     * Updates a node inline.\n     */\n\n  }, {\n    key: 'update',\n    value: function update(nodeProps) {\n      Object.assign(this.node, nodeProps);\n    }\n\n    /**\n     * Returns parent.\n     */\n\n  }, {\n    key: 'getParent',\n    value: function getParent() {\n      return this.parentPath;\n    }\n\n    /**\n     * Returns nth child.\n     */\n\n  }, {\n    key: 'getChild',\n    value: function getChild() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.node.expressions) {\n        return NodePath.getForNode(this.node.expressions[n], this, DEFAULT_COLLECTION_PROP, n);\n      } else if (this.node.expression && n == 0) {\n        return NodePath.getForNode(this.node.expression, this, DEFAULT_SINGLE_PROP);\n      }\n      return null;\n    }\n\n    /**\n     * Whether a path node is syntactically equal to the passed one.\n     *\n     * NOTE: we don't rely on `source` property from the `loc` data\n     * (which would be the fastest comparison), since it might be unsync\n     * after several modifications. We use here simple `JSON.stringify`\n     * excluding the `loc` data.\n     *\n     * @param NodePath other - path to compare to.\n     * @return boolean\n     */\n\n  }, {\n    key: 'hasEqualSource',\n    value: function hasEqualSource(path) {\n      return JSON.stringify(this.node, jsonSkipLoc) === JSON.stringify(path.node, jsonSkipLoc);\n    }\n\n    /**\n     * JSON-encodes a node skipping location.\n     */\n\n  }, {\n    key: 'jsonEncode',\n    value: function jsonEncode() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          format = _ref.format,\n          useLoc = _ref.useLoc;\n\n      return JSON.stringify(this.node, useLoc ? null : jsonSkipLoc, format);\n    }\n\n    /**\n     * Returns previous sibling.\n     */\n\n  }, {\n    key: 'getPreviousSibling',\n    value: function getPreviousSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index - 1], NodePath.getForNode(this.parent), this.property, this.index - 1);\n    }\n\n    /**\n     * Returns next sibling.\n     */\n\n  }, {\n    key: 'getNextSibling',\n    value: function getNextSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index + 1], NodePath.getForNode(this.parent), this.property, this.index + 1);\n    }\n\n    /**\n     * Returns a NodePath instance for a node.\n     *\n     * The same NodePath can be reused in several places, e.g.\n     * a parent node passed for all its children.\n     */\n\n  }], [{\n    key: 'getForNode',\n    value: function getForNode(node) {\n      var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var prop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n\n      if (!node) {\n        return null;\n      }\n\n      if (!NodePath.registry.has(node)) {\n        NodePath.registry.set(node, new NodePath(node, parentPath, prop, index == -1 ? null : index));\n      }\n\n      var path = NodePath.registry.get(node);\n\n      if (parentPath !== null) {\n        path.parentPath = parentPath;\n        path.parent = path.parentPath.node;\n      }\n\n      if (prop !== null) {\n        path.property = prop;\n      }\n\n      if (index >= 0) {\n        path.index = index;\n      }\n\n      return path;\n    }\n\n    /**\n     * Initializes the NodePath registry. The registry is a map from\n     * a node to its NodePath instance.\n     */\n\n  }, {\n    key: 'initRegistry',\n    value: function initRegistry() {\n      if (!NodePath.registry) {\n        NodePath.registry = new Map();\n      }\n      NodePath.registry.clear();\n    }\n\n    /**\n     * Updates index of a currently traversing collection.\n     */\n\n  }, {\n    key: 'updateTraversingIndex',\n    value: function updateTraversingIndex(dx) {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1] += dx;\n    }\n\n    /**\n     * Returns current traversing index.\n     */\n\n  }, {\n    key: 'getTraversingIndex',\n    value: function getTraversingIndex() {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1];\n    }\n  }]);\n\n  return NodePath;\n}();\n\nNodePath.initRegistry();\n\n/**\n * Index of a currently traversing collection is stored on top of the\n * `NodePath.traversingIndexStack`. Remove/insert methods can adjust\n * this index.\n */\nNodePath.traversingIndexStack = [];\n\n// Helper function used to skip `loc` in JSON operations.\nfunction jsonSkipLoc(prop, value) {\n  if (prop === 'loc') {\n    return undefined;\n  }\n  return value;\n}\n\nmodule.exports = NodePath;"],"mappings":"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"}