c465a72cc43a2ff3d6cc519334b74250
'use strict';

/**
 * Stringifies a comment.
 *
 * Empty comment lines are left empty,
 * lines consisting of a single space are replaced by `#`,
 * and all other lines are prefixed with a `#`.
 */
const stringifyComment = str => str.replace(/^(?!$)(?: $)?/gm, '#');
function indentComment(comment, indent) {
  if (/^\n+$/.test(comment)) return comment.substring(1);
  return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;
}
const lineComment = (str, indent, comment) => str.endsWith('\n') ? indentComment(comment, indent) : comment.includes('\n') ? '\n' + indentComment(comment, indent) : (str.endsWith(' ') ? '' : ' ') + comment;
exports.indentComment = indentComment;
exports.lineComment = lineComment;
exports.stringifyComment = stringifyComment;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdHJpbmdpZnlDb21tZW50Iiwic3RyIiwicmVwbGFjZSIsImluZGVudENvbW1lbnQiLCJjb21tZW50IiwiaW5kZW50IiwidGVzdCIsInN1YnN0cmluZyIsImxpbmVDb21tZW50IiwiZW5kc1dpdGgiLCJpbmNsdWRlcyIsImV4cG9ydHMiXSwic291cmNlcyI6WyJzdHJpbmdpZnlDb21tZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTdHJpbmdpZmllcyBhIGNvbW1lbnQuXG4gKlxuICogRW1wdHkgY29tbWVudCBsaW5lcyBhcmUgbGVmdCBlbXB0eSxcbiAqIGxpbmVzIGNvbnNpc3Rpbmcgb2YgYSBzaW5nbGUgc3BhY2UgYXJlIHJlcGxhY2VkIGJ5IGAjYCxcbiAqIGFuZCBhbGwgb3RoZXIgbGluZXMgYXJlIHByZWZpeGVkIHdpdGggYSBgI2AuXG4gKi9cbmNvbnN0IHN0cmluZ2lmeUNvbW1lbnQgPSAoc3RyKSA9PiBzdHIucmVwbGFjZSgvXig/ISQpKD86ICQpPy9nbSwgJyMnKTtcbmZ1bmN0aW9uIGluZGVudENvbW1lbnQoY29tbWVudCwgaW5kZW50KSB7XG4gICAgaWYgKC9eXFxuKyQvLnRlc3QoY29tbWVudCkpXG4gICAgICAgIHJldHVybiBjb21tZW50LnN1YnN0cmluZygxKTtcbiAgICByZXR1cm4gaW5kZW50ID8gY29tbWVudC5yZXBsYWNlKC9eKD8hICokKS9nbSwgaW5kZW50KSA6IGNvbW1lbnQ7XG59XG5jb25zdCBsaW5lQ29tbWVudCA9IChzdHIsIGluZGVudCwgY29tbWVudCkgPT4gc3RyLmVuZHNXaXRoKCdcXG4nKVxuICAgID8gaW5kZW50Q29tbWVudChjb21tZW50LCBpbmRlbnQpXG4gICAgOiBjb21tZW50LmluY2x1ZGVzKCdcXG4nKVxuICAgICAgICA/ICdcXG4nICsgaW5kZW50Q29tbWVudChjb21tZW50LCBpbmRlbnQpXG4gICAgICAgIDogKHN0ci5lbmRzV2l0aCgnICcpID8gJycgOiAnICcpICsgY29tbWVudDtcblxuZXhwb3J0cy5pbmRlbnRDb21tZW50ID0gaW5kZW50Q29tbWVudDtcbmV4cG9ydHMubGluZUNvbW1lbnQgPSBsaW5lQ29tbWVudDtcbmV4cG9ydHMuc3RyaW5naWZ5Q29tbWVudCA9IHN0cmluZ2lmeUNvbW1lbnQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQSxnQkFBZ0IsR0FBSUMsR0FBRyxJQUFLQSxHQUFHLENBQUNDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxHQUFHLENBQUM7QUFDckUsU0FBU0MsYUFBYUEsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUU7RUFDcEMsSUFBSSxPQUFPLENBQUNDLElBQUksQ0FBQ0YsT0FBTyxDQUFDLEVBQ3JCLE9BQU9BLE9BQU8sQ0FBQ0csU0FBUyxDQUFDLENBQUMsQ0FBQztFQUMvQixPQUFPRixNQUFNLEdBQUdELE9BQU8sQ0FBQ0YsT0FBTyxDQUFDLFlBQVksRUFBRUcsTUFBTSxDQUFDLEdBQUdELE9BQU87QUFDbkU7QUFDQSxNQUFNSSxXQUFXLEdBQUdBLENBQUNQLEdBQUcsRUFBRUksTUFBTSxFQUFFRCxPQUFPLEtBQUtILEdBQUcsQ0FBQ1EsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUMxRE4sYUFBYSxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sQ0FBQyxHQUM5QkQsT0FBTyxDQUFDTSxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQ2xCLElBQUksR0FBR1AsYUFBYSxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sQ0FBQyxHQUNyQyxDQUFDSixHQUFHLENBQUNRLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsR0FBRyxJQUFJTCxPQUFPO0FBRWxETyxPQUFPLENBQUNSLGFBQWEsR0FBR0EsYUFBYTtBQUNyQ1EsT0FBTyxDQUFDSCxXQUFXLEdBQUdBLFdBQVc7QUFDakNHLE9BQU8sQ0FBQ1gsZ0JBQWdCLEdBQUdBLGdCQUFnQiJ9