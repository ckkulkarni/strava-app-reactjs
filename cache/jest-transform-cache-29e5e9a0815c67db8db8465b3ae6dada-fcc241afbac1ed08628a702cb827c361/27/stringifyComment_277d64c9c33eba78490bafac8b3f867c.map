{"version":3,"names":["stringifyComment","str","replace","indentComment","comment","indent","test","substring","lineComment","endsWith","includes","exports"],"sources":["stringifyComment.js"],"sourcesContent":["'use strict';\n\n/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexports.indentComment = indentComment;\nexports.lineComment = lineComment;\nexports.stringifyComment = stringifyComment;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAIC,GAAG,IAAKA,GAAG,CAACC,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC;AACrE,SAASC,aAAaA,CAACC,OAAO,EAAEC,MAAM,EAAE;EACpC,IAAI,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC,EACrB,OAAOA,OAAO,CAACG,SAAS,CAAC,CAAC,CAAC;EAC/B,OAAOF,MAAM,GAAGD,OAAO,CAACF,OAAO,CAAC,YAAY,EAAEG,MAAM,CAAC,GAAGD,OAAO;AACnE;AACA,MAAMI,WAAW,GAAGA,CAACP,GAAG,EAAEI,MAAM,EAAED,OAAO,KAAKH,GAAG,CAACQ,QAAQ,CAAC,IAAI,CAAC,GAC1DN,aAAa,CAACC,OAAO,EAAEC,MAAM,CAAC,GAC9BD,OAAO,CAACM,QAAQ,CAAC,IAAI,CAAC,GAClB,IAAI,GAAGP,aAAa,CAACC,OAAO,EAAEC,MAAM,CAAC,GACrC,CAACJ,GAAG,CAACQ,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,IAAIL,OAAO;AAElDO,OAAO,CAACR,aAAa,GAAGA,aAAa;AACrCQ,OAAO,CAACH,WAAW,GAAGA,WAAW;AACjCG,OAAO,CAACX,gBAAgB,GAAGA,gBAAgB"}