{"version":3,"names":["enums_1","require","MetadataStorage","constructor","_typeMetadatas","Map","_transformMetadatas","_exposeMetadatas","_excludeMetadatas","_ancestorsMap","addTypeMetadata","metadata","has","target","set","get","propertyName","addTransformMetadata","push","addExposeMetadata","addExcludeMetadata","findTransformMetadatas","transformationType","findMetadatas","filter","options","toClassOnly","toPlainOnly","TransformationType","CLASS_TO_CLASS","PLAIN_TO_CLASS","CLASS_TO_PLAIN","findExcludeMetadata","findMetadata","findExposeMetadata","findExposeMetadataByCustomName","name","getExposedMetadatas","find","findTypeMetadata","getStrategy","excludeMap","exclude","undefined","exposeMap","expose","getMetadata","getExcludedMetadatas","getExposedProperties","map","getExcludedProperties","clear","metadatas","metadataFromTargetMap","metadataFromTarget","Array","from","values","meta","metadataFromAncestors","ancestor","getAncestors","ancestorMetadataMap","metadataFromAncestor","concat","ancestorResult","metadataFromAncestorsTarget","slice","reverse","ancestors","baseClass","Object","getPrototypeOf","prototype","exports"],"sources":["../../src/MetadataStorage.ts"],"sourcesContent":["import { TypeMetadata, ExposeMetadata, ExcludeMetadata, TransformMetadata } from './interfaces';\nimport { TransformationType } from './enums';\n\n/**\n * Storage all library metadata.\n */\nexport class MetadataStorage {\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n\n  private _typeMetadatas = new Map<Function, Map<string, TypeMetadata>>();\n  private _transformMetadatas = new Map<Function, Map<string, TransformMetadata[]>>();\n  private _exposeMetadatas = new Map<Function, Map<string, ExposeMetadata>>();\n  private _excludeMetadatas = new Map<Function, Map<string, ExcludeMetadata>>();\n  private _ancestorsMap = new Map<Function, Function[]>();\n\n  // -------------------------------------------------------------------------\n  // Adder Methods\n  // -------------------------------------------------------------------------\n\n  addTypeMetadata(metadata: TypeMetadata): void {\n    if (!this._typeMetadatas.has(metadata.target)) {\n      this._typeMetadatas.set(metadata.target, new Map<string, TypeMetadata>());\n    }\n    this._typeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\n  }\n\n  addTransformMetadata(metadata: TransformMetadata): void {\n    if (!this._transformMetadatas.has(metadata.target)) {\n      this._transformMetadatas.set(metadata.target, new Map<string, TransformMetadata[]>());\n    }\n    if (!this._transformMetadatas.get(metadata.target).has(metadata.propertyName)) {\n      this._transformMetadatas.get(metadata.target).set(metadata.propertyName, []);\n    }\n    this._transformMetadatas.get(metadata.target).get(metadata.propertyName).push(metadata);\n  }\n\n  addExposeMetadata(metadata: ExposeMetadata): void {\n    if (!this._exposeMetadatas.has(metadata.target)) {\n      this._exposeMetadatas.set(metadata.target, new Map<string, ExposeMetadata>());\n    }\n    this._exposeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\n  }\n\n  addExcludeMetadata(metadata: ExcludeMetadata): void {\n    if (!this._excludeMetadatas.has(metadata.target)) {\n      this._excludeMetadatas.set(metadata.target, new Map<string, ExcludeMetadata>());\n    }\n    this._excludeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\n  }\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  findTransformMetadatas(\n    target: Function,\n    propertyName: string,\n    transformationType: TransformationType\n  ): TransformMetadata[] {\n    return this.findMetadatas(this._transformMetadatas, target, propertyName).filter(metadata => {\n      if (!metadata.options) return true;\n      if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n\n      if (metadata.options.toClassOnly === true) {\n        return (\n          transformationType === TransformationType.CLASS_TO_CLASS ||\n          transformationType === TransformationType.PLAIN_TO_CLASS\n        );\n      }\n      if (metadata.options.toPlainOnly === true) {\n        return transformationType === TransformationType.CLASS_TO_PLAIN;\n      }\n\n      return true;\n    });\n  }\n\n  findExcludeMetadata(target: Function, propertyName: string): ExcludeMetadata {\n    return this.findMetadata(this._excludeMetadatas, target, propertyName);\n  }\n\n  findExposeMetadata(target: Function, propertyName: string): ExposeMetadata {\n    return this.findMetadata(this._exposeMetadatas, target, propertyName);\n  }\n\n  findExposeMetadataByCustomName(target: Function, name: string): ExposeMetadata {\n    return this.getExposedMetadatas(target).find(metadata => {\n      return metadata.options && metadata.options.name === name;\n    });\n  }\n\n  findTypeMetadata(target: Function, propertyName: string): TypeMetadata {\n    return this.findMetadata(this._typeMetadatas, target, propertyName);\n  }\n\n  getStrategy(target: Function): 'excludeAll' | 'exposeAll' | 'none' {\n    const excludeMap = this._excludeMetadatas.get(target);\n    const exclude = excludeMap && excludeMap.get(undefined);\n    const exposeMap = this._exposeMetadatas.get(target);\n    const expose = exposeMap && exposeMap.get(undefined);\n    if ((exclude && expose) || (!exclude && !expose)) return 'none';\n    return exclude ? 'excludeAll' : 'exposeAll';\n  }\n\n  getExposedMetadatas(target: Function): ExposeMetadata[] {\n    return this.getMetadata(this._exposeMetadatas, target);\n  }\n\n  getExcludedMetadatas(target: Function): ExcludeMetadata[] {\n    return this.getMetadata(this._excludeMetadatas, target);\n  }\n\n  getExposedProperties(target: Function, transformationType: TransformationType): string[] {\n    return this.getExposedMetadatas(target)\n      .filter(metadata => {\n        if (!metadata.options) return true;\n        if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n\n        if (metadata.options.toClassOnly === true) {\n          return (\n            transformationType === TransformationType.CLASS_TO_CLASS ||\n            transformationType === TransformationType.PLAIN_TO_CLASS\n          );\n        }\n        if (metadata.options.toPlainOnly === true) {\n          return transformationType === TransformationType.CLASS_TO_PLAIN;\n        }\n\n        return true;\n      })\n      .map(metadata => metadata.propertyName);\n  }\n\n  getExcludedProperties(target: Function, transformationType: TransformationType): string[] {\n    return this.getExcludedMetadatas(target)\n      .filter(metadata => {\n        if (!metadata.options) return true;\n        if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true) return true;\n\n        if (metadata.options.toClassOnly === true) {\n          return (\n            transformationType === TransformationType.CLASS_TO_CLASS ||\n            transformationType === TransformationType.PLAIN_TO_CLASS\n          );\n        }\n        if (metadata.options.toPlainOnly === true) {\n          return transformationType === TransformationType.CLASS_TO_PLAIN;\n        }\n\n        return true;\n      })\n      .map(metadata => metadata.propertyName);\n  }\n\n  clear(): void {\n    this._typeMetadatas.clear();\n    this._exposeMetadatas.clear();\n    this._excludeMetadatas.clear();\n    this._ancestorsMap.clear();\n  }\n\n  // -------------------------------------------------------------------------\n  // Private Methods\n  // -------------------------------------------------------------------------\n\n  private getMetadata<T extends { target: Function; propertyName: string }>(\n    metadatas: Map<Function, Map<string, T>>,\n    target: Function\n  ): T[] {\n    const metadataFromTargetMap = metadatas.get(target);\n    let metadataFromTarget: T[];\n    if (metadataFromTargetMap) {\n      metadataFromTarget = Array.from(metadataFromTargetMap.values()).filter(meta => meta.propertyName !== undefined);\n    }\n    const metadataFromAncestors: T[] = [];\n    for (const ancestor of this.getAncestors(target)) {\n      const ancestorMetadataMap = metadatas.get(ancestor);\n      if (ancestorMetadataMap) {\n        const metadataFromAncestor = Array.from(ancestorMetadataMap.values()).filter(\n          meta => meta.propertyName !== undefined\n        );\n        metadataFromAncestors.push(...metadataFromAncestor);\n      }\n    }\n    return metadataFromAncestors.concat(metadataFromTarget || []);\n  }\n\n  private findMetadata<T extends { target: Function; propertyName: string }>(\n    metadatas: Map<Function, Map<string, T>>,\n    target: Function,\n    propertyName: string\n  ): T {\n    const metadataFromTargetMap = metadatas.get(target);\n    if (metadataFromTargetMap) {\n      const metadataFromTarget = metadataFromTargetMap.get(propertyName);\n      if (metadataFromTarget) {\n        return metadataFromTarget;\n      }\n    }\n    for (const ancestor of this.getAncestors(target)) {\n      const ancestorMetadataMap = metadatas.get(ancestor);\n      if (ancestorMetadataMap) {\n        const ancestorResult = ancestorMetadataMap.get(propertyName);\n        if (ancestorResult) {\n          return ancestorResult;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  private findMetadatas<T extends { target: Function; propertyName: string }>(\n    metadatas: Map<Function, Map<string, T[]>>,\n    target: Function,\n    propertyName: string\n  ): T[] {\n    const metadataFromTargetMap = metadatas.get(target);\n    let metadataFromTarget: T[];\n    if (metadataFromTargetMap) {\n      metadataFromTarget = metadataFromTargetMap.get(propertyName);\n    }\n    const metadataFromAncestorsTarget: T[] = [];\n    for (const ancestor of this.getAncestors(target)) {\n      const ancestorMetadataMap = metadatas.get(ancestor);\n      if (ancestorMetadataMap) {\n        if (ancestorMetadataMap.has(propertyName)) {\n          metadataFromAncestorsTarget.push(...ancestorMetadataMap.get(propertyName));\n        }\n      }\n    }\n    return metadataFromAncestorsTarget\n      .slice()\n      .reverse()\n      .concat((metadataFromTarget || []).slice().reverse());\n  }\n\n  private getAncestors(target: Function): Function[] {\n    if (!target) return [];\n    if (!this._ancestorsMap.has(target)) {\n      const ancestors: Function[] = [];\n      for (\n        let baseClass = Object.getPrototypeOf(target.prototype.constructor);\n        typeof baseClass.prototype !== 'undefined';\n        baseClass = Object.getPrototypeOf(baseClass.prototype.constructor)\n      ) {\n        ancestors.push(baseClass);\n      }\n      this._ancestorsMap.set(target, ancestors);\n    }\n    return this._ancestorsMap.get(target);\n  }\n}\n"],"mappings":"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"}