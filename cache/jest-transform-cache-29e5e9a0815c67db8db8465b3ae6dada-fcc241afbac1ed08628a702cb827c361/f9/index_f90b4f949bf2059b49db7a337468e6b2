4616d4f92c57ce3d43b30e539b571352
/**
 * The MIT License (MIT)
 * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>
 */

'use strict';

var regexpTreeParser = require('./generated/regexp-tree');

/**
 * Original parse function.
 */
var generatedParseFn = regexpTreeParser.parse.bind(regexpTreeParser);

/**
 * Parses a regular expression.
 *
 * Override original `regexpTreeParser.parse` to convert a value to a string,
 * since in regexp-tree we may pass strings, and RegExp instance.
 */
regexpTreeParser.parse = function (regexp, options) {
  return generatedParseFn('' + regexp, options);
};

// By default do not capture locations; callers may override.
regexpTreeParser.setOptions({
  captureLocations: false
});
module.exports = regexpTreeParser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWdleHBUcmVlUGFyc2VyIiwicmVxdWlyZSIsImdlbmVyYXRlZFBhcnNlRm4iLCJwYXJzZSIsImJpbmQiLCJyZWdleHAiLCJvcHRpb25zIiwic2V0T3B0aW9ucyIsImNhcHR1cmVMb2NhdGlvbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgTUlUIExpY2Vuc2UgKE1JVClcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50IERtaXRyeSBTb3Nobmlrb3YgPGRtaXRyeS5zb3Nobmlrb3ZAZ21haWwuY29tPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHJlZ2V4cFRyZWVQYXJzZXIgPSByZXF1aXJlKCcuL2dlbmVyYXRlZC9yZWdleHAtdHJlZScpO1xuXG4vKipcbiAqIE9yaWdpbmFsIHBhcnNlIGZ1bmN0aW9uLlxuICovXG52YXIgZ2VuZXJhdGVkUGFyc2VGbiA9IHJlZ2V4cFRyZWVQYXJzZXIucGFyc2UuYmluZChyZWdleHBUcmVlUGFyc2VyKTtcblxuLyoqXG4gKiBQYXJzZXMgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogT3ZlcnJpZGUgb3JpZ2luYWwgYHJlZ2V4cFRyZWVQYXJzZXIucGFyc2VgIHRvIGNvbnZlcnQgYSB2YWx1ZSB0byBhIHN0cmluZyxcbiAqIHNpbmNlIGluIHJlZ2V4cC10cmVlIHdlIG1heSBwYXNzIHN0cmluZ3MsIGFuZCBSZWdFeHAgaW5zdGFuY2UuXG4gKi9cbnJlZ2V4cFRyZWVQYXJzZXIucGFyc2UgPSBmdW5jdGlvbiAocmVnZXhwLCBvcHRpb25zKSB7XG4gIHJldHVybiBnZW5lcmF0ZWRQYXJzZUZuKCcnICsgcmVnZXhwLCBvcHRpb25zKTtcbn07XG5cbi8vIEJ5IGRlZmF1bHQgZG8gbm90IGNhcHR1cmUgbG9jYXRpb25zOyBjYWxsZXJzIG1heSBvdmVycmlkZS5cbnJlZ2V4cFRyZWVQYXJzZXIuc2V0T3B0aW9ucyh7IGNhcHR1cmVMb2NhdGlvbnM6IGZhbHNlIH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlZ2V4cFRyZWVQYXJzZXI7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZOztBQUVaLElBQUlBLGdCQUFnQixHQUFHQyxPQUFPLENBQUMseUJBQXlCLENBQUM7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBLElBQUlDLGdCQUFnQixHQUFHRixnQkFBZ0IsQ0FBQ0csS0FBSyxDQUFDQyxJQUFJLENBQUNKLGdCQUFnQixDQUFDOztBQUVwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsZ0JBQWdCLENBQUNHLEtBQUssR0FBRyxVQUFVRSxNQUFNLEVBQUVDLE9BQU8sRUFBRTtFQUNsRCxPQUFPSixnQkFBZ0IsQ0FBQyxFQUFFLEdBQUdHLE1BQU0sRUFBRUMsT0FBTyxDQUFDO0FBQy9DLENBQUM7O0FBRUQ7QUFDQU4sZ0JBQWdCLENBQUNPLFVBQVUsQ0FBQztFQUFFQyxnQkFBZ0IsRUFBRTtBQUFNLENBQUMsQ0FBQztBQUV4REMsTUFBTSxDQUFDQyxPQUFPLEdBQUdWLGdCQUFnQiJ9