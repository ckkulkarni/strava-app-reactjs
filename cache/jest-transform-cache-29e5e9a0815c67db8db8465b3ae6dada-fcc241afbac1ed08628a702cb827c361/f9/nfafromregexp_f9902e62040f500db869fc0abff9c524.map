{"version":3,"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","parser","require","_require","alt","char","or","rep","plusRep","questionRep","gen","node","generator","type","Error","RegExp","flags","body","Alternative","fragments","expressions","map","apply","undefined","Disjunction","left","right","Repetition","quantifier","kind","expression","Char","value","Group","module","exports","build","regexp","ast","parse","captureLocations"],"sources":["nfa-from-regexp.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar parser = require('../../../parser');\n\nvar _require = require('./builders'),\n    alt = _require.alt,\n    char = _require.char,\n    or = _require.or,\n    rep = _require.rep,\n    plusRep = _require.plusRep,\n    questionRep = _require.questionRep;\n\n/**\n * Helper `gen` function calls node type handler.\n */\n\n\nfunction gen(node) {\n  if (node && !generator[node.type]) {\n    throw new Error(node.type + ' is not supported in NFA/DFA interpreter.');\n  }\n\n  return node ? generator[node.type](node) : '';\n}\n\n/**\n * AST handler.\n */\nvar generator = {\n  RegExp: function RegExp(node) {\n    if (node.flags !== '') {\n      throw new Error('NFA/DFA: Flags are not supported yet.');\n    }\n\n    return gen(node.body);\n  },\n  Alternative: function Alternative(node) {\n    var fragments = (node.expressions || []).map(gen);\n    return alt.apply(undefined, _toConsumableArray(fragments));\n  },\n  Disjunction: function Disjunction(node) {\n    return or(gen(node.left), gen(node.right));\n  },\n  Repetition: function Repetition(node) {\n    switch (node.quantifier.kind) {\n      case '*':\n        return rep(gen(node.expression));\n      case '+':\n        return plusRep(gen(node.expression));\n      case '?':\n        return questionRep(gen(node.expression));\n      default:\n        throw new Error('Unknown repeatition: ' + node.quantifier.kind + '.');\n    }\n  },\n  Char: function Char(node) {\n    if (node.kind !== 'simple') {\n      throw new Error('NFA/DFA: Only simple chars are supported yet.');\n    }\n\n    return char(node.value);\n  },\n  Group: function Group(node) {\n    return gen(node.expression);\n  }\n};\n\nmodule.exports = {\n  /**\n   * Builds an NFA from the passed regexp.\n   */\n  build: function build(regexp) {\n    var ast = regexp;\n\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp, {\n        captureLocations: true\n      });\n    }\n\n    return gen(ast);\n  }\n};"],"mappings":"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"}