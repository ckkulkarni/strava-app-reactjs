{"version":3,"names":["util_1","require","builder_1","__importDefault","fs_1","path_1","initializeFormatters","env","cwd","stdout","logger","onStreamError","eventBroadcaster","eventDataCollector","configuration","supportCodeLibrary","initializeFormatter","stream","target","type","on","error","message","typeOptions","log","write","bind","parsedArgvOptions","options","cleanup","Promise","resolve","promisify","end","isTTY","warn","default","build","formatters","push","Object","entries","files","createWriteStream","fd","open","all","map","f","finished","exports"],"sources":["../../src/api/formatters.ts"],"sourcesContent":["import Formatter, { IFormatterStream } from '../formatter'\nimport { EventEmitter } from 'events'\nimport { EventDataCollector } from '../formatter/helpers'\nimport { ISupportCodeLibrary } from '../support_code_library_builder/types'\nimport { promisify } from 'util'\nimport { WriteStream as TtyWriteStream } from 'tty'\nimport FormatterBuilder from '../formatter/builder'\nimport fs from 'mz/fs'\nimport path from 'path'\nimport { IRunOptionsFormats } from './types'\nimport { ILogger } from '../logger'\n\nexport async function initializeFormatters({\n  env,\n  cwd,\n  stdout,\n  logger,\n  onStreamError,\n  eventBroadcaster,\n  eventDataCollector,\n  configuration,\n  supportCodeLibrary,\n}: {\n  env: NodeJS.ProcessEnv\n  cwd: string\n  stdout: IFormatterStream\n  stderr: IFormatterStream\n  logger: ILogger\n  onStreamError: () => void\n  eventBroadcaster: EventEmitter\n  eventDataCollector: EventDataCollector\n  configuration: IRunOptionsFormats\n  supportCodeLibrary: ISupportCodeLibrary\n}): Promise<() => Promise<void>> {\n  async function initializeFormatter(\n    stream: IFormatterStream,\n    target: string,\n    type: string\n  ): Promise<Formatter> {\n    stream.on('error', (error: Error) => {\n      logger.error(error.message)\n      onStreamError()\n    })\n    const typeOptions = {\n      env,\n      cwd,\n      eventBroadcaster,\n      eventDataCollector,\n      log: stream.write.bind(stream),\n      parsedArgvOptions: configuration.options,\n      stream,\n      cleanup:\n        stream === stdout\n          ? async () => await Promise.resolve()\n          : promisify<any>(stream.end.bind(stream)),\n      supportCodeLibrary,\n    }\n    if (type === 'progress-bar' && !(stream as TtyWriteStream).isTTY) {\n      logger.warn(\n        `Cannot use 'progress-bar' formatter for output to '${target}' as not a TTY. Switching to 'progress' formatter.`\n      )\n      type = 'progress'\n    }\n    return await FormatterBuilder.build(type, typeOptions)\n  }\n\n  const formatters: Formatter[] = []\n\n  formatters.push(\n    await initializeFormatter(stdout, 'stdout', configuration.stdout)\n  )\n\n  for (const [target, type] of Object.entries(configuration.files)) {\n    const stream: IFormatterStream = fs.createWriteStream(null, {\n      fd: await fs.open(path.resolve(cwd, target), 'w'),\n    })\n    formatters.push(await initializeFormatter(stream, target, type))\n  }\n\n  return async function () {\n    await Promise.all(formatters.map(async (f) => await f.finished()))\n  }\n}\n"],"mappings":";;;;;;;;;;;AAIA,MAAAA,MAAA,GAAAC,OAAA;AAEA,MAAAC,SAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,MAAAG,IAAA,GAAAD,eAAA,CAAAF,OAAA;AACA,MAAAI,MAAA,GAAAF,eAAA,CAAAF,OAAA;AAIO,eAAeK,oBAAoBA,CAAC;EACzCC,GAAG;EACHC,GAAG;EACHC,MAAM;EACNC,MAAM;EACNC,aAAa;EACbC,gBAAgB;EAChBC,kBAAkB;EAClBC,aAAa;EACbC;AAAkB,CAYnB;EACC,eAAeC,mBAAmBA,CAChCC,MAAwB,EACxBC,MAAc,EACdC,IAAY;IAEZF,MAAM,CAACG,EAAE,CAAC,OAAO,EAAGC,KAAY,IAAI;MAClCX,MAAM,CAACW,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;MAC3BX,aAAa,EAAE;IACjB,CAAC,CAAC;IACF,MAAMY,WAAW,GAAG;MAClBhB,GAAG;MACHC,GAAG;MACHI,gBAAgB;MAChBC,kBAAkB;MAClBW,GAAG,EAAEP,MAAM,CAACQ,KAAK,CAACC,IAAI,CAACT,MAAM,CAAC;MAC9BU,iBAAiB,EAAEb,aAAa,CAACc,OAAO;MACxCX,MAAM;MACNY,OAAO,EACLZ,MAAM,KAAKR,MAAM,GACb,YAAY,MAAMqB,OAAO,CAACC,OAAO,EAAE,GACnC,IAAA/B,MAAA,CAAAgC,SAAS,EAAMf,MAAM,CAACgB,GAAG,CAACP,IAAI,CAACT,MAAM,CAAC,CAAC;MAC7CF;KACD;IACD,IAAII,IAAI,KAAK,cAAc,IAAI,CAAEF,MAAyB,CAACiB,KAAK,EAAE;MAChExB,MAAM,CAACyB,IAAI,CACT,sDAAsDjB,MAAM,oDAAoD,CACjH;MACDC,IAAI,GAAG,UAAU;;IAEnB,OAAO,MAAMjB,SAAA,CAAAkC,OAAgB,CAACC,KAAK,CAAClB,IAAI,EAAEI,WAAW,CAAC;EACxD;EAEA,MAAMe,UAAU,GAAgB,EAAE;EAElCA,UAAU,CAACC,IAAI,CACb,MAAMvB,mBAAmB,CAACP,MAAM,EAAE,QAAQ,EAAEK,aAAa,CAACL,MAAM,CAAC,CAClE;EAED,KAAK,MAAM,CAACS,MAAM,EAAEC,IAAI,CAAC,IAAIqB,MAAM,CAACC,OAAO,CAAC3B,aAAa,CAAC4B,KAAK,CAAC,EAAE;IAChE,MAAMzB,MAAM,GAAqBb,IAAA,CAAAgC,OAAE,CAACO,iBAAiB,CAAC,IAAI,EAAE;MAC1DC,EAAE,EAAE,MAAMxC,IAAA,CAAAgC,OAAE,CAACS,IAAI,CAACxC,MAAA,CAAA+B,OAAI,CAACL,OAAO,CAACvB,GAAG,EAAEU,MAAM,CAAC,EAAE,GAAG;KACjD,CAAC;IACFoB,UAAU,CAACC,IAAI,CAAC,MAAMvB,mBAAmB,CAACC,MAAM,EAAEC,MAAM,EAAEC,IAAI,CAAC,CAAC;;EAGlE,OAAO,kBAAK;IACV,MAAMW,OAAO,CAACgB,GAAG,CAACR,UAAU,CAACS,GAAG,CAAC,MAAOC,CAAC,IAAK,MAAMA,CAAC,CAACC,QAAQ,EAAE,CAAC,CAAC;EACpE,CAAC;AACH;AAtEAC,OAAA,CAAA5C,oBAAA,GAAAA,oBAAA"}