1e53b8eaa8fbc62a59e4a13c0cf2cd45
"use strict";

var castSlice = require('./_castSlice'),
  hasUnicode = require('./_hasUnicode'),
  stringToArray = require('./_stringToArray'),
  toString = require('./toString');

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function (string) {
    string = toString(string);
    var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
    var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
    return chr[methodName]() + trailing;
  };
}
module.exports = createCaseFirst;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYXN0U2xpY2UiLCJyZXF1aXJlIiwiaGFzVW5pY29kZSIsInN0cmluZ1RvQXJyYXkiLCJ0b1N0cmluZyIsImNyZWF0ZUNhc2VGaXJzdCIsIm1ldGhvZE5hbWUiLCJzdHJpbmciLCJzdHJTeW1ib2xzIiwidW5kZWZpbmVkIiwiY2hyIiwiY2hhckF0IiwidHJhaWxpbmciLCJqb2luIiwic2xpY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiX2NyZWF0ZUNhc2VGaXJzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2FzdFNsaWNlID0gcmVxdWlyZSgnLi9fY2FzdFNsaWNlJyksXG4gICAgaGFzVW5pY29kZSA9IHJlcXVpcmUoJy4vX2hhc1VuaWNvZGUnKSxcbiAgICBzdHJpbmdUb0FycmF5ID0gcmVxdWlyZSgnLi9fc3RyaW5nVG9BcnJheScpLFxuICAgIHRvU3RyaW5nID0gcmVxdWlyZSgnLi90b1N0cmluZycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiBsaWtlIGBfLmxvd2VyRmlyc3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gbWV0aG9kTmFtZSBUaGUgbmFtZSBvZiB0aGUgYFN0cmluZ2AgY2FzZSBtZXRob2QgdG8gdXNlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgY2FzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2FzZUZpcnN0KG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyk7XG5cbiAgICB2YXIgc3RyU3ltYm9scyA9IGhhc1VuaWNvZGUoc3RyaW5nKVxuICAgICAgPyBzdHJpbmdUb0FycmF5KHN0cmluZylcbiAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgdmFyIGNociA9IHN0clN5bWJvbHNcbiAgICAgID8gc3RyU3ltYm9sc1swXVxuICAgICAgOiBzdHJpbmcuY2hhckF0KDApO1xuXG4gICAgdmFyIHRyYWlsaW5nID0gc3RyU3ltYm9sc1xuICAgICAgPyBjYXN0U2xpY2Uoc3RyU3ltYm9scywgMSkuam9pbignJylcbiAgICAgIDogc3RyaW5nLnNsaWNlKDEpO1xuXG4gICAgcmV0dXJuIGNoclttZXRob2ROYW1lXSgpICsgdHJhaWxpbmc7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQ2FzZUZpcnN0O1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFNBQVMsR0FBR0MsT0FBTyxDQUFDLGNBQWMsQ0FBQztFQUNuQ0MsVUFBVSxHQUFHRCxPQUFPLENBQUMsZUFBZSxDQUFDO0VBQ3JDRSxhQUFhLEdBQUdGLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQztFQUMzQ0csUUFBUSxHQUFHSCxPQUFPLENBQUMsWUFBWSxDQUFDOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNJLGVBQWVBLENBQUNDLFVBQVUsRUFBRTtFQUNuQyxPQUFPLFVBQVNDLE1BQU0sRUFBRTtJQUN0QkEsTUFBTSxHQUFHSCxRQUFRLENBQUNHLE1BQU0sQ0FBQztJQUV6QixJQUFJQyxVQUFVLEdBQUdOLFVBQVUsQ0FBQ0ssTUFBTSxDQUFDLEdBQy9CSixhQUFhLENBQUNJLE1BQU0sQ0FBQyxHQUNyQkUsU0FBUztJQUViLElBQUlDLEdBQUcsR0FBR0YsVUFBVSxHQUNoQkEsVUFBVSxDQUFDLENBQUMsQ0FBQyxHQUNiRCxNQUFNLENBQUNJLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFcEIsSUFBSUMsUUFBUSxHQUFHSixVQUFVLEdBQ3JCUixTQUFTLENBQUNRLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQ0ssSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUNqQ04sTUFBTSxDQUFDTyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBRW5CLE9BQU9KLEdBQUcsQ0FBQ0osVUFBVSxDQUFDLEVBQUUsR0FBR00sUUFBUTtFQUNyQyxDQUFDO0FBQ0g7QUFFQUcsTUFBTSxDQUFDQyxPQUFPLEdBQUdYLGVBQWUifQ==