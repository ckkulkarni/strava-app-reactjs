ec1ca4c563ab7a5bc1bb9cfc6e1091fa
"use strict";

var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _PaymentScreen = _interopRequireDefault(require("./../../PaymentScreen"));
require("@testing-library/jest-dom/extend-expect");
var _jestCucumber = require("jest-cucumber");
var _reactRouterDom = require("react-router-dom");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
let store;
const feature = (0, _jestCucumber.loadFeature)("src/components/features/paymentscreen.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User pays for occupied parking spot", ({
    given,
    then,
    when,
    and
  }) => {
    given("I am on the Payment Screen", () => {
      const state = {
        spaceDetails: {
          registration: "ABC123",
          parkingTime: "08:30"
        },
        space: 1
      };
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, {
        initialEntries: ["/payment"]
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react.default.createElement(Wrapper, null, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
        path: "/payment",
        element: /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null)
      })))));
    });
    when("I click on the Make Payment button", async () => {
      const paymentButton = _react2.screen.getByTestId("paymentButton");
      _react2.fireEvent.click(paymentButton);
      await _react2.screen.findByText("Payment Successful!");
    });
    function Wrapper({
      children
    }) {
      const location = (0, _reactRouterDom.useLocation)();
      return /*#__PURE__*/_react.default.createElement("div", null, children);
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfUGF5bWVudFNjcmVlbiIsIl9qZXN0Q3VjdW1iZXIiLCJfcmVhY3RSb3V0ZXJEb20iLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInN0b3JlIiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJnaXZlbiIsInRoZW4iLCJ3aGVuIiwiYW5kIiwic3RhdGUiLCJzcGFjZURldGFpbHMiLCJyZWdpc3RyYXRpb24iLCJwYXJraW5nVGltZSIsInNwYWNlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIk1lbW9yeVJvdXRlciIsImluaXRpYWxFbnRyaWVzIiwiUm91dGVzIiwiV3JhcHBlciIsIlJvdXRlIiwicGF0aCIsImVsZW1lbnQiLCJwYXltZW50QnV0dG9uIiwic2NyZWVuIiwiZ2V0QnlUZXN0SWQiLCJmaXJlRXZlbnQiLCJjbGljayIsImZpbmRCeVRleHQiLCJjaGlsZHJlbiIsImxvY2F0aW9uIiwidXNlTG9jYXRpb24iXSwic291cmNlcyI6WyJwYXltZW50c2NyZWVuLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHNjcmVlbiwgcmVuZGVyLCBmaXJlRXZlbnQgfSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdFwiO1xyXG5pbXBvcnQgUGF5bWVudFNjcmVlbiBmcm9tIFwiLi8uLi8uLi9QYXltZW50U2NyZWVuXCI7XHJcbmltcG9ydCBcIkB0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20vZXh0ZW5kLWV4cGVjdFwiO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgeyBjb25maWd1cmVTdG9yZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbmltcG9ydCB7IGRlZmluZUZlYXR1cmUsIGxvYWRGZWF0dXJlIH0gZnJvbSBcImplc3QtY3VjdW1iZXJcIjtcclxuaW1wb3J0IHtcclxuICBCcm93c2VyUm91dGVyIGFzIFJvdXRlcixcclxuICBSb3V0ZXMsXHJcbiAgUm91dGUsXHJcbiAgTWVtb3J5Um91dGVyLFxyXG4gIHVzZUxvY2F0aW9uLFxyXG59IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmxldCBzdG9yZTogYW55O1xyXG5jb25zdCBmZWF0dXJlID0gbG9hZEZlYXR1cmUoXCJzcmMvY29tcG9uZW50cy9mZWF0dXJlcy9wYXltZW50c2NyZWVuLmZlYXR1cmVcIik7XHJcbmRlZmluZUZlYXR1cmUoZmVhdHVyZSwgKHRlc3QpID0+IHtcclxuICB0ZXN0KFwiVXNlciBwYXlzIGZvciBvY2N1cGllZCBwYXJraW5nIHNwb3RcIiwgKHsgZ2l2ZW4sIHRoZW4sIHdoZW4sIGFuZCB9KSA9PiB7XHJcbiAgICBnaXZlbihcIkkgYW0gb24gdGhlIFBheW1lbnQgU2NyZWVuXCIsICgpID0+IHtcclxuICAgICAgY29uc3Qgc3RhdGUgPSB7XHJcbiAgICAgICAgc3BhY2VEZXRhaWxzOiB7XHJcbiAgICAgICAgICByZWdpc3RyYXRpb246IFwiQUJDMTIzXCIsXHJcbiAgICAgICAgICBwYXJraW5nVGltZTogXCIwODozMFwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc3BhY2U6IDEsXHJcbiAgICAgIH07XHJcbiAgICAgIHJlbmRlcihcclxuICAgICAgICA8TWVtb3J5Um91dGVyIGluaXRpYWxFbnRyaWVzPXtbXCIvcGF5bWVudFwiXX0+XHJcbiAgICAgICAgICA8Um91dGVzPlxyXG4gICAgICAgICAgICA8V3JhcHBlcj5cclxuICAgICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9wYXltZW50XCIgZWxlbWVudD17PFBheW1lbnRTY3JlZW4gLz59IC8+XHJcbiAgICAgICAgICAgIDwvV3JhcHBlcj5cclxuICAgICAgICAgIDwvUm91dGVzPlxyXG4gICAgICAgIDwvTWVtb3J5Um91dGVyPlxyXG4gICAgICApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgd2hlbihcIkkgY2xpY2sgb24gdGhlIE1ha2UgUGF5bWVudCBidXR0b25cIiwgYXN5bmMgKCkgPT4ge1xyXG4gICAgICBjb25zdCBwYXltZW50QnV0dG9uID0gc2NyZWVuLmdldEJ5VGVzdElkKFwicGF5bWVudEJ1dHRvblwiKTtcclxuICAgICAgZmlyZUV2ZW50LmNsaWNrKHBheW1lbnRCdXR0b24pO1xyXG4gICAgICBhd2FpdCBzY3JlZW4uZmluZEJ5VGV4dChcIlBheW1lbnQgU3VjY2Vzc2Z1bCFcIik7XHJcbiAgICB9KTtcclxuXHJcbiAgICBmdW5jdGlvbiBXcmFwcGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcclxuICAgICAgY29uc3QgbG9jYXRpb24gPSB1c2VMb2NhdGlvbigpO1xyXG4gICAgICByZXR1cm4gPGRpdj57Y2hpbGRyZW59PC9kaXY+O1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGNBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBQSxPQUFBO0FBR0EsSUFBQUcsYUFBQSxHQUFBSCxPQUFBO0FBQ0EsSUFBQUksZUFBQSxHQUFBSixPQUFBO0FBTTBCLFNBQUFELHVCQUFBTSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBQzFCLElBQUlHLEtBQVU7QUFDZCxNQUFNQyxPQUFPLEdBQUcsSUFBQUMseUJBQVcsRUFBQywrQ0FBK0MsQ0FBQztBQUM1RSxJQUFBQywyQkFBYSxFQUFDRixPQUFPLEVBQUdHLElBQUksSUFBSztFQUMvQkEsSUFBSSxDQUFDLHFDQUFxQyxFQUFFLENBQUM7SUFBRUMsS0FBSztJQUFFQyxJQUFJO0lBQUVDLElBQUk7SUFBRUM7RUFBSSxDQUFDLEtBQUs7SUFDMUVILEtBQUssQ0FBQyw0QkFBNEIsRUFBRSxNQUFNO01BQ3hDLE1BQU1JLEtBQUssR0FBRztRQUNaQyxZQUFZLEVBQUU7VUFDWkMsWUFBWSxFQUFFLFFBQVE7VUFDdEJDLFdBQVcsRUFBRTtRQUNmLENBQUM7UUFDREMsS0FBSyxFQUFFO01BQ1QsQ0FBQztNQUNELElBQUFDLGNBQU0sZ0JBQ0p4QixNQUFBLENBQUFTLE9BQUEsQ0FBQWdCLGFBQUEsQ0FBQ25CLGVBQUEsQ0FBQW9CLFlBQVk7UUFBQ0MsY0FBYyxFQUFFLENBQUMsVUFBVTtNQUFFLGdCQUN6QzNCLE1BQUEsQ0FBQVMsT0FBQSxDQUFBZ0IsYUFBQSxDQUFDbkIsZUFBQSxDQUFBc0IsTUFBTSxxQkFDTDVCLE1BQUEsQ0FBQVMsT0FBQSxDQUFBZ0IsYUFBQSxDQUFDSSxPQUFPLHFCQUNON0IsTUFBQSxDQUFBUyxPQUFBLENBQUFnQixhQUFBLENBQUNuQixlQUFBLENBQUF3QixLQUFLO1FBQUNDLElBQUksRUFBQyxVQUFVO1FBQUNDLE9BQU8sZUFBRWhDLE1BQUEsQ0FBQVMsT0FBQSxDQUFBZ0IsYUFBQSxDQUFDckIsY0FBQSxDQUFBSyxPQUFhO01BQUksRUFBRyxDQUM3QyxDQUNILENBQ0ksQ0FDaEI7SUFDSCxDQUFDLENBQUM7SUFFRlEsSUFBSSxDQUFDLG9DQUFvQyxFQUFFLFlBQVk7TUFDckQsTUFBTWdCLGFBQWEsR0FBR0MsY0FBTSxDQUFDQyxXQUFXLENBQUMsZUFBZSxDQUFDO01BQ3pEQyxpQkFBUyxDQUFDQyxLQUFLLENBQUNKLGFBQWEsQ0FBQztNQUM5QixNQUFNQyxjQUFNLENBQUNJLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQztJQUNoRCxDQUFDLENBQUM7SUFFRixTQUFTVCxPQUFPQSxDQUFDO01BQUVVO0lBQXdDLENBQUMsRUFBRTtNQUM1RCxNQUFNQyxRQUFRLEdBQUcsSUFBQUMsMkJBQVcsR0FBRTtNQUM5QixvQkFBT3pDLE1BQUEsQ0FBQVMsT0FBQSxDQUFBZ0IsYUFBQSxjQUFNYyxRQUFRLENBQU87SUFDOUI7RUFDRixDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==