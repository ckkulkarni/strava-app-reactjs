{"version":3,"names":["Collection","require","Node","stringify","stringifyComment","stringifyCollection","collection","ctx","options","flow","inFlow","stringifyFlowCollection","stringifyBlockCollection","comment","items","blockItemPrefix","flowChars","itemIndent","onChompKeep","onComment","indent","commentString","itemCtx","Object","assign","type","chompKeep","lines","i","length","item","isNode","spaceBefore","push","addCommentBefore","commentBefore","isPair","ik","key","str","lineComment","start","end","line","indentComment","indentStep","flowCollectionPadding","fcPadding","reqNewline","linesAtValue","iv","value","includes","len","reduce","sum","maxFlowStringSingleLineLength","join","replace","ic","trimStart","exports"],"sources":["stringifyCollection.js"],"sourcesContent":["'use strict';\n\nvar Collection = require('../nodes/Collection.js');\nvar Node = require('../nodes/Node.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (Node.isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (Node.isPair(item)) {\n            const ik = Node.isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify.stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += stringifyComment.lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + stringifyComment.indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (Node.isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (Node.isPair(item)) {\n            const ik = Node.isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = Node.isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify.stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += stringifyComment.lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n    if (comment) {\n        str += stringifyComment.lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = stringifyComment.indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexports.stringifyCollection = stringifyCollection;\n"],"mappings":"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"}