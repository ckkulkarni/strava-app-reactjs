{"version":3,"names":["Object","defineProperty","exports","value","default","runTest","_chalk","data","_interopRequireDefault","require","fs","_interopRequireWildcard","_sourceMapSupport","_console","_transform","docblock","_jestLeakDetector","_jestMessageUtil","_jestResolve","_jestUtil","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","freezeConsole","testConsole","config","_log","fakeConsolePush","_type","message","error","ErrorWithStack","red","bold","formattedError","formatExecError","noStackTrace","undefined","process","stderr","write","exitCode","runTestInternal","path","globalConfig","resolver","context","sendMessageToJest","testSource","readFileSync","docblockPragmas","parse","extract","customEnvironment","testEnvironment","Array","isArray","Error","join","resolveTestEnvironment","requireResolveFunction","resolve","cacheFS","Map","transformer","createScriptTransformer","TestEnvironment","requireAndTranspileModule","testFramework","env","JEST_JASMINE","testRunner","Runtime","interopRequireDefault","moduleLoader","consoleOut","useStderr","stdout","consoleFormatter","type","getConsoleOutput","BufferedConsole","silent","NullConsole","verbose","CustomConsole","environment","console","testPath","getVmContext","exit","leakDetector","detectLeaks","setGlobal","global","runtime","changedFiles","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageProvider","sourcesRelatedToTestsInChangedFiles","start","Date","now","setupFiles","esm","unstable_shouldLoadAsEsm","unstable_importModule","requireModule","sourcemapOptions","handleUncaughtExceptions","retrieveSourceMap","source","_runtime$getSourceMap","sourceMapSource","getSourceMaps","map","JSON","url","requireInternalModule","install","realExit","args","collectV8Coverage","setup","result","err","stack","stopCollectingV8Coverage","testCount","numPassingTests","numFailingTests","numPendingTests","numTodoTests","end","testRuntime","perfStats","slow","slowTestThreshold","testFilePath","getBuffer","skipped","displayName","coverage","getAllCoverageInfoCopy","coverageKeys","keys","length","v8Coverage","getAllV8CoverageInfoCopy","logHeapUsage","gc","memoryUsage","heapUsed","Promise","setImmediate","teardown","resetRetrieveHandlers","setTimeout","leaks","isLeaking"],"sources":["runTest.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = runTest;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n\n  fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMapSupport() {\n  const data = _interopRequireDefault(require('source-map-support'));\n\n  _sourceMapSupport = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  const data = require('@jest/console');\n\n  _console = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _transform() {\n  const data = require('@jest/transform');\n\n  _transform = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction docblock() {\n  const data = _interopRequireWildcard(require('jest-docblock'));\n\n  docblock = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestLeakDetector() {\n  const data = _interopRequireDefault(require('jest-leak-detector'));\n\n  _jestLeakDetector = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestResolve() {\n  const data = require('jest-resolve');\n\n  _jestResolve = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction freezeConsole(testConsole, config) {\n  // @ts-expect-error: `_log` is `private` - we should figure out some proper API here\n  testConsole._log = function fakeConsolePush(_type, message) {\n    const error = new (_jestUtil().ErrorWithStack)(\n      `${_chalk().default.red(\n        `${_chalk().default.bold(\n          'Cannot log after tests are done.'\n        )} Did you forget to wait for something async in your test?`\n      )}\\nAttempted to log \"${message}\".`,\n      fakeConsolePush\n    );\n    const formattedError = (0, _jestMessageUtil().formatExecError)(\n      error,\n      config,\n      {\n        noStackTrace: false\n      },\n      undefined,\n      true\n    );\n    process.stderr.write('\\n' + formattedError + '\\n');\n    process.exitCode = 1;\n  };\n} // Keeping the core of \"runTest\" as a separate function (as \"runTestInternal\")\n// is key to be able to detect memory leaks. Since all variables are local to\n// the function, when \"runTestInternal\" finishes its execution, they can all be\n// freed, UNLESS something else is leaking them (and that's why we can detect\n// the leak!).\n//\n// If we had all the code in a single function, we should manually nullify all\n// references to verify if there is a leak, which is not maintainable and error\n// prone. That's why \"runTestInternal\" CANNOT be inlined inside \"runTest\".\n\nasync function runTestInternal(\n  path,\n  globalConfig,\n  config,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const testSource = fs().readFileSync(path, 'utf8');\n  const docblockPragmas = docblock().parse(docblock().extract(testSource));\n  const customEnvironment = docblockPragmas['jest-environment'];\n  let testEnvironment = config.testEnvironment;\n\n  if (customEnvironment) {\n    if (Array.isArray(customEnvironment)) {\n      throw new Error(\n        `You can only define a single test environment through docblocks, got \"${customEnvironment.join(\n          ', '\n        )}\"`\n      );\n    }\n\n    testEnvironment = (0, _jestResolve().resolveTestEnvironment)({\n      ...config,\n      requireResolveFunction: require.resolve,\n      testEnvironment: customEnvironment\n    });\n  }\n\n  const cacheFS = new Map([[path, testSource]]);\n  const transformer = await (0, _transform().createScriptTransformer)(\n    config,\n    cacheFS\n  );\n  const TestEnvironment = await transformer.requireAndTranspileModule(\n    testEnvironment\n  );\n  const testFramework = await transformer.requireAndTranspileModule(\n    process.env.JEST_JASMINE === '1'\n      ? require.resolve('jest-jasmine2')\n      : config.testRunner\n  );\n  const Runtime = (0, _jestUtil().interopRequireDefault)(\n    config.moduleLoader ? require(config.moduleLoader) : require('jest-runtime')\n  ).default;\n  const consoleOut = globalConfig.useStderr ? process.stderr : process.stdout;\n\n  const consoleFormatter = (type, message) =>\n    (0, _console().getConsoleOutput)(\n      // 4 = the console call is buried 4 stack frames deep\n      _console().BufferedConsole.write([], type, message, 4),\n      config,\n      globalConfig\n    );\n\n  let testConsole;\n\n  if (globalConfig.silent) {\n    testConsole = new (_console().NullConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else if (globalConfig.verbose) {\n    testConsole = new (_console().CustomConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else {\n    testConsole = new (_console().BufferedConsole)();\n  }\n\n  const environment = new TestEnvironment(config, {\n    console: testConsole,\n    docblockPragmas,\n    testPath: path\n  });\n\n  if (typeof environment.getVmContext !== 'function') {\n    console.error(\n      `Test environment found at \"${testEnvironment}\" does not export a \"getVmContext\" method, which is mandatory from Jest 27. This method is a replacement for \"runScript\".`\n    );\n    process.exit(1);\n  }\n\n  const leakDetector = config.detectLeaks\n    ? new (_jestLeakDetector().default)(environment)\n    : null;\n  (0, _jestUtil().setGlobal)(environment.global, 'console', testConsole);\n  const runtime = new Runtime(\n    config,\n    environment,\n    resolver,\n    transformer,\n    cacheFS,\n    {\n      changedFiles:\n        context === null || context === void 0 ? void 0 : context.changedFiles,\n      collectCoverage: globalConfig.collectCoverage,\n      collectCoverageFrom: globalConfig.collectCoverageFrom,\n      collectCoverageOnlyFrom: globalConfig.collectCoverageOnlyFrom,\n      coverageProvider: globalConfig.coverageProvider,\n      sourcesRelatedToTestsInChangedFiles:\n        context === null || context === void 0\n          ? void 0\n          : context.sourcesRelatedToTestsInChangedFiles\n    },\n    path\n  );\n  const start = Date.now();\n\n  for (const path of config.setupFiles) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n\n  const sourcemapOptions = {\n    environment: 'node',\n    handleUncaughtExceptions: false,\n    retrieveSourceMap: source => {\n      var _runtime$getSourceMap;\n\n      const sourceMapSource =\n        (_runtime$getSourceMap = runtime.getSourceMaps()) === null ||\n        _runtime$getSourceMap === void 0\n          ? void 0\n          : _runtime$getSourceMap.get(source);\n\n      if (sourceMapSource) {\n        try {\n          return {\n            map: JSON.parse(fs().readFileSync(sourceMapSource, 'utf8')),\n            url: source\n          };\n        } catch {}\n      }\n\n      return null;\n    }\n  }; // For tests\n\n  runtime\n    .requireInternalModule(\n      require.resolve('source-map-support'),\n      'source-map-support'\n    )\n    .install(sourcemapOptions); // For runtime errors\n\n  _sourceMapSupport().default.install(sourcemapOptions);\n\n  if (\n    environment.global &&\n    environment.global.process &&\n    environment.global.process.exit\n  ) {\n    const realExit = environment.global.process.exit;\n\n    environment.global.process.exit = function exit(...args) {\n      const error = new (_jestUtil().ErrorWithStack)(\n        `process.exit called with \"${args.join(', ')}\"`,\n        exit\n      );\n      const formattedError = (0, _jestMessageUtil().formatExecError)(\n        error,\n        config,\n        {\n          noStackTrace: false\n        },\n        undefined,\n        true\n      );\n      process.stderr.write(formattedError);\n      return realExit(...args);\n    };\n  } // if we don't have `getVmContext` on the env skip coverage\n\n  const collectV8Coverage =\n    globalConfig.coverageProvider === 'v8' &&\n    typeof environment.getVmContext === 'function';\n\n  try {\n    await environment.setup();\n    let result;\n\n    try {\n      if (collectV8Coverage) {\n        await runtime.collectV8Coverage();\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment,\n        runtime,\n        path,\n        sendMessageToJest\n      );\n    } catch (err) {\n      // Access stack before uninstalling sourcemaps\n      err.stack;\n      throw err;\n    } finally {\n      if (collectV8Coverage) {\n        await runtime.stopCollectingV8Coverage();\n      }\n    }\n\n    freezeConsole(testConsole, config);\n    const testCount =\n      result.numPassingTests +\n      result.numFailingTests +\n      result.numPendingTests +\n      result.numTodoTests;\n    const end = Date.now();\n    const testRuntime = end - start;\n    result.perfStats = {\n      end,\n      runtime: testRuntime,\n      slow: testRuntime / 1000 > config.slowTestThreshold,\n      start\n    };\n    result.testFilePath = path;\n    result.console = testConsole.getBuffer();\n    result.skipped = testCount === result.numPendingTests;\n    result.displayName = config.displayName;\n    const coverage = runtime.getAllCoverageInfoCopy();\n\n    if (coverage) {\n      const coverageKeys = Object.keys(coverage);\n\n      if (coverageKeys.length) {\n        result.coverage = coverage;\n      }\n    }\n\n    if (collectV8Coverage) {\n      const v8Coverage = runtime.getAllV8CoverageInfoCopy();\n\n      if (v8Coverage && v8Coverage.length > 0) {\n        result.v8Coverage = v8Coverage;\n      }\n    }\n\n    if (globalConfig.logHeapUsage) {\n      if (global.gc) {\n        global.gc();\n      }\n\n      result.memoryUsage = process.memoryUsage().heapUsed;\n    } // Delay the resolution to allow log messages to be output.\n\n    return new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector,\n          result\n        })\n      );\n    });\n  } finally {\n    runtime.teardown();\n    await environment.teardown();\n\n    _sourceMapSupport().default.resetRetrieveHandlers();\n  }\n}\n\nasync function runTest(\n  path,\n  globalConfig,\n  config,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const {leakDetector, result} = await runTestInternal(\n    path,\n    globalConfig,\n    config,\n    resolver,\n    context,\n    sendMessageToJest\n  );\n\n  if (leakDetector) {\n    // We wanna allow a tiny but time to pass to allow last-minute cleanup\n    await new Promise(resolve => setTimeout(resolve, 100)); // Resolve leak detector, outside the \"runTestInternal\" closure.\n\n    result.leaks = await leakDetector.isLeaking();\n  } else {\n    result.leaks = false;\n  }\n\n  return result;\n}\n"],"mappings":"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"}