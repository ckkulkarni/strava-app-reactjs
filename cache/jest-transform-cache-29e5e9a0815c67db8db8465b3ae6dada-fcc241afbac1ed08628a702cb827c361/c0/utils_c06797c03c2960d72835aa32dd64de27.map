{"version":3,"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","disjunctionToList","node","type","TypeError","list","left","push","apply","concat","right","listToDisjunction","reduce","increaseQuantifierByOne","quantifier","kind","to","module","exports"],"sources":["utils.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Flattens a nested disjunction node to a list.\n *\n * /a|b|c|d/\n *\n * {{{a, b}, c}, d} -> [a, b, c, d]\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction disjunctionToList(node) {\n  if (node.type !== 'Disjunction') {\n    throw new TypeError('Expected \"Disjunction\" node, got \"' + node.type + '\"');\n  }\n\n  var list = [];\n\n  if (node.left && node.left.type === 'Disjunction') {\n    list.push.apply(list, _toConsumableArray(disjunctionToList(node.left)).concat([node.right]));\n  } else {\n    list.push(node.left, node.right);\n  }\n\n  return list;\n}\n\n/**\n * Builds a nested disjunction node from a list.\n *\n * /a|b|c|d/\n *\n * [a, b, c, d] -> {{{a, b}, c}, d}\n */\nfunction listToDisjunction(list) {\n  return list.reduce(function (left, right) {\n    return {\n      type: 'Disjunction',\n      left: left,\n      right: right\n    };\n  });\n}\n\n/**\n * Increases a quantifier by one.\n * Does not change greediness.\n * * -> +\n * + -> {2,}\n * ? -> {1,2}\n * {2} -> {3}\n * {2,} -> {3,}\n * {2,3} -> {3,4}\n */\nfunction increaseQuantifierByOne(quantifier) {\n  if (quantifier.kind === '*') {\n\n    quantifier.kind = '+';\n  } else if (quantifier.kind === '+') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 2;\n    delete quantifier.to;\n  } else if (quantifier.kind === '?') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 1;\n    quantifier.to = 2;\n  } else if (quantifier.kind === 'Range') {\n\n    quantifier.from += 1;\n    if (quantifier.to) {\n      quantifier.to += 1;\n    }\n  }\n}\n\nmodule.exports = {\n  disjunctionToList: disjunctionToList,\n  listToDisjunction: listToDisjunction,\n  increaseQuantifierByOne: increaseQuantifierByOne\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,kBAAkBA,CAACC,GAAG,EAAE;EAAE,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IAAE,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEC,IAAI,GAAGH,KAAK,CAACD,GAAG,CAACK,MAAM,CAAC,EAAEF,CAAC,GAAGH,GAAG,CAACK,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAEC,IAAI,CAACD,CAAC,CAAC,GAAGH,GAAG,CAACG,CAAC,CAAC;IAAE;IAAE,OAAOC,IAAI;EAAE,CAAC,MAAM;IAAE,OAAOH,KAAK,CAACK,IAAI,CAACN,GAAG,CAAC;EAAE;AAAE;AAElM,SAASO,iBAAiBA,CAACC,IAAI,EAAE;EAC/B,IAAIA,IAAI,CAACC,IAAI,KAAK,aAAa,EAAE;IAC/B,MAAM,IAAIC,SAAS,CAAC,oCAAoC,GAAGF,IAAI,CAACC,IAAI,GAAG,GAAG,CAAC;EAC7E;EAEA,IAAIE,IAAI,GAAG,EAAE;EAEb,IAAIH,IAAI,CAACI,IAAI,IAAIJ,IAAI,CAACI,IAAI,CAACH,IAAI,KAAK,aAAa,EAAE;IACjDE,IAAI,CAACE,IAAI,CAACC,KAAK,CAACH,IAAI,EAAEZ,kBAAkB,CAACQ,iBAAiB,CAACC,IAAI,CAACI,IAAI,CAAC,CAAC,CAACG,MAAM,CAAC,CAACP,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC;EAC9F,CAAC,MAAM;IACLL,IAAI,CAACE,IAAI,CAACL,IAAI,CAACI,IAAI,EAAEJ,IAAI,CAACQ,KAAK,CAAC;EAClC;EAEA,OAAOL,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,iBAAiBA,CAACN,IAAI,EAAE;EAC/B,OAAOA,IAAI,CAACO,MAAM,CAAC,UAAUN,IAAI,EAAEI,KAAK,EAAE;IACxC,OAAO;MACLP,IAAI,EAAE,aAAa;MACnBG,IAAI,EAAEA,IAAI;MACVI,KAAK,EAAEA;IACT,CAAC;EACH,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,uBAAuBA,CAACC,UAAU,EAAE;EAC3C,IAAIA,UAAU,CAACC,IAAI,KAAK,GAAG,EAAE;IAE3BD,UAAU,CAACC,IAAI,GAAG,GAAG;EACvB,CAAC,MAAM,IAAID,UAAU,CAACC,IAAI,KAAK,GAAG,EAAE;IAElCD,UAAU,CAACC,IAAI,GAAG,OAAO;IACzBD,UAAU,CAACd,IAAI,GAAG,CAAC;IACnB,OAAOc,UAAU,CAACE,EAAE;EACtB,CAAC,MAAM,IAAIF,UAAU,CAACC,IAAI,KAAK,GAAG,EAAE;IAElCD,UAAU,CAACC,IAAI,GAAG,OAAO;IACzBD,UAAU,CAACd,IAAI,GAAG,CAAC;IACnBc,UAAU,CAACE,EAAE,GAAG,CAAC;EACnB,CAAC,MAAM,IAAIF,UAAU,CAACC,IAAI,KAAK,OAAO,EAAE;IAEtCD,UAAU,CAACd,IAAI,IAAI,CAAC;IACpB,IAAIc,UAAU,CAACE,EAAE,EAAE;MACjBF,UAAU,CAACE,EAAE,IAAI,CAAC;IACpB;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG;EACfjB,iBAAiB,EAAEA,iBAAiB;EACpCU,iBAAiB,EAAEA,iBAAiB;EACpCE,uBAAuB,EAAEA;AAC3B,CAAC"}