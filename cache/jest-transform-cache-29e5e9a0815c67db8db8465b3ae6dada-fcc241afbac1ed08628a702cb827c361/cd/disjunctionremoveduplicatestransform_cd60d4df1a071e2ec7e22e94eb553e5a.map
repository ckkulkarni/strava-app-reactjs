{"version":3,"names":["NodePath","require","_require","disjunctionToList","listToDisjunction","module","exports","Disjunction","path","node","uniqueNodesMap","parts","filter","part","encoded","getForNode","jsonEncode","hasOwnProperty","replace"],"sources":["disjunction-remove-duplicates-transform.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NodePath = require('../../traverse/node-path');\n\nvar _require = require('../../transform/utils'),\n    disjunctionToList = _require.disjunctionToList,\n    listToDisjunction = _require.listToDisjunction;\n\n/**\n * Removes duplicates from a disjunction sequence:\n *\n * /(ab|bc|ab)+(xy|xy)+/ -> /(ab|bc)+(xy)+/\n */\n\n\nmodule.exports = {\n  Disjunction: function Disjunction(path) {\n    var node = path.node;\n\n    // Make unique nodes.\n\n    var uniqueNodesMap = {};\n\n    var parts = disjunctionToList(node).filter(function (part) {\n      var encoded = part ? NodePath.getForNode(part).jsonEncode() : 'null';\n\n      // Already recorded this part, filter out.\n      if (uniqueNodesMap.hasOwnProperty(encoded)) {\n        return false;\n      }\n\n      uniqueNodesMap[encoded] = part;\n      return true;\n    });\n\n    // Replace with the optimized disjunction.\n    path.replace(listToDisjunction(parts));\n  }\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAElD,IAAIC,QAAQ,GAAGD,OAAO,CAAC,uBAAuB,CAAC;EAC3CE,iBAAiB,GAAGD,QAAQ,CAACC,iBAAiB;EAC9CC,iBAAiB,GAAGF,QAAQ,CAACE,iBAAiB;;AAElD;AACA;AACA;AACA;AACA;;AAGAC,MAAM,CAACC,OAAO,GAAG;EACfC,WAAW,EAAE,SAASA,WAAWA,CAACC,IAAI,EAAE;IACtC,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;;IAEpB;;IAEA,IAAIC,cAAc,GAAG,CAAC,CAAC;IAEvB,IAAIC,KAAK,GAAGR,iBAAiB,CAACM,IAAI,CAAC,CAACG,MAAM,CAAC,UAAUC,IAAI,EAAE;MACzD,IAAIC,OAAO,GAAGD,IAAI,GAAGb,QAAQ,CAACe,UAAU,CAACF,IAAI,CAAC,CAACG,UAAU,EAAE,GAAG,MAAM;;MAEpE;MACA,IAAIN,cAAc,CAACO,cAAc,CAACH,OAAO,CAAC,EAAE;QAC1C,OAAO,KAAK;MACd;MAEAJ,cAAc,CAACI,OAAO,CAAC,GAAGD,IAAI;MAC9B,OAAO,IAAI;IACb,CAAC,CAAC;;IAEF;IACAL,IAAI,CAACU,OAAO,CAACd,iBAAiB,CAACO,KAAK,CAAC,CAAC;EACxC;AACF,CAAC"}