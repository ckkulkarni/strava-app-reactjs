fd72b32ce441ff8e42773cda328f5259
/**
 * The MIT License (MIT)
 * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>
 */

'use strict';

/**
 * A regexp-tree plugin to replace different range-based quantifiers
 * with their symbol equivalents.
 *
 * a{0,} -> a*
 * a{1,} -> a+
 * a{1} -> a
 *
 * NOTE: the following is automatically handled in the generator:
 *
 * a{3,3} -> a{3}
 */
module.exports = {
  Quantifier: function Quantifier(path) {
    var node = path.node;
    if (node.kind !== 'Range') {
      return;
    }

    // a{0,} -> a*
    rewriteOpenZero(path);

    // a{1,} -> a+
    rewriteOpenOne(path);

    // a{1} -> a
    rewriteExactOne(path);
  }
};
function rewriteOpenZero(path) {
  var node = path.node;
  if (node.from !== 0 || node.to) {
    return;
  }
  node.kind = '*';
  delete node.from;
}
function rewriteOpenOne(path) {
  var node = path.node;
  if (node.from !== 1 || node.to) {
    return;
  }
  node.kind = '+';
  delete node.from;
}
function rewriteExactOne(path) {
  var node = path.node;
  if (node.from !== 1 || node.to !== 1) {
    return;
  }
  path.parentPath.replace(path.parentPath.node.expression);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiUXVhbnRpZmllciIsInBhdGgiLCJub2RlIiwia2luZCIsInJld3JpdGVPcGVuWmVybyIsInJld3JpdGVPcGVuT25lIiwicmV3cml0ZUV4YWN0T25lIiwiZnJvbSIsInRvIiwicGFyZW50UGF0aCIsInJlcGxhY2UiLCJleHByZXNzaW9uIl0sInNvdXJjZXMiOlsicXVhbnRpZmllci1yYW5nZS10by1zeW1ib2wtdHJhbnNmb3JtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIE1JVCBMaWNlbnNlIChNSVQpXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCBEbWl0cnkgU29zaG5pa292IDxkbWl0cnkuc29zaG5pa292QGdtYWlsLmNvbT5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSByZWdleHAtdHJlZSBwbHVnaW4gdG8gcmVwbGFjZSBkaWZmZXJlbnQgcmFuZ2UtYmFzZWQgcXVhbnRpZmllcnNcbiAqIHdpdGggdGhlaXIgc3ltYm9sIGVxdWl2YWxlbnRzLlxuICpcbiAqIGF7MCx9IC0+IGEqXG4gKiBhezEsfSAtPiBhK1xuICogYXsxfSAtPiBhXG4gKlxuICogTk9URTogdGhlIGZvbGxvd2luZyBpcyBhdXRvbWF0aWNhbGx5IGhhbmRsZWQgaW4gdGhlIGdlbmVyYXRvcjpcbiAqXG4gKiBhezMsM30gLT4gYXszfVxuICovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBRdWFudGlmaWVyOiBmdW5jdGlvbiBRdWFudGlmaWVyKHBhdGgpIHtcbiAgICB2YXIgbm9kZSA9IHBhdGgubm9kZTtcblxuXG4gICAgaWYgKG5vZGUua2luZCAhPT0gJ1JhbmdlJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIGF7MCx9IC0+IGEqXG4gICAgcmV3cml0ZU9wZW5aZXJvKHBhdGgpO1xuXG4gICAgLy8gYXsxLH0gLT4gYStcbiAgICByZXdyaXRlT3Blbk9uZShwYXRoKTtcblxuICAgIC8vIGF7MX0gLT4gYVxuICAgIHJld3JpdGVFeGFjdE9uZShwYXRoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gcmV3cml0ZU9wZW5aZXJvKHBhdGgpIHtcbiAgdmFyIG5vZGUgPSBwYXRoLm5vZGU7XG5cblxuICBpZiAobm9kZS5mcm9tICE9PSAwIHx8IG5vZGUudG8pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBub2RlLmtpbmQgPSAnKic7XG4gIGRlbGV0ZSBub2RlLmZyb207XG59XG5cbmZ1bmN0aW9uIHJld3JpdGVPcGVuT25lKHBhdGgpIHtcbiAgdmFyIG5vZGUgPSBwYXRoLm5vZGU7XG5cblxuICBpZiAobm9kZS5mcm9tICE9PSAxIHx8IG5vZGUudG8pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBub2RlLmtpbmQgPSAnKyc7XG4gIGRlbGV0ZSBub2RlLmZyb207XG59XG5cbmZ1bmN0aW9uIHJld3JpdGVFeGFjdE9uZShwYXRoKSB7XG4gIHZhciBub2RlID0gcGF0aC5ub2RlO1xuXG5cbiAgaWYgKG5vZGUuZnJvbSAhPT0gMSB8fCBub2RlLnRvICE9PSAxKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcGF0aC5wYXJlbnRQYXRoLnJlcGxhY2UocGF0aC5wYXJlbnRQYXRoLm5vZGUuZXhwcmVzc2lvbik7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBQSxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmQyxVQUFVLEVBQUUsU0FBU0EsVUFBVUEsQ0FBQ0MsSUFBSSxFQUFFO0lBQ3BDLElBQUlDLElBQUksR0FBR0QsSUFBSSxDQUFDQyxJQUFJO0lBR3BCLElBQUlBLElBQUksQ0FBQ0MsSUFBSSxLQUFLLE9BQU8sRUFBRTtNQUN6QjtJQUNGOztJQUVBO0lBQ0FDLGVBQWUsQ0FBQ0gsSUFBSSxDQUFDOztJQUVyQjtJQUNBSSxjQUFjLENBQUNKLElBQUksQ0FBQzs7SUFFcEI7SUFDQUssZUFBZSxDQUFDTCxJQUFJLENBQUM7RUFDdkI7QUFDRixDQUFDO0FBRUQsU0FBU0csZUFBZUEsQ0FBQ0gsSUFBSSxFQUFFO0VBQzdCLElBQUlDLElBQUksR0FBR0QsSUFBSSxDQUFDQyxJQUFJO0VBR3BCLElBQUlBLElBQUksQ0FBQ0ssSUFBSSxLQUFLLENBQUMsSUFBSUwsSUFBSSxDQUFDTSxFQUFFLEVBQUU7SUFDOUI7RUFDRjtFQUVBTixJQUFJLENBQUNDLElBQUksR0FBRyxHQUFHO0VBQ2YsT0FBT0QsSUFBSSxDQUFDSyxJQUFJO0FBQ2xCO0FBRUEsU0FBU0YsY0FBY0EsQ0FBQ0osSUFBSSxFQUFFO0VBQzVCLElBQUlDLElBQUksR0FBR0QsSUFBSSxDQUFDQyxJQUFJO0VBR3BCLElBQUlBLElBQUksQ0FBQ0ssSUFBSSxLQUFLLENBQUMsSUFBSUwsSUFBSSxDQUFDTSxFQUFFLEVBQUU7SUFDOUI7RUFDRjtFQUVBTixJQUFJLENBQUNDLElBQUksR0FBRyxHQUFHO0VBQ2YsT0FBT0QsSUFBSSxDQUFDSyxJQUFJO0FBQ2xCO0FBRUEsU0FBU0QsZUFBZUEsQ0FBQ0wsSUFBSSxFQUFFO0VBQzdCLElBQUlDLElBQUksR0FBR0QsSUFBSSxDQUFDQyxJQUFJO0VBR3BCLElBQUlBLElBQUksQ0FBQ0ssSUFBSSxLQUFLLENBQUMsSUFBSUwsSUFBSSxDQUFDTSxFQUFFLEtBQUssQ0FBQyxFQUFFO0lBQ3BDO0VBQ0Y7RUFFQVAsSUFBSSxDQUFDUSxVQUFVLENBQUNDLE9BQU8sQ0FBQ1QsSUFBSSxDQUFDUSxVQUFVLENBQUNQLElBQUksQ0FBQ1MsVUFBVSxDQUFDO0FBQzFEIn0=