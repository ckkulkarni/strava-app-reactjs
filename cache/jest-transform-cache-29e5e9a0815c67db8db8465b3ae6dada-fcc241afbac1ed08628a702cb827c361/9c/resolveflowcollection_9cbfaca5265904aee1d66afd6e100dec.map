{"version":3,"names":["Node","require","Pair","YAMLMap","YAMLSeq","resolveEnd","resolveProps","utilContainsNewline","utilMapIncludes","blockMsg","isBlock","token","type","resolveFlowCollection","composeNode","composeEmptyNode","ctx","fc","onError","isMap","start","source","fcName","coll","schema","flow","atRoot","offset","length","i","items","collItem","key","sep","value","props","indicator","next","startOnNewline","found","anchor","tag","comma","comment","end","options","strict","containsNewline","prevItemComment","loop","st","substring","prev","isPair","valueNode","push","range","keyStart","keyNode","valueProps","pair","keepSourceTokens","srcToken","map","mapIncludes","expectedEnd","ce","ee","cePos","name","toUpperCase","msg","unshift","exports"],"sources":["resolve-flow-collection.js"],"sourcesContent":["'use strict';\n\nvar Node = require('../nodes/Node.js');\nvar Pair = require('../nodes/Pair.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveEnd = require('./resolve-end.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilContainsNewline = require('./util-contains-newline.js');\nvar utilMapIncludes = require('./util-map-includes.js');\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap.YAMLMap(ctx.schema)\n        : new YAMLSeq.YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps.resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && utilContainsNewline.containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (Node.isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // â†’ key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps.resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (utilMapIncludes.mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap.YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd.resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexports.resolveFlowCollection = resolveFlowCollection;\n"],"mappings":"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"}