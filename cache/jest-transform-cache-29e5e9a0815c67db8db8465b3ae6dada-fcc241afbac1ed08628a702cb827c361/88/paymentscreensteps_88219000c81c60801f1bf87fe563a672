49008b7c8b17fc5955b0ebf64073d816
"use strict";

var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _reactRouterDom = require("react-router-dom");
var _PaymentScreen = _interopRequireDefault(require("../../PaymentScreen"));
var _toolkit = require("@reduxjs/toolkit");
var _parkingSlice = _interopRequireDefault(require("./../../redux/reducer/parkingSlice"));
var _reactRedux = require("react-redux");
require("@testing-library/jest-dom/extend-expect");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
describe("PaymentScreen", () => {
  it("displays the vehicle registration and hours parked for the occupied parking spot", () => {
    const state = {
      spaceDetails: {
        registration: "ABC123",
        parkingTime: "10:00"
      },
      space: "A1"
    };
    const store = (0, _toolkit.configureStore)({
      reducer: {
        parkingSpaces: _parkingSlice.default
      }
    });
    const {
      getByTestId
    } = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, {
      initialEntries: [{
        pathname: "/payment",
        state
      }]
    }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
      path: "/payment",
      element: /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null)
    })))));
    const regElement = getByTestId("reg");
    expect(regElement).toHaveTextContent("Vehicle Registration: ABC123");
    const parkingHoursElement = getByTestId("parkingHours");
    expect(parkingHoursElement).toHaveTextContent("Hours Parked: 0");
    const paymentElement = getByTestId("payment");
    expect(paymentElement).toHaveTextContent("Parking Charge: $10");
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfcmVhY3RSb3V0ZXJEb20iLCJfUGF5bWVudFNjcmVlbiIsIl90b29sa2l0IiwiX3BhcmtpbmdTbGljZSIsIl9yZWFjdFJlZHV4Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJkZXNjcmliZSIsIml0Iiwic3RhdGUiLCJzcGFjZURldGFpbHMiLCJyZWdpc3RyYXRpb24iLCJwYXJraW5nVGltZSIsInNwYWNlIiwic3RvcmUiLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJwYXJraW5nU3BhY2VzIiwicGFya2luZ1NsaWNlIiwiZ2V0QnlUZXN0SWQiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJNZW1vcnlSb3V0ZXIiLCJpbml0aWFsRW50cmllcyIsInBhdGhuYW1lIiwiUm91dGVzIiwiUm91dGUiLCJwYXRoIiwiZWxlbWVudCIsInJlZ0VsZW1lbnQiLCJleHBlY3QiLCJ0b0hhdmVUZXh0Q29udGVudCIsInBhcmtpbmdIb3Vyc0VsZW1lbnQiLCJwYXltZW50RWxlbWVudCJdLCJzb3VyY2VzIjpbInBheW1lbnRzY3JlZW4uc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgcmVuZGVyLCBmaXJlRXZlbnQsIHNjcmVlbiB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcbmltcG9ydCB7IE1lbW9yeVJvdXRlciwgUm91dGUsIFJvdXRlcyB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCBQYXltZW50U2NyZWVuIGZyb20gXCIuLi8uLi9QYXltZW50U2NyZWVuXCI7XHJcbmltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHBhcmtpbmdTbGljZSBmcm9tIFwiLi8uLi8uLi9yZWR1eC9yZWR1Y2VyL3BhcmtpbmdTbGljZVwiO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcclxuZGVzY3JpYmUoXCJQYXltZW50U2NyZWVuXCIsICgpID0+IHtcclxuICBpdChcImRpc3BsYXlzIHRoZSB2ZWhpY2xlIHJlZ2lzdHJhdGlvbiBhbmQgaG91cnMgcGFya2VkIGZvciB0aGUgb2NjdXBpZWQgcGFya2luZyBzcG90XCIsICgpID0+IHtcclxuICAgIGNvbnN0IHN0YXRlID0ge1xyXG4gICAgICBzcGFjZURldGFpbHM6IHtcclxuICAgICAgICByZWdpc3RyYXRpb246IFwiQUJDMTIzXCIsXHJcbiAgICAgICAgcGFya2luZ1RpbWU6IFwiMTA6MDBcIixcclxuICAgICAgfSxcclxuICAgICAgc3BhY2U6IFwiQTFcIixcclxuICAgIH07XHJcbiAgICBjb25zdCBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgIHBhcmtpbmdTcGFjZXM6IHBhcmtpbmdTbGljZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxyXG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICA8TWVtb3J5Um91dGVyIGluaXRpYWxFbnRyaWVzPXtbeyBwYXRobmFtZTogXCIvcGF5bWVudFwiLCBzdGF0ZSB9XX0+XHJcbiAgICAgICAgICA8Um91dGVzPlxyXG4gICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9wYXltZW50XCIgZWxlbWVudD17PFBheW1lbnRTY3JlZW4gLz59IC8+XHJcbiAgICAgICAgICA8L1JvdXRlcz5cclxuICAgICAgICA8L01lbW9yeVJvdXRlcj5cclxuICAgICAgPC9Qcm92aWRlcj5cclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgcmVnRWxlbWVudCA9IGdldEJ5VGVzdElkKFwicmVnXCIpO1xyXG4gICAgZXhwZWN0KHJlZ0VsZW1lbnQpLnRvSGF2ZVRleHRDb250ZW50KFwiVmVoaWNsZSBSZWdpc3RyYXRpb246IEFCQzEyM1wiKTtcclxuXHJcbiAgICBjb25zdCBwYXJraW5nSG91cnNFbGVtZW50ID0gZ2V0QnlUZXN0SWQoXCJwYXJraW5nSG91cnNcIik7XHJcbiAgICBleHBlY3QocGFya2luZ0hvdXJzRWxlbWVudCkudG9IYXZlVGV4dENvbnRlbnQoXCJIb3VycyBQYXJrZWQ6IDBcIik7XHJcblxyXG4gICAgY29uc3QgcGF5bWVudEVsZW1lbnQgPSBnZXRCeVRlc3RJZChcInBheW1lbnRcIik7XHJcbiAgICBleHBlY3QocGF5bWVudEVsZW1lbnQpLnRvSGF2ZVRleHRDb250ZW50KFwiUGFya2luZyBDaGFyZ2U6ICQxMFwiKTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxlQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxjQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBSSxRQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxhQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTSxXQUFBLEdBQUFOLE9BQUE7QUFDQUEsT0FBQTtBQUFpRCxTQUFBRCx1QkFBQVEsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUNqREcsUUFBUSxDQUFDLGVBQWUsRUFBRSxNQUFNO0VBQzlCQyxFQUFFLENBQUMsa0ZBQWtGLEVBQUUsTUFBTTtJQUMzRixNQUFNQyxLQUFLLEdBQUc7TUFDWkMsWUFBWSxFQUFFO1FBQ1pDLFlBQVksRUFBRSxRQUFRO1FBQ3RCQyxXQUFXLEVBQUU7TUFDZixDQUFDO01BQ0RDLEtBQUssRUFBRTtJQUNULENBQUM7SUFDRCxNQUFNQyxLQUFLLEdBQUcsSUFBQUMsdUJBQWMsRUFBQztNQUMzQkMsT0FBTyxFQUFFO1FBQ1BDLGFBQWEsRUFBRUM7TUFDakI7SUFDRixDQUFDLENBQUM7SUFDRixNQUFNO01BQUVDO0lBQVksQ0FBQyxHQUFHLElBQUFDLGNBQU0sZ0JBQzVCekIsTUFBQSxDQUFBVyxPQUFBLENBQUFlLGFBQUEsQ0FBQ2xCLFdBQUEsQ0FBQW1CLFFBQVE7TUFBQ1IsS0FBSyxFQUFFQTtJQUFNLGdCQUNyQm5CLE1BQUEsQ0FBQVcsT0FBQSxDQUFBZSxhQUFBLENBQUN0QixlQUFBLENBQUF3QixZQUFZO01BQUNDLGNBQWMsRUFBRSxDQUFDO1FBQUVDLFFBQVEsRUFBRSxVQUFVO1FBQUVoQjtNQUFNLENBQUM7SUFBRSxnQkFDOURkLE1BQUEsQ0FBQVcsT0FBQSxDQUFBZSxhQUFBLENBQUN0QixlQUFBLENBQUEyQixNQUFNLHFCQUNML0IsTUFBQSxDQUFBVyxPQUFBLENBQUFlLGFBQUEsQ0FBQ3RCLGVBQUEsQ0FBQTRCLEtBQUs7TUFBQ0MsSUFBSSxFQUFDLFVBQVU7TUFBQ0MsT0FBTyxlQUFFbEMsTUFBQSxDQUFBVyxPQUFBLENBQUFlLGFBQUEsQ0FBQ3JCLGNBQUEsQ0FBQU0sT0FBYTtJQUFJLEVBQUcsQ0FDOUMsQ0FDSSxDQUNOLENBQ1o7SUFFRCxNQUFNd0IsVUFBVSxHQUFHWCxXQUFXLENBQUMsS0FBSyxDQUFDO0lBQ3JDWSxNQUFNLENBQUNELFVBQVUsQ0FBQyxDQUFDRSxpQkFBaUIsQ0FBQyw4QkFBOEIsQ0FBQztJQUVwRSxNQUFNQyxtQkFBbUIsR0FBR2QsV0FBVyxDQUFDLGNBQWMsQ0FBQztJQUN2RFksTUFBTSxDQUFDRSxtQkFBbUIsQ0FBQyxDQUFDRCxpQkFBaUIsQ0FBQyxpQkFBaUIsQ0FBQztJQUVoRSxNQUFNRSxjQUFjLEdBQUdmLFdBQVcsQ0FBQyxTQUFTLENBQUM7SUFDN0NZLE1BQU0sQ0FBQ0csY0FBYyxDQUFDLENBQUNGLGlCQUFpQixDQUFDLHFCQUFxQixDQUFDO0VBQ2pFLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9