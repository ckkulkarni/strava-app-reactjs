{"version":3,"names":["Pair","require","YAMLMap","resolveProps","utilContainsNewline","utilFlowIndentCheck","utilMapIncludes","startColMsg","resolveBlockMap","composeNode","composeEmptyNode","ctx","bm","onError","map","schema","atRoot","offset","commentEnd","collItem","items","start","key","sep","value","keyProps","indicator","next","startOnNewline","implicitKey","found","type","indent","anchor","tag","end","comment","hasNewlineAfterProp","containsNewline","length","keyStart","keyNode","compat","flowIndentCheck","mapIncludes","valueProps","range","hasNewline","options","strict","valueNode","pair","keepSourceTokens","srcToken","push","exports"],"sources":["resolve-block-map.js"],"sourcesContent":["'use strict';\n\nvar Pair = require('../nodes/Pair.js');\nvar YAMLMap = require('../nodes/YAMLMap.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilContainsNewline = require('./util-contains-newline.js');\nvar utilFlowIndentCheck = require('./util-flow-indent-check.js');\nvar utilMapIncludes = require('./util-map-includes.js');\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap.YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps.resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || utilContainsNewline.containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            utilFlowIndentCheck.flowIndentCheck(bm.indent, key, onError);\n        if (utilMapIncludes.mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps.resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                utilFlowIndentCheck.flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair.Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair.Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexports.resolveBlockMap = resolveBlockMap;\n"],"mappings":"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"}