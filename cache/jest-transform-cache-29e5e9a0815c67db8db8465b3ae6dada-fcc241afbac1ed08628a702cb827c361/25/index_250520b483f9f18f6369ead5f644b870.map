{"version":3,"names":["NFA","require","DFA","nfaFromRegExp","builders","module","exports","toNFA","regexp","build","toDFA","test","string","matches"],"sources":["index.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa/nfa');\nvar DFA = require('./dfa/dfa');\n\nvar nfaFromRegExp = require('./nfa/nfa-from-regexp');\nvar builders = require('./nfa/builders');\n\nmodule.exports = {\n\n  /**\n   * Export NFA and DFA classes.\n   */\n  NFA: NFA,\n  DFA: DFA,\n\n  /**\n   * Expose builders.\n   */\n  builders: builders,\n\n  /**\n   * Builds an NFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toNFA: function toNFA(regexp) {\n    return nfaFromRegExp.build(regexp);\n  },\n\n\n  /**\n   * Builds DFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toDFA: function toDFA(regexp) {\n    return new DFA(this.toNFA(regexp));\n  },\n\n\n  /**\n   * Returns true if regexp accepts the string.\n   */\n  test: function test(regexp, string) {\n    return this.toDFA(regexp).matches(string);\n  }\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAE9B,IAAIE,aAAa,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AACpD,IAAIG,QAAQ,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAExCI,MAAM,CAACC,OAAO,GAAG;EAEf;AACF;AACA;EACEN,GAAG,EAAEA,GAAG;EACRE,GAAG,EAAEA,GAAG;EAER;AACF;AACA;EACEE,QAAQ,EAAEA,QAAQ;EAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,KAAK,EAAE,SAASA,KAAKA,CAACC,MAAM,EAAE;IAC5B,OAAOL,aAAa,CAACM,KAAK,CAACD,MAAM,CAAC;EACpC,CAAC;EAGD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,KAAK,EAAE,SAASA,KAAKA,CAACF,MAAM,EAAE;IAC5B,OAAO,IAAIN,GAAG,CAAC,IAAI,CAACK,KAAK,CAACC,MAAM,CAAC,CAAC;EACpC,CAAC;EAGD;AACF;AACA;EACEG,IAAI,EAAE,SAASA,IAAIA,CAACH,MAAM,EAAEI,MAAM,EAAE;IAClC,OAAO,IAAI,CAACF,KAAK,CAACF,MAAM,CAAC,CAACK,OAAO,CAACD,MAAM,CAAC;EAC3C;AACF,CAAC"}