{"version":3,"names":["gherkin_streams_1","require","gherkin_utils_1","pickle_filter_1","__importDefault","helpers_1","getFilteredPicklesAndErrors","newId","cwd","logger","unexpandedFeaturePaths","featurePaths","coordinates","onEnvelope","gherkinQuery","Query","parseErrors","gherkinFromPaths","relativeTo","defaultDialect","envelope","update","parseError","push","pickleFilter","default","names","tagExpression","filteredPickles","getPickles","filter","pickle","gherkinDocument","getGherkinDocuments","find","doc","uri","matches","map","location","getLocation","astNodeIds","length","orderPickles","order","exports","paths","options","Promise","resolve","reject","gherkinMessageStream","GherkinStreams","fromPaths","on"],"sources":["../../src/api/gherkin.ts"],"sourcesContent":["import {\n  GherkinStreams,\n  IGherkinStreamOptions,\n} from '@cucumber/gherkin-streams'\nimport {\n  Envelope,\n  GherkinDocument,\n  IdGenerator,\n  Location,\n  ParseError,\n  Pickle,\n} from '@cucumber/messages'\nimport { Query as GherkinQuery } from '@cucumber/gherkin-utils'\nimport PickleFilter from '../pickle_filter'\nimport { orderPickles } from '../cli/helpers'\nimport { ISourcesCoordinates } from './types'\nimport { ILogger } from '../logger'\n\ninterface PickleWithDocument {\n  gherkinDocument: GherkinDocument\n  location: Location\n  pickle: Pickle\n}\n\nexport async function getFilteredPicklesAndErrors({\n  newId,\n  cwd,\n  logger,\n  unexpandedFeaturePaths,\n  featurePaths,\n  coordinates,\n  onEnvelope,\n}: {\n  newId: IdGenerator.NewId\n  cwd: string\n  logger: ILogger\n  unexpandedFeaturePaths: string[]\n  featurePaths: string[]\n  coordinates: ISourcesCoordinates\n  onEnvelope?: (envelope: Envelope) => void\n}): Promise<{\n  filteredPickles: PickleWithDocument[]\n  parseErrors: ParseError[]\n}> {\n  const gherkinQuery = new GherkinQuery()\n  const parseErrors: ParseError[] = []\n  await gherkinFromPaths(\n    featurePaths,\n    {\n      newId,\n      relativeTo: cwd,\n      defaultDialect: coordinates.defaultDialect,\n    },\n    (envelope) => {\n      gherkinQuery.update(envelope)\n      if (envelope.parseError) {\n        parseErrors.push(envelope.parseError)\n      }\n      onEnvelope?.(envelope)\n    }\n  )\n  const pickleFilter = new PickleFilter({\n    cwd,\n    featurePaths: unexpandedFeaturePaths,\n    names: coordinates.names,\n    tagExpression: coordinates.tagExpression,\n  })\n  const filteredPickles: PickleWithDocument[] = gherkinQuery\n    .getPickles()\n    .filter((pickle) => {\n      const gherkinDocument = gherkinQuery\n        .getGherkinDocuments()\n        .find((doc) => doc.uri === pickle.uri)\n      return pickleFilter.matches({ gherkinDocument, pickle })\n    })\n    .map((pickle) => {\n      const gherkinDocument = gherkinQuery\n        .getGherkinDocuments()\n        .find((doc) => doc.uri === pickle.uri)\n      const location = gherkinQuery.getLocation(\n        pickle.astNodeIds[pickle.astNodeIds.length - 1]\n      )\n      return {\n        gherkinDocument,\n        location,\n        pickle,\n      }\n    })\n  orderPickles(filteredPickles, coordinates.order, logger)\n  return {\n    filteredPickles,\n    parseErrors,\n  }\n}\n\nasync function gherkinFromPaths(\n  paths: string[],\n  options: IGherkinStreamOptions,\n  onEnvelope: (envelope: Envelope) => void\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const gherkinMessageStream = GherkinStreams.fromPaths(paths, options)\n    gherkinMessageStream.on('data', onEnvelope)\n    gherkinMessageStream.on('end', resolve)\n    gherkinMessageStream.on('error', reject)\n  })\n}\n"],"mappings":";;;;;;;;;;;AAAA,MAAAA,iBAAA,GAAAC,OAAA;AAYA,MAAAC,eAAA,GAAAD,OAAA;AACA,MAAAE,eAAA,GAAAC,eAAA,CAAAH,OAAA;AACA,MAAAI,SAAA,GAAAJ,OAAA;AAUO,eAAeK,2BAA2BA,CAAC;EAChDC,KAAK;EACLC,GAAG;EACHC,MAAM;EACNC,sBAAsB;EACtBC,YAAY;EACZC,WAAW;EACXC;AAAU,CASX;EAIC,MAAMC,YAAY,GAAG,IAAIZ,eAAA,CAAAa,KAAY,EAAE;EACvC,MAAMC,WAAW,GAAiB,EAAE;EACpC,MAAMC,gBAAgB,CACpBN,YAAY,EACZ;IACEJ,KAAK;IACLW,UAAU,EAAEV,GAAG;IACfW,cAAc,EAAEP,WAAW,CAACO;GAC7B,EACAC,QAAQ,IAAI;IACXN,YAAY,CAACO,MAAM,CAACD,QAAQ,CAAC;IAC7B,IAAIA,QAAQ,CAACE,UAAU,EAAE;MACvBN,WAAW,CAACO,IAAI,CAACH,QAAQ,CAACE,UAAU,CAAC;;IAEvCT,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAGO,QAAQ,CAAC;EACxB,CAAC,CACF;EACD,MAAMI,YAAY,GAAG,IAAIrB,eAAA,CAAAsB,OAAY,CAAC;IACpCjB,GAAG;IACHG,YAAY,EAAED,sBAAsB;IACpCgB,KAAK,EAAEd,WAAW,CAACc,KAAK;IACxBC,aAAa,EAAEf,WAAW,CAACe;GAC5B,CAAC;EACF,MAAMC,eAAe,GAAyBd,YAAY,CACvDe,UAAU,EAAE,CACZC,MAAM,CAAEC,MAAM,IAAI;IACjB,MAAMC,eAAe,GAAGlB,YAAY,CACjCmB,mBAAmB,EAAE,CACrBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKL,MAAM,CAACK,GAAG,CAAC;IACxC,OAAOZ,YAAY,CAACa,OAAO,CAAC;MAAEL,eAAe;MAAED;IAAM,CAAE,CAAC;EAC1D,CAAC,CAAC,CACDO,GAAG,CAAEP,MAAM,IAAI;IACd,MAAMC,eAAe,GAAGlB,YAAY,CACjCmB,mBAAmB,EAAE,CACrBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKL,MAAM,CAACK,GAAG,CAAC;IACxC,MAAMG,QAAQ,GAAGzB,YAAY,CAAC0B,WAAW,CACvCT,MAAM,CAACU,UAAU,CAACV,MAAM,CAACU,UAAU,CAACC,MAAM,GAAG,CAAC,CAAC,CAChD;IACD,OAAO;MACLV,eAAe;MACfO,QAAQ;MACRR;KACD;EACH,CAAC,CAAC;EACJ,IAAA1B,SAAA,CAAAsC,YAAY,EAACf,eAAe,EAAEhB,WAAW,CAACgC,KAAK,EAAEnC,MAAM,CAAC;EACxD,OAAO;IACLmB,eAAe;IACfZ;GACD;AACH;AArEA6B,OAAA,CAAAvC,2BAAA,GAAAA,2BAAA;AAuEA,eAAeW,gBAAgBA,CAC7B6B,KAAe,EACfC,OAA8B,EAC9BlC,UAAwC;EAExC,OAAO,IAAImC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACrC,MAAMC,oBAAoB,GAAGnD,iBAAA,CAAAoD,cAAc,CAACC,SAAS,CAACP,KAAK,EAAEC,OAAO,CAAC;IACrEI,oBAAoB,CAACG,EAAE,CAAC,MAAM,EAAEzC,UAAU,CAAC;IAC3CsC,oBAAoB,CAACG,EAAE,CAAC,KAAK,EAAEL,OAAO,CAAC;IACvCE,oBAAoB,CAACG,EAAE,CAAC,OAAO,EAAEJ,MAAM,CAAC;EAC1C,CAAC,CAAC;AACJ"}