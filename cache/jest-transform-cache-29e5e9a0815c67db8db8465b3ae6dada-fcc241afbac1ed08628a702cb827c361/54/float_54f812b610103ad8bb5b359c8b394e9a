a6860444901c9dbcbc062330a9d58fa0
'use strict';

var Scalar = require('../../nodes/Scalar.js');
var stringifyNumber = require('../../stringify/stringifyNumber.js');
const floatNaN = {
  identify: value => typeof value === 'number',
  default: true,
  tag: 'tag:yaml.org,2002:float',
  test: /^[-+]?\.(?:inf|Inf|INF|nan|NaN|NAN)$/,
  resolve: str => str.slice(-3).toLowerCase() === 'nan' ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY,
  stringify: stringifyNumber.stringifyNumber
};
const floatExp = {
  identify: value => typeof value === 'number',
  default: true,
  tag: 'tag:yaml.org,2002:float',
  format: 'EXP',
  test: /^[-+]?(?:[0-9][0-9_]*)?(?:\.[0-9_]*)?[eE][-+]?[0-9]+$/,
  resolve: str => parseFloat(str.replace(/_/g, '')),
  stringify(node) {
    const num = Number(node.value);
    return isFinite(num) ? num.toExponential() : stringifyNumber.stringifyNumber(node);
  }
};
const float = {
  identify: value => typeof value === 'number',
  default: true,
  tag: 'tag:yaml.org,2002:float',
  test: /^[-+]?(?:[0-9][0-9_]*)?\.[0-9_]*$/,
  resolve(str) {
    const node = new Scalar.Scalar(parseFloat(str.replace(/_/g, '')));
    const dot = str.indexOf('.');
    if (dot !== -1) {
      const f = str.substring(dot + 1).replace(/_/g, '');
      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;
    }
    return node;
  },
  stringify: stringifyNumber.stringifyNumber
};
exports.float = float;
exports.floatExp = floatExp;
exports.floatNaN = floatNaN;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY2FsYXIiLCJyZXF1aXJlIiwic3RyaW5naWZ5TnVtYmVyIiwiZmxvYXROYU4iLCJpZGVudGlmeSIsInZhbHVlIiwiZGVmYXVsdCIsInRhZyIsInRlc3QiLCJyZXNvbHZlIiwic3RyIiwic2xpY2UiLCJ0b0xvd2VyQ2FzZSIsIk5hTiIsIk51bWJlciIsIk5FR0FUSVZFX0lORklOSVRZIiwiUE9TSVRJVkVfSU5GSU5JVFkiLCJzdHJpbmdpZnkiLCJmbG9hdEV4cCIsImZvcm1hdCIsInBhcnNlRmxvYXQiLCJyZXBsYWNlIiwibm9kZSIsIm51bSIsImlzRmluaXRlIiwidG9FeHBvbmVudGlhbCIsImZsb2F0IiwiZG90IiwiaW5kZXhPZiIsImYiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJtaW5GcmFjdGlvbkRpZ2l0cyIsImV4cG9ydHMiXSwic291cmNlcyI6WyJmbG9hdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBTY2FsYXIgPSByZXF1aXJlKCcuLi8uLi9ub2Rlcy9TY2FsYXIuanMnKTtcbnZhciBzdHJpbmdpZnlOdW1iZXIgPSByZXF1aXJlKCcuLi8uLi9zdHJpbmdpZnkvc3RyaW5naWZ5TnVtYmVyLmpzJyk7XG5cbmNvbnN0IGZsb2F0TmFOID0ge1xuICAgIGlkZW50aWZ5OiB2YWx1ZSA9PiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInLFxuICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgdGFnOiAndGFnOnlhbWwub3JnLDIwMDI6ZmxvYXQnLFxuICAgIHRlc3Q6IC9eWy0rXT9cXC4oPzppbmZ8SW5mfElORnxuYW58TmFOfE5BTikkLyxcbiAgICByZXNvbHZlOiAoc3RyKSA9PiBzdHIuc2xpY2UoLTMpLnRvTG93ZXJDYXNlKCkgPT09ICduYW4nXG4gICAgICAgID8gTmFOXG4gICAgICAgIDogc3RyWzBdID09PSAnLSdcbiAgICAgICAgICAgID8gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZXG4gICAgICAgICAgICA6IE51bWJlci5QT1NJVElWRV9JTkZJTklUWSxcbiAgICBzdHJpbmdpZnk6IHN0cmluZ2lmeU51bWJlci5zdHJpbmdpZnlOdW1iZXJcbn07XG5jb25zdCBmbG9hdEV4cCA9IHtcbiAgICBpZGVudGlmeTogdmFsdWUgPT4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyxcbiAgICBkZWZhdWx0OiB0cnVlLFxuICAgIHRhZzogJ3RhZzp5YW1sLm9yZywyMDAyOmZsb2F0JyxcbiAgICBmb3JtYXQ6ICdFWFAnLFxuICAgIHRlc3Q6IC9eWy0rXT8oPzpbMC05XVswLTlfXSopPyg/OlxcLlswLTlfXSopP1tlRV1bLStdP1swLTldKyQvLFxuICAgIHJlc29sdmU6IChzdHIpID0+IHBhcnNlRmxvYXQoc3RyLnJlcGxhY2UoL18vZywgJycpKSxcbiAgICBzdHJpbmdpZnkobm9kZSkge1xuICAgICAgICBjb25zdCBudW0gPSBOdW1iZXIobm9kZS52YWx1ZSk7XG4gICAgICAgIHJldHVybiBpc0Zpbml0ZShudW0pID8gbnVtLnRvRXhwb25lbnRpYWwoKSA6IHN0cmluZ2lmeU51bWJlci5zdHJpbmdpZnlOdW1iZXIobm9kZSk7XG4gICAgfVxufTtcbmNvbnN0IGZsb2F0ID0ge1xuICAgIGlkZW50aWZ5OiB2YWx1ZSA9PiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInLFxuICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgdGFnOiAndGFnOnlhbWwub3JnLDIwMDI6ZmxvYXQnLFxuICAgIHRlc3Q6IC9eWy0rXT8oPzpbMC05XVswLTlfXSopP1xcLlswLTlfXSokLyxcbiAgICByZXNvbHZlKHN0cikge1xuICAgICAgICBjb25zdCBub2RlID0gbmV3IFNjYWxhci5TY2FsYXIocGFyc2VGbG9hdChzdHIucmVwbGFjZSgvXy9nLCAnJykpKTtcbiAgICAgICAgY29uc3QgZG90ID0gc3RyLmluZGV4T2YoJy4nKTtcbiAgICAgICAgaWYgKGRvdCAhPT0gLTEpIHtcbiAgICAgICAgICAgIGNvbnN0IGYgPSBzdHIuc3Vic3RyaW5nKGRvdCArIDEpLnJlcGxhY2UoL18vZywgJycpO1xuICAgICAgICAgICAgaWYgKGZbZi5sZW5ndGggLSAxXSA9PT0gJzAnKVxuICAgICAgICAgICAgICAgIG5vZGUubWluRnJhY3Rpb25EaWdpdHMgPSBmLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9LFxuICAgIHN0cmluZ2lmeTogc3RyaW5naWZ5TnVtYmVyLnN0cmluZ2lmeU51bWJlclxufTtcblxuZXhwb3J0cy5mbG9hdCA9IGZsb2F0O1xuZXhwb3J0cy5mbG9hdEV4cCA9IGZsb2F0RXhwO1xuZXhwb3J0cy5mbG9hdE5hTiA9IGZsb2F0TmFOO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaLElBQUlBLE1BQU0sR0FBR0MsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0FBQzdDLElBQUlDLGVBQWUsR0FBR0QsT0FBTyxDQUFDLG9DQUFvQyxDQUFDO0FBRW5FLE1BQU1FLFFBQVEsR0FBRztFQUNiQyxRQUFRLEVBQUVDLEtBQUssSUFBSSxPQUFPQSxLQUFLLEtBQUssUUFBUTtFQUM1Q0MsT0FBTyxFQUFFLElBQUk7RUFDYkMsR0FBRyxFQUFFLHlCQUF5QjtFQUM5QkMsSUFBSSxFQUFFLHNDQUFzQztFQUM1Q0MsT0FBTyxFQUFHQyxHQUFHLElBQUtBLEdBQUcsQ0FBQ0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUNDLFdBQVcsRUFBRSxLQUFLLEtBQUssR0FDakRDLEdBQUcsR0FDSEgsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsR0FDVkksTUFBTSxDQUFDQyxpQkFBaUIsR0FDeEJELE1BQU0sQ0FBQ0UsaUJBQWlCO0VBQ2xDQyxTQUFTLEVBQUVmLGVBQWUsQ0FBQ0E7QUFDL0IsQ0FBQztBQUNELE1BQU1nQixRQUFRLEdBQUc7RUFDYmQsUUFBUSxFQUFFQyxLQUFLLElBQUksT0FBT0EsS0FBSyxLQUFLLFFBQVE7RUFDNUNDLE9BQU8sRUFBRSxJQUFJO0VBQ2JDLEdBQUcsRUFBRSx5QkFBeUI7RUFDOUJZLE1BQU0sRUFBRSxLQUFLO0VBQ2JYLElBQUksRUFBRSx1REFBdUQ7RUFDN0RDLE9BQU8sRUFBR0MsR0FBRyxJQUFLVSxVQUFVLENBQUNWLEdBQUcsQ0FBQ1csT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztFQUNuREosU0FBU0EsQ0FBQ0ssSUFBSSxFQUFFO0lBQ1osTUFBTUMsR0FBRyxHQUFHVCxNQUFNLENBQUNRLElBQUksQ0FBQ2pCLEtBQUssQ0FBQztJQUM5QixPQUFPbUIsUUFBUSxDQUFDRCxHQUFHLENBQUMsR0FBR0EsR0FBRyxDQUFDRSxhQUFhLEVBQUUsR0FBR3ZCLGVBQWUsQ0FBQ0EsZUFBZSxDQUFDb0IsSUFBSSxDQUFDO0VBQ3RGO0FBQ0osQ0FBQztBQUNELE1BQU1JLEtBQUssR0FBRztFQUNWdEIsUUFBUSxFQUFFQyxLQUFLLElBQUksT0FBT0EsS0FBSyxLQUFLLFFBQVE7RUFDNUNDLE9BQU8sRUFBRSxJQUFJO0VBQ2JDLEdBQUcsRUFBRSx5QkFBeUI7RUFDOUJDLElBQUksRUFBRSxtQ0FBbUM7RUFDekNDLE9BQU9BLENBQUNDLEdBQUcsRUFBRTtJQUNULE1BQU1ZLElBQUksR0FBRyxJQUFJdEIsTUFBTSxDQUFDQSxNQUFNLENBQUNvQixVQUFVLENBQUNWLEdBQUcsQ0FBQ1csT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2pFLE1BQU1NLEdBQUcsR0FBR2pCLEdBQUcsQ0FBQ2tCLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDNUIsSUFBSUQsR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUFFO01BQ1osTUFBTUUsQ0FBQyxHQUFHbkIsR0FBRyxDQUFDb0IsU0FBUyxDQUFDSCxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUNOLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDO01BQ2xELElBQUlRLENBQUMsQ0FBQ0EsQ0FBQyxDQUFDRSxNQUFNLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUN2QlQsSUFBSSxDQUFDVSxpQkFBaUIsR0FBR0gsQ0FBQyxDQUFDRSxNQUFNO0lBQ3pDO0lBQ0EsT0FBT1QsSUFBSTtFQUNmLENBQUM7RUFDREwsU0FBUyxFQUFFZixlQUFlLENBQUNBO0FBQy9CLENBQUM7QUFFRCtCLE9BQU8sQ0FBQ1AsS0FBSyxHQUFHQSxLQUFLO0FBQ3JCTyxPQUFPLENBQUNmLFFBQVEsR0FBR0EsUUFBUTtBQUMzQmUsT0FBTyxDQUFDOUIsUUFBUSxHQUFHQSxRQUFRIn0=