9292507b978f811ef66f0383b44e1aec
"use strict";

var _react = _interopRequireDefault(require("react"));
var _ParkingSpace = _interopRequireDefault(require("../../ParkingSpace"));
var _PaymentScreen = _interopRequireDefault(require("../../PaymentScreen"));
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
require("text-encoding");
var _parkingSlice = _interopRequireDefault(require("../../redux/reducer/parkingSlice"));
require("@testing-library/jest-dom/extend-expect");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/paymentscreen.feature");
let store;
let screen;
let occupiedSpaceId;
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User pays for occupied parking spot", ({
    given,
    when,
    then,
    and
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        parkingSpaces: _parkingSlice.default
      }
    });
    const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, null, /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null))));
    const navigate = (0, _reactRouterDom.useNavigate)();
    given("I am on the Payment Screen", () => {
      expect(screen).toBeTruthy();
    });
    and("I see the vehicle registration and hours parked for the occupied parking spot", () => {
      store = (0, _toolkit.configureStore)({
        reducer: {
          parkingSpaces: _parkingSlice.default
        }
      });
      const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, null, /*#__PURE__*/_react.default.createElement(_ParkingSpace.default, null))));
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9QYXJraW5nU3BhY2UiLCJfUGF5bWVudFNjcmVlbiIsIl9qZXN0Q3VjdW1iZXIiLCJfcmVhY3QyIiwiX3BhcmtpbmdTbGljZSIsIl9yZWFjdFJlZHV4IiwiX3Rvb2xraXQiLCJfcmVhY3RSb3V0ZXJEb20iLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImZlYXR1cmUiLCJsb2FkRmVhdHVyZSIsInN0b3JlIiwic2NyZWVuIiwib2NjdXBpZWRTcGFjZUlkIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJnaXZlbiIsIndoZW4iLCJ0aGVuIiwiYW5kIiwiY29uZmlndXJlU3RvcmUiLCJyZWR1Y2VyIiwicGFya2luZ1NwYWNlcyIsInBhcmtpbmdTbGljZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsIk1lbW9yeVJvdXRlciIsIm5hdmlnYXRlIiwidXNlTmF2aWdhdGUiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5Il0sInNvdXJjZXMiOlsicGF5bWVudHNjcmVlbi5zdGVwcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUGFya2luZ1NwYWNlIGZyb20gXCIuLi8uLi9QYXJraW5nU3BhY2VcIjtcclxuaW1wb3J0IFBheW1lbnRTY3JlZW4gZnJvbSBcIi4uLy4uL1BheW1lbnRTY3JlZW5cIjtcclxuaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQgeyBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvciwgYWN0IH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IFwidGV4dC1lbmNvZGluZ1wiO1xyXG5pbXBvcnQgcGFya2luZ1NsaWNlLCB7XHJcbiAgaW5pdGlhbGl6ZVBhcmtpbmdMb3QsXHJcbiAgYWRkVG9QYXJraW5nU3BhY2UsXHJcbiAgb2NjdXB5UGFya2luZ0xvdHMsXHJcbn0gZnJvbSBcIi4uLy4uL3JlZHV4L3JlZHVjZXIvcGFya2luZ1NsaWNlXCI7XHJcbmltcG9ydCBcIkB0ZXN0aW5nLWxpYnJhcnkvamVzdC1kb20vZXh0ZW5kLWV4cGVjdFwiO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgeyBjb25maWd1cmVTdG9yZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbmltcG9ydCB7XHJcbiAgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsXHJcbiAgUm91dGVzLFxyXG4gIFJvdXRlLFxyXG4gIE1lbW9yeVJvdXRlcixcclxuICB1c2VOYXZpZ2F0ZSxcclxufSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5jb25zdCBmZWF0dXJlID0gbG9hZEZlYXR1cmUoXCJzcmMvY29tcG9uZW50cy9mZWF0dXJlcy9wYXltZW50c2NyZWVuLmZlYXR1cmVcIik7XHJcbmxldCBzdG9yZTogYW55O1xyXG5sZXQgc2NyZWVuOiBhbnk7XHJcbmxldCBvY2N1cGllZFNwYWNlSWQ6IG51bWJlcjtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIHRlc3QoXCJVc2VyIHBheXMgZm9yIG9jY3VwaWVkIHBhcmtpbmcgc3BvdFwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiwgYW5kIH0pID0+IHtcclxuICAgIHN0b3JlID0gY29uZmlndXJlU3RvcmUoe1xyXG4gICAgICByZWR1Y2VyOiB7XHJcbiAgICAgICAgcGFya2luZ1NwYWNlczogcGFya2luZ1NsaWNlLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgICBjb25zdCBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICAgIDxNZW1vcnlSb3V0ZXI+XHJcbiAgICAgICAgICA8UGF5bWVudFNjcmVlbiAvPlxyXG4gICAgICAgIDwvTWVtb3J5Um91dGVyPlxyXG4gICAgICA8L1Byb3ZpZGVyPlxyXG4gICAgKTtcclxuICAgIGNvbnN0IG5hdmlnYXRlID0gdXNlTmF2aWdhdGUoKTtcclxuICAgIGdpdmVuKFwiSSBhbSBvbiB0aGUgUGF5bWVudCBTY3JlZW5cIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlVHJ1dGh5KCk7XHJcbiAgICB9KTtcclxuICAgIGFuZChcclxuICAgICAgXCJJIHNlZSB0aGUgdmVoaWNsZSByZWdpc3RyYXRpb24gYW5kIGhvdXJzIHBhcmtlZCBmb3IgdGhlIG9jY3VwaWVkIHBhcmtpbmcgc3BvdFwiLFxyXG4gICAgICAoKSA9PiB7XHJcbiAgICAgICAgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgICAgICAgICByZWR1Y2VyOiB7XHJcbiAgICAgICAgICAgIHBhcmtpbmdTcGFjZXM6IHBhcmtpbmdTbGljZSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgICAgICAgIDxNZW1vcnlSb3V0ZXI+XHJcbiAgICAgICAgICAgICAgPFBhcmtpbmdTcGFjZSAvPlxyXG4gICAgICAgICAgICA8L01lbW9yeVJvdXRlcj5cclxuICAgICAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxhQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxjQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRyxhQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxPQUFBLEdBQUFKLE9BQUE7QUFDQUEsT0FBQTtBQUNBLElBQUFLLGFBQUEsR0FBQU4sc0JBQUEsQ0FBQUMsT0FBQTtBQUtBQSxPQUFBO0FBQ0EsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBQ0EsSUFBQU8sUUFBQSxHQUFBUCxPQUFBO0FBQ0EsSUFBQVEsZUFBQSxHQUFBUixPQUFBO0FBTTBCLFNBQUFELHVCQUFBVSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBQzFCLE1BQU1HLE9BQU8sR0FBRyxJQUFBQyx5QkFBVyxFQUFDLCtDQUErQyxDQUFDO0FBQzVFLElBQUlDLEtBQVU7QUFDZCxJQUFJQyxNQUFXO0FBQ2YsSUFBSUMsZUFBdUI7QUFDM0IsSUFBQUMsMkJBQWEsRUFBQ0wsT0FBTyxFQUFHTSxJQUFJLElBQUs7RUFDL0JBLElBQUksQ0FBQyxxQ0FBcUMsRUFBRSxDQUFDO0lBQUVDLEtBQUs7SUFBRUMsSUFBSTtJQUFFQyxJQUFJO0lBQUVDO0VBQUksQ0FBQyxLQUFLO0lBQzFFUixLQUFLLEdBQUcsSUFBQVMsdUJBQWMsRUFBQztNQUNyQkMsT0FBTyxFQUFFO1FBQ1BDLGFBQWEsRUFBRUM7TUFDakI7SUFDRixDQUFDLENBQUM7SUFDRixNQUFNWCxNQUFNLEdBQUcsSUFBQVksY0FBTSxnQkFDbkI3QixNQUFBLENBQUFhLE9BQUEsQ0FBQWlCLGFBQUEsQ0FBQ3RCLFdBQUEsQ0FBQXVCLFFBQVE7TUFBQ2YsS0FBSyxFQUFFQTtJQUFNLGdCQUNyQmhCLE1BQUEsQ0FBQWEsT0FBQSxDQUFBaUIsYUFBQSxDQUFDcEIsZUFBQSxDQUFBc0IsWUFBWSxxQkFDWGhDLE1BQUEsQ0FBQWEsT0FBQSxDQUFBaUIsYUFBQSxDQUFDMUIsY0FBQSxDQUFBUyxPQUFhLE9BQUcsQ0FDSixDQUNOLENBQ1o7SUFDRCxNQUFNb0IsUUFBUSxHQUFHLElBQUFDLDJCQUFXLEdBQUU7SUFDOUJiLEtBQUssQ0FBQyw0QkFBNEIsRUFBRSxNQUFNO01BQ3hDYyxNQUFNLENBQUNsQixNQUFNLENBQUMsQ0FBQ21CLFVBQVUsRUFBRTtJQUM3QixDQUFDLENBQUM7SUFDRlosR0FBRyxDQUNELCtFQUErRSxFQUMvRSxNQUFNO01BQ0pSLEtBQUssR0FBRyxJQUFBUyx1QkFBYyxFQUFDO1FBQ3JCQyxPQUFPLEVBQUU7VUFDUEMsYUFBYSxFQUFFQztRQUNqQjtNQUNGLENBQUMsQ0FBQztNQUNGLE1BQU1YLE1BQU0sR0FBRyxJQUFBWSxjQUFNLGdCQUNuQjdCLE1BQUEsQ0FBQWEsT0FBQSxDQUFBaUIsYUFBQSxDQUFDdEIsV0FBQSxDQUFBdUIsUUFBUTtRQUFDZixLQUFLLEVBQUVBO01BQU0sZ0JBQ3JCaEIsTUFBQSxDQUFBYSxPQUFBLENBQUFpQixhQUFBLENBQUNwQixlQUFBLENBQUFzQixZQUFZLHFCQUNYaEMsTUFBQSxDQUFBYSxPQUFBLENBQUFpQixhQUFBLENBQUMzQixhQUFBLENBQUFVLE9BQVksT0FBRyxDQUNILENBQ04sQ0FDWjtJQUNILENBQUMsQ0FDRjtFQUNILENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9