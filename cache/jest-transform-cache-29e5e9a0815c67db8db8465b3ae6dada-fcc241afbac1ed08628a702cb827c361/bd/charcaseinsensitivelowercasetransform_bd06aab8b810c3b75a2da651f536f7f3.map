{"version":3,"names":["UPPER_A_CP","codePointAt","UPPER_Z_CP","module","exports","_AZClassRanges","_hasUFlag","init","ast","Set","flags","includes","shouldRun","Char","path","node","parent","isNaN","codePoint","type","has","isAZClassRange","add","lower","symbol","toLowerCase","value","displaySymbolAsValue","classRange","from","to","kind","toString","isSurrogatePair","_getSurrogatePairFrom","getSurrogatePairFromCodePoint","lead","trail","repeat","length","code","Math","floor"],"sources":["char-case-insensitive-lowercase-transform.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar UPPER_A_CP = 'A'.codePointAt(0);\nvar UPPER_Z_CP = 'Z'.codePointAt(0);\n/**\n * Transforms case-insensitive regexp to lowercase\n *\n * /AaBbÏ/i -> /aabbï/i\n */\nmodule.exports = {\n  _AZClassRanges: null,\n  _hasUFlag: false,\n  init: function init(ast) {\n    this._AZClassRanges = new Set();\n    this._hasUFlag = ast.flags.includes('u');\n  },\n  shouldRun: function shouldRun(ast) {\n    return ast.flags.includes('i');\n  },\n  Char: function Char(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    if (isNaN(node.codePoint)) {\n      return;\n    }\n\n    // Engine support for case-insensitive matching without the u flag\n    // for characters above \\u1000 does not seem reliable.\n    if (!this._hasUFlag && node.codePoint >= 0x1000) {\n      return;\n    }\n\n    if (parent.type === 'ClassRange') {\n      // The only class ranges we handle must be inside A-Z.\n      // After the `from` char is processed, the isAZClassRange test\n      // will be false, so we use a Set to keep track of parents and\n      // process the `to` char.\n      if (!this._AZClassRanges.has(parent) && !isAZClassRange(parent)) {\n        return;\n      }\n      this._AZClassRanges.add(parent);\n    }\n\n    var lower = node.symbol.toLowerCase();\n    if (lower !== node.symbol) {\n      node.value = displaySymbolAsValue(lower, node);\n      node.symbol = lower;\n      node.codePoint = lower.codePointAt(0);\n    }\n  }\n};\n\nfunction isAZClassRange(classRange) {\n  var from = classRange.from,\n      to = classRange.to;\n  // A-Z\n\n  return from.codePoint >= UPPER_A_CP && from.codePoint <= UPPER_Z_CP && to.codePoint >= UPPER_A_CP && to.codePoint <= UPPER_Z_CP;\n}\n\nfunction displaySymbolAsValue(symbol, node) {\n  var codePoint = symbol.codePointAt(0);\n  if (node.kind === 'decimal') {\n    return '\\\\' + codePoint;\n  }\n  if (node.kind === 'oct') {\n    return '\\\\0' + codePoint.toString(8);\n  }\n  if (node.kind === 'hex') {\n    return '\\\\x' + codePoint.toString(16);\n  }\n  if (node.kind === 'unicode') {\n    if (node.isSurrogatePair) {\n      var _getSurrogatePairFrom = getSurrogatePairFromCodePoint(codePoint),\n          lead = _getSurrogatePairFrom.lead,\n          trail = _getSurrogatePairFrom.trail;\n\n      return '\\\\u' + '0'.repeat(4 - lead.length) + lead + '\\\\u' + '0'.repeat(4 - trail.length) + trail;\n    } else if (node.value.includes('{')) {\n      return '\\\\u{' + codePoint.toString(16) + '}';\n    } else {\n      var code = codePoint.toString(16);\n      return '\\\\u' + '0'.repeat(4 - code.length) + code;\n    }\n  }\n  // simple\n  return symbol;\n}\n\n/**\n * Converts a code point to a surrogate pair.\n * Conversion algorithm is taken from The Unicode Standard 3.0 Section 3.7\n * (https://www.unicode.org/versions/Unicode3.0.0/ch03.pdf)\n * @param {number} codePoint - Between 0x10000 and 0x10ffff\n * @returns {{lead: string, trail: string}}\n */\nfunction getSurrogatePairFromCodePoint(codePoint) {\n  var lead = Math.floor((codePoint - 0x10000) / 0x400) + 0xd800;\n  var trail = (codePoint - 0x10000) % 0x400 + 0xdc00;\n  return {\n    lead: lead.toString(16),\n    trail: trail.toString(16)\n  };\n}"],"mappings":"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"}