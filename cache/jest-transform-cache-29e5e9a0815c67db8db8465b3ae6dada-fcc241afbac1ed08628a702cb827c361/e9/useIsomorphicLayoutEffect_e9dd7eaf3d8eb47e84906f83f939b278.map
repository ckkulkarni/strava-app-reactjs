{"version":3,"names":["exports","__esModule","useIsomorphicLayoutEffect","canUseDOM","_react","require","window","document","createElement","useLayoutEffect","useEffect"],"sources":["useIsomorphicLayoutEffect.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.useIsomorphicLayoutEffect = exports.canUseDOM = void 0;\n\nvar _react = require(\"react\");\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\nconst canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\nexports.canUseDOM = canUseDOM;\nconst useIsomorphicLayoutEffect = canUseDOM ? _react.useLayoutEffect : _react.useEffect;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,yBAAyB,GAAGF,OAAO,CAACG,SAAS,GAAG,KAAK,CAAC;AAE9D,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,SAAS,GAAG,CAAC,EAAE,OAAOG,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,IAAI,OAAOD,MAAM,CAACC,QAAQ,CAACC,aAAa,KAAK,WAAW,CAAC;AACrJR,OAAO,CAACG,SAAS,GAAGA,SAAS;AAC7B,MAAMD,yBAAyB,GAAGC,SAAS,GAAGC,MAAM,CAACK,eAAe,GAAGL,MAAM,CAACM,SAAS;AACvFV,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB"}