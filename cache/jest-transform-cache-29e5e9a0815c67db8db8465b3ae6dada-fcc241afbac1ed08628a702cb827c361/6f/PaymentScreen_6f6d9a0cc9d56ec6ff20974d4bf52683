8b3f7df7ae0fcf2bb05709eff2a8347d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRouter = require("react-router");
var _reactRouterDom = require("react-router-dom");
var _parkingSlice = require("./redux/reducer/parkingSlice");
var _reactRedux = require("react-redux");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const PaymentScreen = () => {
  const location = (0, _reactRouter.useLocation)();
  const {
    spaceDetails,
    space
  } = location.state;
  const dispatch = (0, _reactRedux.useDispatch)();
  const navigation = (0, _reactRouter.useNavigate)();
  const [hoursParked, setHoursParked] = (0, _react.useState)(null);
  (0, _react.useEffect)(() => {
    const [parkingHours, parkingMinutes] = spaceDetails.parkingTime.split(":");
    const parkedTime = new Date();
    parkedTime.setHours(Number(parkingHours), Number(parkingMinutes), 0, 0);
    const hoursParked = Math.ceil((new Date().getTime() - parkedTime.getTime()) / (1000 * 60 * 60) - 1);
    setHoursParked(hoursParked);
  }, [spaceDetails.parkingTime]);
  const calculateParkingCharges = parkingTime => {
    const [parkingHours, parkingMinutes] = parkingTime.split(":");
    const parkedTime = new Date();
    parkedTime.setHours(Number(parkingHours), Number(parkingMinutes), 0, 0);
    const hoursParked = Math.ceil((new Date().getTime() - parkedTime.getTime()) / (1000 * 60 * 60));
    let parkingCharge = 10;
    if (hoursParked > 2) {
      parkingCharge += (hoursParked - 2) * 10 - 10;
    }
    return parkingCharge;
  };
  const [payment, setPayment] = (0, _react.useState)(calculateParkingCharges(spaceDetails.parkingTime));
  const handleSubmit = async () => {
    const reg = spaceDetails.registration;
    const charges = payment;
    try {
      const result = await fetch(`https://httpstat.us/200`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          "car-registration": reg,
          charge: charges
        })
      });
      if (result.ok) {
        alert("Payment Successful!");
        dispatch((0, _parkingSlice.paymentComplete)(space));
        navigation("/spaces");
      } else {
        alert("Payment Failed");
      }
    } catch (error) {
      console.error(error);
    }
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "paymentScreen"
  }, /*#__PURE__*/_react.default.createElement("p", null, "Vehicle Registration: ", spaceDetails.registration), /*#__PURE__*/_react.default.createElement("p", null, "Hours Parked: ", hoursParked), /*#__PURE__*/_react.default.createElement("p", null, "Parking Charge: $", payment), /*#__PURE__*/_react.default.createElement("button", {
    className: "btn btn-primary",
    onClick: handleSubmit
  }, "Make Payment"), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, {
    to: "/spaces"
  }, /*#__PURE__*/_react.default.createElement("button", {
    className: "btn btn-secondary"
  }, "Go Back")));
};
var _default = PaymentScreen;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,