11be709b081ae80c2c46c76388847638
"use strict";

var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _Base = _interopRequireDefault(require("../../Base"));
var _react2 = _interopRequireDefault(require("react"));
require("text-encoding");
var _parkingSlice = _interopRequireDefault(require("../../redux/reducer/parkingSlice"));
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
let store;
let rendered;
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User enters the number of spaces", ({
    given,
    when,
    then,
    and
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        parking: _parkingSlice.default
      }
    });
    given("the user is on the home page", () => {
      const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_Base.default, null))));
      expect(screen).toBeTruthy();
    });
    when("the user enters some input in the input field and submits", () => {
      const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_Base.default, null))));
      const input = screen.getByPlaceholderText("Enter the Spaces");
      const button = screen.getByText("Submit");
      _react.fireEvent.change(input, {
        target: {
          value: 10
        }
      });
      _react.fireEvent.click(button);
      expect(window.alert).toHaveBeenCalledWith("10 Spaces selected");
    });
    then('an alert is displayed with "10 Spaces selected"', () => {
      const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_Base.default, null))));
      const input = screen.getByPlaceholderText("Enter the Spaces");
      const button = screen.getByText("Submit");
      _react.fireEvent.change(input, {
        target: {
          value: 15
        }
      });
      _react.fireEvent.click(button);
      expect(window.alert).toHaveBeenCalledWith("10 Spaces selected");
    });
    and("the parking lot should be initialized with 10 spaces", () => {
      const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_Base.default, null))));
      const input = screen.getByTestId("input");
      const button = screen.getByText("Submit");
      _react.fireEvent.change(input, {
        target: {
          value: 15
        }
      });
      _react.fireEvent.click(button);
      expect(store.getState().parking.numSpaces).toEqual(10);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,