{"version":3,"names":["YAMLSeq","require","resolveProps","utilFlowIndentCheck","resolveBlockSeq","composeNode","composeEmptyNode","ctx","bs","onError","seq","schema","atRoot","offset","commentEnd","start","value","items","props","indicator","next","startOnNewline","found","anchor","tag","type","end","comment","node","compat","flowIndentCheck","indent","range","push","exports"],"sources":["resolve-block-seq.js"],"sourcesContent":["'use strict';\n\nvar YAMLSeq = require('../nodes/YAMLSeq.js');\nvar resolveProps = require('./resolve-props.js');\nvar utilFlowIndentCheck = require('./util-flow-indent-check.js');\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq.YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps.resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            utilFlowIndentCheck.flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexports.resolveBlockSeq = resolveBlockSeq;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC5C,IAAIC,YAAY,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAChD,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AAEhE,SAASG,eAAeA,CAAC;EAAEC,WAAW;EAAEC;AAAiB,CAAC,EAAEC,GAAG,EAAEC,EAAE,EAAEC,OAAO,EAAE;EAC1E,MAAMC,GAAG,GAAG,IAAIV,OAAO,CAACA,OAAO,CAACO,GAAG,CAACI,MAAM,CAAC;EAC3C,IAAIJ,GAAG,CAACK,MAAM,EACVL,GAAG,CAACK,MAAM,GAAG,KAAK;EACtB,IAAIC,MAAM,GAAGL,EAAE,CAACK,MAAM;EACtB,IAAIC,UAAU,GAAG,IAAI;EACrB,KAAK,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,IAAIR,EAAE,CAACS,KAAK,EAAE;IACrC,MAAMC,KAAK,GAAGhB,YAAY,CAACA,YAAY,CAACa,KAAK,EAAE;MAC3CI,SAAS,EAAE,cAAc;MACzBC,IAAI,EAAEJ,KAAK;MACXH,MAAM;MACNJ,OAAO;MACPY,cAAc,EAAE;IACpB,CAAC,CAAC;IACF,IAAI,CAACH,KAAK,CAACI,KAAK,EAAE;MACd,IAAIJ,KAAK,CAACK,MAAM,IAAIL,KAAK,CAACM,GAAG,IAAIR,KAAK,EAAE;QACpC,IAAIA,KAAK,IAAIA,KAAK,CAACS,IAAI,KAAK,WAAW,EACnChB,OAAO,CAACS,KAAK,CAACQ,GAAG,EAAE,YAAY,EAAE,kDAAkD,CAAC,CAAC,KAErFjB,OAAO,CAACI,MAAM,EAAE,cAAc,EAAE,mCAAmC,CAAC;MAC5E,CAAC,MACI;QACDC,UAAU,GAAGI,KAAK,CAACQ,GAAG;QACtB,IAAIR,KAAK,CAACS,OAAO,EACbjB,GAAG,CAACiB,OAAO,GAAGT,KAAK,CAACS,OAAO;QAC/B;MACJ;IACJ;IACA,MAAMC,IAAI,GAAGZ,KAAK,GACZX,WAAW,CAACE,GAAG,EAAES,KAAK,EAAEE,KAAK,EAAET,OAAO,CAAC,GACvCH,gBAAgB,CAACC,GAAG,EAAEW,KAAK,CAACQ,GAAG,EAAEX,KAAK,EAAE,IAAI,EAAEG,KAAK,EAAET,OAAO,CAAC;IACnE,IAAIF,GAAG,CAACI,MAAM,CAACkB,MAAM,EACjB1B,mBAAmB,CAAC2B,eAAe,CAACtB,EAAE,CAACuB,MAAM,EAAEf,KAAK,EAAEP,OAAO,CAAC;IAClEI,MAAM,GAAGe,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACtBtB,GAAG,CAACO,KAAK,CAACgB,IAAI,CAACL,IAAI,CAAC;EACxB;EACAlB,GAAG,CAACsB,KAAK,GAAG,CAACxB,EAAE,CAACK,MAAM,EAAEA,MAAM,EAAEC,UAAU,IAAID,MAAM,CAAC;EACrD,OAAOH,GAAG;AACd;AAEAwB,OAAO,CAAC9B,eAAe,GAAGA,eAAe"}