{"version":3,"names":["stringifyCollection","require","addPairToJSMap","Collection","Node","Pair","Scalar","findPair","items","key","k","isScalar","value","it","isPair","undefined","YAMLMap","tagName","constructor","schema","MAP","add","pair","overwrite","_pair","prev","sortEntries","sortMapEntries","Error","isScalarValue","i","findIndex","item","push","splice","delete","del","indexOf","length","get","keepScalar","node","has","set","toJSON","_","ctx","Type","map","mapAsMap","Map","onCreate","toString","onComment","onChompKeep","JSON","stringify","allNullValues","hasAllNullValues","Object","assign","blockItemPrefix","flowChars","start","end","itemIndent","indent","exports"],"sources":["YAMLMap.js"],"sourcesContent":["'use strict';\n\nvar stringifyCollection = require('../stringify/stringifyCollection.js');\nvar addPairToJSMap = require('./addPairToJSMap.js');\nvar Collection = require('./Collection.js');\nvar Node = require('./Node.js');\nvar Pair = require('./Pair.js');\nvar Scalar = require('./Scalar.js');\n\nfunction findPair(items, key) {\n    const k = Node.isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (Node.isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (Node.isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection.Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(Node.MAP, schema);\n        this.items = [];\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (Node.isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair.Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair.Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (Node.isScalar(prev.value) && Scalar.isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && Node.isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair.Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap.addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!Node.isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection.stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexports.YAMLMap = YAMLMap;\nexports.findPair = findPair;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,qCAAqC,CAAC;AACxE,IAAIC,cAAc,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AACnD,IAAIE,UAAU,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC3C,IAAIG,IAAI,GAAGH,OAAO,CAAC,WAAW,CAAC;AAC/B,IAAII,IAAI,GAAGJ,OAAO,CAAC,WAAW,CAAC;AAC/B,IAAIK,MAAM,GAAGL,OAAO,CAAC,aAAa,CAAC;AAEnC,SAASM,QAAQA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC1B,MAAMC,CAAC,GAAGN,IAAI,CAACO,QAAQ,CAACF,GAAG,CAAC,GAAGA,GAAG,CAACG,KAAK,GAAGH,GAAG;EAC9C,KAAK,MAAMI,EAAE,IAAIL,KAAK,EAAE;IACpB,IAAIJ,IAAI,CAACU,MAAM,CAACD,EAAE,CAAC,EAAE;MACjB,IAAIA,EAAE,CAACJ,GAAG,KAAKA,GAAG,IAAII,EAAE,CAACJ,GAAG,KAAKC,CAAC,EAC9B,OAAOG,EAAE;MACb,IAAIT,IAAI,CAACO,QAAQ,CAACE,EAAE,CAACJ,GAAG,CAAC,IAAII,EAAE,CAACJ,GAAG,CAACG,KAAK,KAAKF,CAAC,EAC3C,OAAOG,EAAE;IACjB;EACJ;EACA,OAAOE,SAAS;AACpB;AACA,MAAMC,OAAO,SAASb,UAAU,CAACA,UAAU,CAAC;EACxC,WAAWc,OAAOA,CAAA,EAAG;IACjB,OAAO,uBAAuB;EAClC;EACAC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACf,IAAI,CAACgB,GAAG,EAAED,MAAM,CAAC;IACvB,IAAI,CAACX,KAAK,GAAG,EAAE;EACnB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIa,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAE;IACjB,IAAIC,KAAK;IACT,IAAIpB,IAAI,CAACU,MAAM,CAACQ,IAAI,CAAC,EACjBE,KAAK,GAAGF,IAAI,CAAC,KACZ,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,EAAE,KAAK,IAAIA,IAAI,CAAC,EAAE;MAC5D;MACAE,KAAK,GAAG,IAAInB,IAAI,CAACA,IAAI,CAACiB,IAAI,EAAEA,IAAI,EAAEV,KAAK,CAAC;IAC5C,CAAC,MAEGY,KAAK,GAAG,IAAInB,IAAI,CAACA,IAAI,CAACiB,IAAI,CAACb,GAAG,EAAEa,IAAI,CAACV,KAAK,CAAC;IAC/C,MAAMa,IAAI,GAAGlB,QAAQ,CAAC,IAAI,CAACC,KAAK,EAAEgB,KAAK,CAACf,GAAG,CAAC;IAC5C,MAAMiB,WAAW,GAAG,IAAI,CAACP,MAAM,EAAEQ,cAAc;IAC/C,IAAIF,IAAI,EAAE;MACN,IAAI,CAACF,SAAS,EACV,MAAM,IAAIK,KAAK,CAAE,OAAMJ,KAAK,CAACf,GAAI,cAAa,CAAC;MACnD;MACA,IAAIL,IAAI,CAACO,QAAQ,CAACc,IAAI,CAACb,KAAK,CAAC,IAAIN,MAAM,CAACuB,aAAa,CAACL,KAAK,CAACZ,KAAK,CAAC,EAC9Da,IAAI,CAACb,KAAK,CAACA,KAAK,GAAGY,KAAK,CAACZ,KAAK,CAAC,KAE/Ba,IAAI,CAACb,KAAK,GAAGY,KAAK,CAACZ,KAAK;IAChC,CAAC,MACI,IAAIc,WAAW,EAAE;MAClB,MAAMI,CAAC,GAAG,IAAI,CAACtB,KAAK,CAACuB,SAAS,CAACC,IAAI,IAAIN,WAAW,CAACF,KAAK,EAAEQ,IAAI,CAAC,GAAG,CAAC,CAAC;MACpE,IAAIF,CAAC,KAAK,CAAC,CAAC,EACR,IAAI,CAACtB,KAAK,CAACyB,IAAI,CAACT,KAAK,CAAC,CAAC,KAEvB,IAAI,CAAChB,KAAK,CAAC0B,MAAM,CAACJ,CAAC,EAAE,CAAC,EAAEN,KAAK,CAAC;IACtC,CAAC,MACI;MACD,IAAI,CAAChB,KAAK,CAACyB,IAAI,CAACT,KAAK,CAAC;IAC1B;EACJ;EACAW,MAAMA,CAAC1B,GAAG,EAAE;IACR,MAAMI,EAAE,GAAGN,QAAQ,CAAC,IAAI,CAACC,KAAK,EAAEC,GAAG,CAAC;IACpC,IAAI,CAACI,EAAE,EACH,OAAO,KAAK;IAChB,MAAMuB,GAAG,GAAG,IAAI,CAAC5B,KAAK,CAAC0B,MAAM,CAAC,IAAI,CAAC1B,KAAK,CAAC6B,OAAO,CAACxB,EAAE,CAAC,EAAE,CAAC,CAAC;IACxD,OAAOuB,GAAG,CAACE,MAAM,GAAG,CAAC;EACzB;EACAC,GAAGA,CAAC9B,GAAG,EAAE+B,UAAU,EAAE;IACjB,MAAM3B,EAAE,GAAGN,QAAQ,CAAC,IAAI,CAACC,KAAK,EAAEC,GAAG,CAAC;IACpC,MAAMgC,IAAI,GAAG5B,EAAE,EAAED,KAAK;IACtB,OAAO,CAAC,CAAC4B,UAAU,IAAIpC,IAAI,CAACO,QAAQ,CAAC8B,IAAI,CAAC,GAAGA,IAAI,CAAC7B,KAAK,GAAG6B,IAAI,KAAK1B,SAAS;EAChF;EACA2B,GAAGA,CAACjC,GAAG,EAAE;IACL,OAAO,CAAC,CAACF,QAAQ,CAAC,IAAI,CAACC,KAAK,EAAEC,GAAG,CAAC;EACtC;EACAkC,GAAGA,CAAClC,GAAG,EAAEG,KAAK,EAAE;IACZ,IAAI,CAACS,GAAG,CAAC,IAAIhB,IAAI,CAACA,IAAI,CAACI,GAAG,EAAEG,KAAK,CAAC,EAAE,IAAI,CAAC;EAC7C;EACA;AACJ;AACA;AACA;AACA;EACIgC,MAAMA,CAACC,CAAC,EAAEC,GAAG,EAAEC,IAAI,EAAE;IACjB,MAAMC,GAAG,GAAGD,IAAI,GAAG,IAAIA,IAAI,EAAE,GAAGD,GAAG,EAAEG,QAAQ,GAAG,IAAIC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9D,IAAIJ,GAAG,EAAEK,QAAQ,EACbL,GAAG,CAACK,QAAQ,CAACH,GAAG,CAAC;IACrB,KAAK,MAAMhB,IAAI,IAAI,IAAI,CAACxB,KAAK,EACzBN,cAAc,CAACA,cAAc,CAAC4C,GAAG,EAAEE,GAAG,EAAEhB,IAAI,CAAC;IACjD,OAAOgB,GAAG;EACd;EACAI,QAAQA,CAACN,GAAG,EAAEO,SAAS,EAAEC,WAAW,EAAE;IAClC,IAAI,CAACR,GAAG,EACJ,OAAOS,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;IAC/B,KAAK,MAAMxB,IAAI,IAAI,IAAI,CAACxB,KAAK,EAAE;MAC3B,IAAI,CAACJ,IAAI,CAACU,MAAM,CAACkB,IAAI,CAAC,EAClB,MAAM,IAAIJ,KAAK,CAAE,sCAAqC2B,IAAI,CAACC,SAAS,CAACxB,IAAI,CAAE,UAAS,CAAC;IAC7F;IACA,IAAI,CAACc,GAAG,CAACW,aAAa,IAAI,IAAI,CAACC,gBAAgB,CAAC,KAAK,CAAC,EAClDZ,GAAG,GAAGa,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,GAAG,EAAE;MAAEW,aAAa,EAAE;IAAK,CAAC,CAAC;IACzD,OAAOzD,mBAAmB,CAACA,mBAAmB,CAAC,IAAI,EAAE8C,GAAG,EAAE;MACtDe,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,GAAG,EAAE;MAAI,CAAC;MACnCC,UAAU,EAAEnB,GAAG,CAACoB,MAAM,IAAI,EAAE;MAC5BZ,WAAW;MACXD;IACJ,CAAC,CAAC;EACN;AACJ;AAEAc,OAAO,CAACnD,OAAO,GAAGA,OAAO;AACzBmD,OAAO,CAAC5D,QAAQ,GAAGA,QAAQ"}