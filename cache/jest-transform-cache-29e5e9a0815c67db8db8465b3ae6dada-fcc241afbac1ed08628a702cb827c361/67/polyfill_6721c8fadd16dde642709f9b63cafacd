f181559063c9047cc9f57823eb9fdb4f
'use strict';

var implementation = require('./implementation');
var supportsDescriptors = require('define-properties').supportsDescriptors;
var $gOPD = Object.getOwnPropertyDescriptor;
module.exports = function getPolyfill() {
  if (supportsDescriptors && /a/mig.flags === 'gim') {
    var descriptor = $gOPD(RegExp.prototype, 'flags');
    if (descriptor && typeof descriptor.get === 'function' && typeof RegExp.prototype.dotAll === 'boolean' && typeof RegExp.prototype.hasIndices === 'boolean') {
      /* eslint getter-return: 0 */
      var calls = '';
      var o = {};
      Object.defineProperty(o, 'hasIndices', {
        get: function () {
          calls += 'd';
        }
      });
      Object.defineProperty(o, 'sticky', {
        get: function () {
          calls += 'y';
        }
      });
      if (calls === 'dy') {
        return descriptor.get;
      }
    }
  }
  return implementation;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbXBsZW1lbnRhdGlvbiIsInJlcXVpcmUiLCJzdXBwb3J0c0Rlc2NyaXB0b3JzIiwiJGdPUEQiLCJPYmplY3QiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0UG9seWZpbGwiLCJmbGFncyIsImRlc2NyaXB0b3IiLCJSZWdFeHAiLCJwcm90b3R5cGUiLCJnZXQiLCJkb3RBbGwiLCJoYXNJbmRpY2VzIiwiY2FsbHMiLCJvIiwiZGVmaW5lUHJvcGVydHkiXSwic291cmNlcyI6WyJwb2x5ZmlsbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpbXBsZW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vaW1wbGVtZW50YXRpb24nKTtcblxudmFyIHN1cHBvcnRzRGVzY3JpcHRvcnMgPSByZXF1aXJlKCdkZWZpbmUtcHJvcGVydGllcycpLnN1cHBvcnRzRGVzY3JpcHRvcnM7XG52YXIgJGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldFBvbHlmaWxsKCkge1xuXHRpZiAoc3VwcG9ydHNEZXNjcmlwdG9ycyAmJiAoL2EvbWlnKS5mbGFncyA9PT0gJ2dpbScpIHtcblx0XHR2YXIgZGVzY3JpcHRvciA9ICRnT1BEKFJlZ0V4cC5wcm90b3R5cGUsICdmbGFncycpO1xuXHRcdGlmIChcblx0XHRcdGRlc2NyaXB0b3Jcblx0XHRcdCYmIHR5cGVvZiBkZXNjcmlwdG9yLmdldCA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdFx0JiYgdHlwZW9mIFJlZ0V4cC5wcm90b3R5cGUuZG90QWxsID09PSAnYm9vbGVhbidcblx0XHRcdCYmIHR5cGVvZiBSZWdFeHAucHJvdG90eXBlLmhhc0luZGljZXMgPT09ICdib29sZWFuJ1xuXHRcdCkge1xuXHRcdFx0LyogZXNsaW50IGdldHRlci1yZXR1cm46IDAgKi9cblx0XHRcdHZhciBjYWxscyA9ICcnO1xuXHRcdFx0dmFyIG8gPSB7fTtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCAnaGFzSW5kaWNlcycsIHtcblx0XHRcdFx0Z2V0OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0Y2FsbHMgKz0gJ2QnO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCAnc3RpY2t5Jywge1xuXHRcdFx0XHRnZXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRjYWxscyArPSAneSc7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0aWYgKGNhbGxzID09PSAnZHknKSB7XG5cdFx0XHRcdHJldHVybiBkZXNjcmlwdG9yLmdldDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0cmV0dXJuIGltcGxlbWVudGF0aW9uO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxjQUFjLEdBQUdDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQztBQUVoRCxJQUFJQyxtQkFBbUIsR0FBR0QsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUNDLG1CQUFtQjtBQUMxRSxJQUFJQyxLQUFLLEdBQUdDLE1BQU0sQ0FBQ0Msd0JBQXdCO0FBRTNDQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxTQUFTQyxXQUFXQSxDQUFBLEVBQUc7RUFDdkMsSUFBSU4sbUJBQW1CLElBQUssTUFBTSxDQUFFTyxLQUFLLEtBQUssS0FBSyxFQUFFO0lBQ3BELElBQUlDLFVBQVUsR0FBR1AsS0FBSyxDQUFDUSxNQUFNLENBQUNDLFNBQVMsRUFBRSxPQUFPLENBQUM7SUFDakQsSUFDQ0YsVUFBVSxJQUNQLE9BQU9BLFVBQVUsQ0FBQ0csR0FBRyxLQUFLLFVBQVUsSUFDcEMsT0FBT0YsTUFBTSxDQUFDQyxTQUFTLENBQUNFLE1BQU0sS0FBSyxTQUFTLElBQzVDLE9BQU9ILE1BQU0sQ0FBQ0MsU0FBUyxDQUFDRyxVQUFVLEtBQUssU0FBUyxFQUNsRDtNQUNEO01BQ0EsSUFBSUMsS0FBSyxHQUFHLEVBQUU7TUFDZCxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO01BQ1ZiLE1BQU0sQ0FBQ2MsY0FBYyxDQUFDRCxDQUFDLEVBQUUsWUFBWSxFQUFFO1FBQ3RDSixHQUFHLEVBQUUsU0FBQUEsQ0FBQSxFQUFZO1VBQ2hCRyxLQUFLLElBQUksR0FBRztRQUNiO01BQ0QsQ0FBQyxDQUFDO01BQ0ZaLE1BQU0sQ0FBQ2MsY0FBYyxDQUFDRCxDQUFDLEVBQUUsUUFBUSxFQUFFO1FBQ2xDSixHQUFHLEVBQUUsU0FBQUEsQ0FBQSxFQUFZO1VBQ2hCRyxLQUFLLElBQUksR0FBRztRQUNiO01BQ0QsQ0FBQyxDQUFDO01BQ0YsSUFBSUEsS0FBSyxLQUFLLElBQUksRUFBRTtRQUNuQixPQUFPTixVQUFVLENBQUNHLEdBQUc7TUFDdEI7SUFDRDtFQUNEO0VBQ0EsT0FBT2IsY0FBYztBQUN0QixDQUFDIn0=