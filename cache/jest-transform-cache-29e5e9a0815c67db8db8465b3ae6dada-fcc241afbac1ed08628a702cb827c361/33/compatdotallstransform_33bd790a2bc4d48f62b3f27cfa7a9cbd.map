{"version":3,"names":["module","exports","_hasUFlag","shouldRun","ast","flags","includes","replace","Char","path","node","kind","value","toValue","toSymbol","type","expressions","from","symbol","to"],"sources":["compat-dotall-s-transform.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to translate `/./s` to `/[\\0-\\uFFFF]/`.\n */\n\nmodule.exports = {\n\n  // Whether `u` flag present. In which case we transform to\n  // \\u{10FFFF} instead of \\uFFFF.\n  _hasUFlag: false,\n\n  // Only run this plugin if we have `s` flag.\n  shouldRun: function shouldRun(ast) {\n    var shouldRun = ast.flags.includes('s');\n\n    if (!shouldRun) {\n      return false;\n    }\n\n    // Strip the `s` flag.\n    ast.flags = ast.flags.replace('s', '');\n\n    // Whether we have also `u`.\n    this._hasUFlag = ast.flags.includes('u');\n\n    return true;\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'meta' || node.value !== '.') {\n      return;\n    }\n\n    var toValue = '\\\\uFFFF';\n    var toSymbol = '\\uFFFF';\n\n    if (this._hasUFlag) {\n      toValue = '\\\\u{10FFFF}';\n      toSymbol = '\\uDBFF\\uDFFF';\n    }\n\n    path.replace({\n      type: 'CharacterClass',\n      expressions: [{\n        type: 'ClassRange',\n        from: {\n          type: 'Char',\n          value: '\\\\0',\n          kind: 'decimal',\n          symbol: '\\0'\n        },\n        to: {\n          type: 'Char',\n          value: toValue,\n          kind: 'unicode',\n          symbol: toSymbol\n        }\n      }]\n    });\n  }\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG;EAEf;EACA;EACAC,SAAS,EAAE,KAAK;EAEhB;EACAC,SAAS,EAAE,SAASA,SAASA,CAACC,GAAG,EAAE;IACjC,IAAID,SAAS,GAAGC,GAAG,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC;IAEvC,IAAI,CAACH,SAAS,EAAE;MACd,OAAO,KAAK;IACd;;IAEA;IACAC,GAAG,CAACC,KAAK,GAAGD,GAAG,CAACC,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;;IAEtC;IACA,IAAI,CAACL,SAAS,GAAGE,GAAG,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC;IAExC,OAAO,IAAI;EACb,CAAC;EACDE,IAAI,EAAE,SAASA,IAAIA,CAACC,IAAI,EAAE;IACxB,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IAGpB,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,IAAID,IAAI,CAACE,KAAK,KAAK,GAAG,EAAE;MAC9C;IACF;IAEA,IAAIC,OAAO,GAAG,SAAS;IACvB,IAAIC,QAAQ,GAAG,QAAQ;IAEvB,IAAI,IAAI,CAACZ,SAAS,EAAE;MAClBW,OAAO,GAAG,aAAa;MACvBC,QAAQ,GAAG,cAAc;IAC3B;IAEAL,IAAI,CAACF,OAAO,CAAC;MACXQ,IAAI,EAAE,gBAAgB;MACtBC,WAAW,EAAE,CAAC;QACZD,IAAI,EAAE,YAAY;QAClBE,IAAI,EAAE;UACJF,IAAI,EAAE,MAAM;UACZH,KAAK,EAAE,KAAK;UACZD,IAAI,EAAE,SAAS;UACfO,MAAM,EAAE;QACV,CAAC;QACDC,EAAE,EAAE;UACFJ,IAAI,EAAE,MAAM;UACZH,KAAK,EAAEC,OAAO;UACdF,IAAI,EAAE,SAAS;UACfO,MAAM,EAAEJ;QACV;MACF,CAAC;IACH,CAAC,CAAC;EACJ;AACF,CAAC"}