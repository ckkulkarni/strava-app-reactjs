{"version":3,"names":["clone","require","parser","transform","optimizationTransforms","module","exports","optimize","regexp","_ref","arguments","length","undefined","_ref$whitelist","whitelist","_ref$blacklist","blacklist","transformsRaw","Array","from","keys","transformToApply","filter","includes","ast","RegExp","parse","result","TransformResult","prevResultString","toString","getAST","forEach","transformName","has","Error","join","transformer","get","newResult"],"sources":["index.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar clone = require('../utils/clone');\nvar parser = require('../parser');\nvar transform = require('../transform');\nvar optimizationTransforms = require('./transforms');\n\nmodule.exports = {\n  /**\n   * Optimizer transforms a regular expression into an optimized version,\n   * replacing some sub-expressions with their idiomatic patterns.\n   *\n   * @param string | RegExp | AST - a regexp to optimize.\n   *\n   * @return TransformResult - an optimized regexp.\n   *\n   * Example:\n   *\n   *   /[a-zA-Z_0-9][a-zA-Z_0-9]*\\e{1,}/\n   *\n   * Optimized to:\n   *\n   *   /\\w+e+/\n   */\n  optimize: function optimize(regexp) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$whitelist = _ref.whitelist,\n        whitelist = _ref$whitelist === undefined ? [] : _ref$whitelist,\n        _ref$blacklist = _ref.blacklist,\n        blacklist = _ref$blacklist === undefined ? [] : _ref$blacklist;\n\n    var transformsRaw = whitelist.length > 0 ? whitelist : Array.from(optimizationTransforms.keys());\n\n    var transformToApply = transformsRaw.filter(function (transform) {\n      return !blacklist.includes(transform);\n    });\n\n    var ast = regexp;\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp);\n    }\n\n    var result = new transform.TransformResult(ast);\n    var prevResultString = void 0;\n\n    do {\n      // Get a copy of the current state here so\n      // we can compare it with the state at the\n      // end of the loop.\n      prevResultString = result.toString();\n      ast = clone(result.getAST());\n\n      transformToApply.forEach(function (transformName) {\n        if (!optimizationTransforms.has(transformName)) {\n          throw new Error('Unknown optimization-transform: ' + transformName + '. ' + 'Available transforms are: ' + Array.from(optimizationTransforms.keys()).join(', '));\n        }\n\n        var transformer = optimizationTransforms.get(transformName);\n\n        // Don't override result just yet since we\n        // might want to rollback the transform\n        var newResult = transform.transform(ast, transformer);\n\n        if (newResult.toString() !== result.toString()) {\n          if (newResult.toString().length <= result.toString().length) {\n            result = newResult;\n          } else {\n            // Result has changed but is not shorter:\n            // restore ast to its previous state.\n\n            ast = clone(result.getAST());\n          }\n        }\n      });\n\n      // Keep running the optimizer until it stops\n      // making any change to the regexp.\n    } while (result.toString() !== prevResultString);\n\n    return result;\n  }\n};"],"mappings":"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"}