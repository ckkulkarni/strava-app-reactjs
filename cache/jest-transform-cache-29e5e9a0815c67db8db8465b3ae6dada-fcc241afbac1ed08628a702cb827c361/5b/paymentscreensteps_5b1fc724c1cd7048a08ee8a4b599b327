50e334903a898b2e67a5409c052a88f8
"use strict";

var _react = _interopRequireDefault(require("react"));
var _PaymentScreen = _interopRequireDefault(require("../../PaymentScreen"));
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
require("text-encoding");
var _parkingSlice = _interopRequireDefault(require("../../redux/reducer/parkingSlice"));
require("@testing-library/jest-dom/extend-expect");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
var _history = require("history");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/paymentscreen.feature");
let store;
let screen;
let occupiedSpaceId;
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User pays for occupied parking spot", ({
    given,
    when,
    then,
    and
  }) => {
    const history = (0, _history.createMemoryHistory)();
    store = (0, _toolkit.configureStore)({
      reducer: {
        parkingSpaces: _parkingSlice.default
      }
    });
    const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, null, /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null))));
    const navigate = (0, _reactRouterDom.useNavigate)();
    given("I am on the Payment Screen", () => {
      expect(screen).toBeTruthy();
    });
    and("I see the vehicle registration and hours parked for the occupied parking spot", () => {
      store = (0, _toolkit.configureStore)({
        reducer: {
          parkingSpaces: _parkingSlice.default
        }
      });
      const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null)), {
        wrapper: _reactRouterDom.MemoryRouter
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9QYXltZW50U2NyZWVuIiwiX2plc3RDdWN1bWJlciIsIl9yZWFjdDIiLCJfcGFya2luZ1NsaWNlIiwiX3JlYWN0UmVkdXgiLCJfdG9vbGtpdCIsIl9yZWFjdFJvdXRlckRvbSIsIl9oaXN0b3J5Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJmZWF0dXJlIiwibG9hZEZlYXR1cmUiLCJzdG9yZSIsInNjcmVlbiIsIm9jY3VwaWVkU3BhY2VJZCIsImRlZmluZUZlYXR1cmUiLCJ0ZXN0IiwiZ2l2ZW4iLCJ3aGVuIiwidGhlbiIsImFuZCIsImhpc3RvcnkiLCJjcmVhdGVNZW1vcnlIaXN0b3J5IiwiY29uZmlndXJlU3RvcmUiLCJyZWR1Y2VyIiwicGFya2luZ1NwYWNlcyIsInBhcmtpbmdTbGljZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsIk1lbW9yeVJvdXRlciIsIm5hdmlnYXRlIiwidXNlTmF2aWdhdGUiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5Iiwid3JhcHBlciJdLCJzb3VyY2VzIjpbInBheW1lbnRzY3JlZW4uc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFBhcmtpbmdTcGFjZSBmcm9tIFwiLi4vLi4vUGFya2luZ1NwYWNlXCI7XHJcbmltcG9ydCBQYXltZW50U2NyZWVuIGZyb20gXCIuLi8uLi9QYXltZW50U2NyZWVuXCI7XHJcbmltcG9ydCB7IGRlZmluZUZlYXR1cmUsIGxvYWRGZWF0dXJlIH0gZnJvbSBcImplc3QtY3VjdW1iZXJcIjtcclxuaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3IsIGFjdCB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcbmltcG9ydCBcInRleHQtZW5jb2RpbmdcIjtcclxuaW1wb3J0IHBhcmtpbmdTbGljZSwge1xyXG4gIGluaXRpYWxpemVQYXJraW5nTG90LFxyXG4gIGFkZFRvUGFya2luZ1NwYWNlLFxyXG4gIG9jY3VweVBhcmtpbmdMb3RzLFxyXG59IGZyb20gXCIuLi8uLi9yZWR1eC9yZWR1Y2VyL3BhcmtpbmdTbGljZVwiO1xyXG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQge1xyXG4gIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxyXG4gIFJvdXRlcyxcclxuICBSb3V0ZSxcclxuICBNZW1vcnlSb3V0ZXIsXHJcbiAgdXNlTmF2aWdhdGUsXHJcbiAgQnJvd3NlclJvdXRlcixcclxufSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5IH0gZnJvbSBcImhpc3RvcnlcIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvcGF5bWVudHNjcmVlbi5mZWF0dXJlXCIpO1xyXG5sZXQgc3RvcmU6IGFueTtcclxubGV0IHNjcmVlbjogYW55O1xyXG5sZXQgb2NjdXBpZWRTcGFjZUlkOiBudW1iZXI7XHJcbmRlZmluZUZlYXR1cmUoZmVhdHVyZSwgKHRlc3QpID0+IHtcclxuICB0ZXN0KFwiVXNlciBwYXlzIGZvciBvY2N1cGllZCBwYXJraW5nIHNwb3RcIiwgKHsgZ2l2ZW4sIHdoZW4sIHRoZW4sIGFuZCB9KSA9PiB7XHJcbiAgICBjb25zdCBoaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeSgpO1xyXG4gICAgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgICAgIHJlZHVjZXI6IHtcclxuICAgICAgICBwYXJraW5nU3BhY2VzOiBwYXJraW5nU2xpY2UsXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICAgIGNvbnN0IHNjcmVlbiA9IHJlbmRlcihcclxuICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgICAgPE1lbW9yeVJvdXRlcj5cclxuICAgICAgICAgIDxQYXltZW50U2NyZWVuIC8+XHJcbiAgICAgICAgPC9NZW1vcnlSb3V0ZXI+XHJcbiAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICApO1xyXG4gICAgY29uc3QgbmF2aWdhdGUgPSB1c2VOYXZpZ2F0ZSgpO1xyXG4gICAgZ2l2ZW4oXCJJIGFtIG9uIHRoZSBQYXltZW50IFNjcmVlblwiLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4pLnRvQmVUcnV0aHkoKTtcclxuICAgIH0pO1xyXG4gICAgYW5kKFxyXG4gICAgICBcIkkgc2VlIHRoZSB2ZWhpY2xlIHJlZ2lzdHJhdGlvbiBhbmQgaG91cnMgcGFya2VkIGZvciB0aGUgb2NjdXBpZWQgcGFya2luZyBzcG90XCIsXHJcbiAgICAgICgpID0+IHtcclxuICAgICAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgICAgIHJlZHVjZXI6IHtcclxuICAgICAgICAgICAgcGFya2luZ1NwYWNlczogcGFya2luZ1NsaWNlLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICAgICAgPFBheW1lbnRTY3JlZW4gLz5cclxuICAgICAgICAgIDwvUHJvdmlkZXI+LFxyXG4gICAgICAgICAgeyB3cmFwcGVyOiBNZW1vcnlSb3V0ZXIgfVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsY0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsYUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSCxPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBSSxhQUFBLEdBQUFMLHNCQUFBLENBQUFDLE9BQUE7QUFLQUEsT0FBQTtBQUNBLElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQUNBLElBQUFNLFFBQUEsR0FBQU4sT0FBQTtBQUNBLElBQUFPLGVBQUEsR0FBQVAsT0FBQTtBQVFBLElBQUFRLFFBQUEsR0FBQVIsT0FBQTtBQUE4QyxTQUFBRCx1QkFBQVUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUM5QyxNQUFNRyxPQUFPLEdBQUcsSUFBQUMseUJBQVcsRUFBQywrQ0FBK0MsQ0FBQztBQUM1RSxJQUFJQyxLQUFVO0FBQ2QsSUFBSUMsTUFBVztBQUNmLElBQUlDLGVBQXVCO0FBQzNCLElBQUFDLDJCQUFhLEVBQUNMLE9BQU8sRUFBR00sSUFBSSxJQUFLO0VBQy9CQSxJQUFJLENBQUMscUNBQXFDLEVBQUUsQ0FBQztJQUFFQyxLQUFLO0lBQUVDLElBQUk7SUFBRUMsSUFBSTtJQUFFQztFQUFJLENBQUMsS0FBSztJQUMxRSxNQUFNQyxPQUFPLEdBQUcsSUFBQUMsNEJBQW1CLEdBQUU7SUFDckNWLEtBQUssR0FBRyxJQUFBVyx1QkFBYyxFQUFDO01BQ3JCQyxPQUFPLEVBQUU7UUFDUEMsYUFBYSxFQUFFQztNQUNqQjtJQUNGLENBQUMsQ0FBQztJQUNGLE1BQU1iLE1BQU0sR0FBRyxJQUFBYyxjQUFNLGdCQUNuQi9CLE1BQUEsQ0FBQWEsT0FBQSxDQUFBbUIsYUFBQSxDQUFDekIsV0FBQSxDQUFBMEIsUUFBUTtNQUFDakIsS0FBSyxFQUFFQTtJQUFNLGdCQUNyQmhCLE1BQUEsQ0FBQWEsT0FBQSxDQUFBbUIsYUFBQSxDQUFDdkIsZUFBQSxDQUFBeUIsWUFBWSxxQkFDWGxDLE1BQUEsQ0FBQWEsT0FBQSxDQUFBbUIsYUFBQSxDQUFDN0IsY0FBQSxDQUFBVSxPQUFhLE9BQUcsQ0FDSixDQUNOLENBQ1o7SUFDRCxNQUFNc0IsUUFBUSxHQUFHLElBQUFDLDJCQUFXLEdBQUU7SUFDOUJmLEtBQUssQ0FBQyw0QkFBNEIsRUFBRSxNQUFNO01BQ3hDZ0IsTUFBTSxDQUFDcEIsTUFBTSxDQUFDLENBQUNxQixVQUFVLEVBQUU7SUFDN0IsQ0FBQyxDQUFDO0lBQ0ZkLEdBQUcsQ0FDRCwrRUFBK0UsRUFDL0UsTUFBTTtNQUNKUixLQUFLLEdBQUcsSUFBQVcsdUJBQWMsRUFBQztRQUNyQkMsT0FBTyxFQUFFO1VBQ1BDLGFBQWEsRUFBRUM7UUFDakI7TUFDRixDQUFDLENBQUM7TUFDRixNQUFNYixNQUFNLEdBQUcsSUFBQWMsY0FBTSxnQkFDbkIvQixNQUFBLENBQUFhLE9BQUEsQ0FBQW1CLGFBQUEsQ0FBQ3pCLFdBQUEsQ0FBQTBCLFFBQVE7UUFBQ2pCLEtBQUssRUFBRUE7TUFBTSxnQkFDckJoQixNQUFBLENBQUFhLE9BQUEsQ0FBQW1CLGFBQUEsQ0FBQzdCLGNBQUEsQ0FBQVUsT0FBYSxPQUFHLENBQ1IsRUFDWDtRQUFFMEIsT0FBTyxFQUFFTDtNQUFhLENBQUMsQ0FDMUI7SUFDSCxDQUFDLENBQ0Y7RUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMifQ==