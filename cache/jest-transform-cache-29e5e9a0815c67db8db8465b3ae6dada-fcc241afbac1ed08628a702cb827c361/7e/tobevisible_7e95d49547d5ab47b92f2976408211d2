6de6709546879d987b06cc33303acb6e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toBeVisible = toBeVisible;
var _utils = require("./utils");
function isStyleVisible(element) {
  const {
    getComputedStyle
  } = element.ownerDocument.defaultView;
  const {
    display,
    visibility,
    opacity
  } = getComputedStyle(element);
  return display !== 'none' && visibility !== 'hidden' && visibility !== 'collapse' && opacity !== '0' && opacity !== 0;
}
function isAttributeVisible(element, previousElement) {
  let detailsVisibility;
  if (previousElement) {
    detailsVisibility = element.nodeName === 'DETAILS' && previousElement.nodeName !== 'SUMMARY' ? element.hasAttribute('open') : true;
  } else {
    detailsVisibility = element.nodeName === 'DETAILS' ? element.hasAttribute('open') : true;
  }
  return !element.hasAttribute('hidden') && detailsVisibility;
}
function isElementVisible(element, previousElement) {
  return isStyleVisible(element) && isAttributeVisible(element, previousElement) && (!element.parentElement || isElementVisible(element.parentElement, element));
}
function toBeVisible(element) {
  (0, _utils.checkHtmlElement)(element, toBeVisible, this);
  const isInDocument = element.ownerDocument === element.getRootNode({
    composed: true
  });
  const isVisible = isInDocument && isElementVisible(element);
  return {
    pass: isVisible,
    message: () => {
      const is = isVisible ? 'is' : 'is not';
      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeVisible`, 'element', ''), '', `Received element ${is} visible${isInDocument ? '' : ' (element is not in the document)'}:`, `  ${this.utils.printReceived(element.cloneNode(false))}`].join('\n');
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRvQmVWaXNpYmxlIiwiX3V0aWxzIiwicmVxdWlyZSIsImlzU3R5bGVWaXNpYmxlIiwiZWxlbWVudCIsImdldENvbXB1dGVkU3R5bGUiLCJvd25lckRvY3VtZW50IiwiZGVmYXVsdFZpZXciLCJkaXNwbGF5IiwidmlzaWJpbGl0eSIsIm9wYWNpdHkiLCJpc0F0dHJpYnV0ZVZpc2libGUiLCJwcmV2aW91c0VsZW1lbnQiLCJkZXRhaWxzVmlzaWJpbGl0eSIsIm5vZGVOYW1lIiwiaGFzQXR0cmlidXRlIiwiaXNFbGVtZW50VmlzaWJsZSIsInBhcmVudEVsZW1lbnQiLCJjaGVja0h0bWxFbGVtZW50IiwiaXNJbkRvY3VtZW50IiwiZ2V0Um9vdE5vZGUiLCJjb21wb3NlZCIsImlzVmlzaWJsZSIsInBhc3MiLCJtZXNzYWdlIiwiaXMiLCJ1dGlscyIsIm1hdGNoZXJIaW50IiwiaXNOb3QiLCJwcmludFJlY2VpdmVkIiwiY2xvbmVOb2RlIiwiam9pbiJdLCJzb3VyY2VzIjpbInRvLWJlLXZpc2libGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnRvQmVWaXNpYmxlID0gdG9CZVZpc2libGU7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcblxuZnVuY3Rpb24gaXNTdHlsZVZpc2libGUoZWxlbWVudCkge1xuICBjb25zdCB7XG4gICAgZ2V0Q29tcHV0ZWRTdHlsZVxuICB9ID0gZWxlbWVudC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuICBjb25zdCB7XG4gICAgZGlzcGxheSxcbiAgICB2aXNpYmlsaXR5LFxuICAgIG9wYWNpdHlcbiAgfSA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG4gIHJldHVybiBkaXNwbGF5ICE9PSAnbm9uZScgJiYgdmlzaWJpbGl0eSAhPT0gJ2hpZGRlbicgJiYgdmlzaWJpbGl0eSAhPT0gJ2NvbGxhcHNlJyAmJiBvcGFjaXR5ICE9PSAnMCcgJiYgb3BhY2l0eSAhPT0gMDtcbn1cblxuZnVuY3Rpb24gaXNBdHRyaWJ1dGVWaXNpYmxlKGVsZW1lbnQsIHByZXZpb3VzRWxlbWVudCkge1xuICBsZXQgZGV0YWlsc1Zpc2liaWxpdHk7XG5cbiAgaWYgKHByZXZpb3VzRWxlbWVudCkge1xuICAgIGRldGFpbHNWaXNpYmlsaXR5ID0gZWxlbWVudC5ub2RlTmFtZSA9PT0gJ0RFVEFJTFMnICYmIHByZXZpb3VzRWxlbWVudC5ub2RlTmFtZSAhPT0gJ1NVTU1BUlknID8gZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ29wZW4nKSA6IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgZGV0YWlsc1Zpc2liaWxpdHkgPSBlbGVtZW50Lm5vZGVOYW1lID09PSAnREVUQUlMUycgPyBlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnb3BlbicpIDogdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiAhZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ2hpZGRlbicpICYmIGRldGFpbHNWaXNpYmlsaXR5O1xufVxuXG5mdW5jdGlvbiBpc0VsZW1lbnRWaXNpYmxlKGVsZW1lbnQsIHByZXZpb3VzRWxlbWVudCkge1xuICByZXR1cm4gaXNTdHlsZVZpc2libGUoZWxlbWVudCkgJiYgaXNBdHRyaWJ1dGVWaXNpYmxlKGVsZW1lbnQsIHByZXZpb3VzRWxlbWVudCkgJiYgKCFlbGVtZW50LnBhcmVudEVsZW1lbnQgfHwgaXNFbGVtZW50VmlzaWJsZShlbGVtZW50LnBhcmVudEVsZW1lbnQsIGVsZW1lbnQpKTtcbn1cblxuZnVuY3Rpb24gdG9CZVZpc2libGUoZWxlbWVudCkge1xuICAoMCwgX3V0aWxzLmNoZWNrSHRtbEVsZW1lbnQpKGVsZW1lbnQsIHRvQmVWaXNpYmxlLCB0aGlzKTtcbiAgY29uc3QgaXNJbkRvY3VtZW50ID0gZWxlbWVudC5vd25lckRvY3VtZW50ID09PSBlbGVtZW50LmdldFJvb3ROb2RlKHtcbiAgICBjb21wb3NlZDogdHJ1ZVxuICB9KTtcbiAgY29uc3QgaXNWaXNpYmxlID0gaXNJbkRvY3VtZW50ICYmIGlzRWxlbWVudFZpc2libGUoZWxlbWVudCk7XG4gIHJldHVybiB7XG4gICAgcGFzczogaXNWaXNpYmxlLFxuICAgIG1lc3NhZ2U6ICgpID0+IHtcbiAgICAgIGNvbnN0IGlzID0gaXNWaXNpYmxlID8gJ2lzJyA6ICdpcyBub3QnO1xuICAgICAgcmV0dXJuIFt0aGlzLnV0aWxzLm1hdGNoZXJIaW50KGAke3RoaXMuaXNOb3QgPyAnLm5vdCcgOiAnJ30udG9CZVZpc2libGVgLCAnZWxlbWVudCcsICcnKSwgJycsIGBSZWNlaXZlZCBlbGVtZW50ICR7aXN9IHZpc2libGUke2lzSW5Eb2N1bWVudCA/ICcnIDogJyAoZWxlbWVudCBpcyBub3QgaW4gdGhlIGRvY3VtZW50KSd9OmAsIGAgICR7dGhpcy51dGlscy5wcmludFJlY2VpdmVkKGVsZW1lbnQuY2xvbmVOb2RlKGZhbHNlKSl9YF0uam9pbignXFxuJyk7XG4gICAgfVxuICB9O1xufSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLENBQUNFLFdBQVcsR0FBR0EsV0FBVztBQUVqQyxJQUFJQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFFL0IsU0FBU0MsY0FBY0EsQ0FBQ0MsT0FBTyxFQUFFO0VBQy9CLE1BQU07SUFDSkM7RUFDRixDQUFDLEdBQUdELE9BQU8sQ0FBQ0UsYUFBYSxDQUFDQyxXQUFXO0VBQ3JDLE1BQU07SUFDSkMsT0FBTztJQUNQQyxVQUFVO0lBQ1ZDO0VBQ0YsQ0FBQyxHQUFHTCxnQkFBZ0IsQ0FBQ0QsT0FBTyxDQUFDO0VBQzdCLE9BQU9JLE9BQU8sS0FBSyxNQUFNLElBQUlDLFVBQVUsS0FBSyxRQUFRLElBQUlBLFVBQVUsS0FBSyxVQUFVLElBQUlDLE9BQU8sS0FBSyxHQUFHLElBQUlBLE9BQU8sS0FBSyxDQUFDO0FBQ3ZIO0FBRUEsU0FBU0Msa0JBQWtCQSxDQUFDUCxPQUFPLEVBQUVRLGVBQWUsRUFBRTtFQUNwRCxJQUFJQyxpQkFBaUI7RUFFckIsSUFBSUQsZUFBZSxFQUFFO0lBQ25CQyxpQkFBaUIsR0FBR1QsT0FBTyxDQUFDVSxRQUFRLEtBQUssU0FBUyxJQUFJRixlQUFlLENBQUNFLFFBQVEsS0FBSyxTQUFTLEdBQUdWLE9BQU8sQ0FBQ1csWUFBWSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUk7RUFDcEksQ0FBQyxNQUFNO0lBQ0xGLGlCQUFpQixHQUFHVCxPQUFPLENBQUNVLFFBQVEsS0FBSyxTQUFTLEdBQUdWLE9BQU8sQ0FBQ1csWUFBWSxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUk7RUFDMUY7RUFFQSxPQUFPLENBQUNYLE9BQU8sQ0FBQ1csWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJRixpQkFBaUI7QUFDN0Q7QUFFQSxTQUFTRyxnQkFBZ0JBLENBQUNaLE9BQU8sRUFBRVEsZUFBZSxFQUFFO0VBQ2xELE9BQU9ULGNBQWMsQ0FBQ0MsT0FBTyxDQUFDLElBQUlPLGtCQUFrQixDQUFDUCxPQUFPLEVBQUVRLGVBQWUsQ0FBQyxLQUFLLENBQUNSLE9BQU8sQ0FBQ2EsYUFBYSxJQUFJRCxnQkFBZ0IsQ0FBQ1osT0FBTyxDQUFDYSxhQUFhLEVBQUViLE9BQU8sQ0FBQyxDQUFDO0FBQ2hLO0FBRUEsU0FBU0osV0FBV0EsQ0FBQ0ksT0FBTyxFQUFFO0VBQzVCLENBQUMsQ0FBQyxFQUFFSCxNQUFNLENBQUNpQixnQkFBZ0IsRUFBRWQsT0FBTyxFQUFFSixXQUFXLEVBQUUsSUFBSSxDQUFDO0VBQ3hELE1BQU1tQixZQUFZLEdBQUdmLE9BQU8sQ0FBQ0UsYUFBYSxLQUFLRixPQUFPLENBQUNnQixXQUFXLENBQUM7SUFDakVDLFFBQVEsRUFBRTtFQUNaLENBQUMsQ0FBQztFQUNGLE1BQU1DLFNBQVMsR0FBR0gsWUFBWSxJQUFJSCxnQkFBZ0IsQ0FBQ1osT0FBTyxDQUFDO0VBQzNELE9BQU87SUFDTG1CLElBQUksRUFBRUQsU0FBUztJQUNmRSxPQUFPLEVBQUVBLENBQUEsS0FBTTtNQUNiLE1BQU1DLEVBQUUsR0FBR0gsU0FBUyxHQUFHLElBQUksR0FBRyxRQUFRO01BQ3RDLE9BQU8sQ0FBQyxJQUFJLENBQUNJLEtBQUssQ0FBQ0MsV0FBVyxDQUFFLEdBQUUsSUFBSSxDQUFDQyxLQUFLLEdBQUcsTUFBTSxHQUFHLEVBQUcsY0FBYSxFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUcsb0JBQW1CSCxFQUFHLFdBQVVOLFlBQVksR0FBRyxFQUFFLEdBQUcsbUNBQW9DLEdBQUUsRUFBRyxLQUFJLElBQUksQ0FBQ08sS0FBSyxDQUFDRyxhQUFhLENBQUN6QixPQUFPLENBQUMwQixTQUFTLENBQUMsS0FBSyxDQUFDLENBQUUsRUFBQyxDQUFDLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbFE7RUFDRixDQUFDO0FBQ0gifQ==