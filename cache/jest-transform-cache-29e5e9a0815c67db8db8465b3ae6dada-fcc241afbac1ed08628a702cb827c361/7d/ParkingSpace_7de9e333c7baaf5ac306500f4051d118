52511c0c8dcc1d7f03b49a0dde594786
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _reactRouterDom = require("react-router-dom");
var _parkingSlice = require("./redux/reducer/parkingSlice");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const ParkingSpace = () => {
  const dispatch = (0, _reactRedux.useDispatch)();
  const navigation = (0, _reactRouterDom.useNavigate)();
  const [displayForm, setDisplayForm] = (0, _react.useState)(false);
  const [registration, setReg] = (0, _react.useState)("");
  const [parkingTime, setTime] = (0, _react.useState)("");
  const [selectedSpace, setSelected] = (0, _react.useState)(0);
  const [activatePayment, setActivation] = (0, _react.useState)(false);
  const numspaces = (0, _reactRedux.useSelector)(state => state.parkingSpaces.numSpaces);
  const spaces = (0, _reactRedux.useSelector)(state => state.parkingSpaces.spaces);
  const [displaySpaces, setDisplay] = (0, _react.useState)(() => {
    const renderSpaces = [];
    for (let i = 1; i <= numspaces; i++) {
      renderSpaces.push(i);
    }
    return renderSpaces;
  });
  (0, _react.useEffect)(() => {
    const renderSpaces = [];
    for (let i = 1; i <= numspaces; i++) {
      renderSpaces.push(i);
    }
    setDisplay(renderSpaces);
  }, [numspaces]);
  const handleIncrement = () => {
    dispatch((0, _parkingSlice.addToParkingSpace)());
  };
  const handleDecrement = () => {
    dispatch((0, _parkingSlice.removeParkingSpace)());
  };
  const handlePaymentScreen = space => {
    navigation("/payment", {
      state: {
        spaceDetails: spaces[space],
        space
      }
    });
  };
  const handleSpaceClick = space => {
    if (spaces[space]) {
      setActivation(true);
    }
    setSelected(space);
  };
  const handleRegistration = event => {
    setReg(event.target.value);
  };
  const handleTimeChange = event => {
    setTime(event.target.value);
  };
  const handleSubmit = event => {
    event.preventDefault();
    dispatch((0, _parkingSlice.occupyParkingLots)({
      spaceNum: selectedSpace,
      registration: registration,
      parkingTime: parkingTime
    }));
    setSelected(0);
    setReg("");
    setTime("");
  };
  const handleRegisterClick = () => {
    setDisplayForm(true);
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "container"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "buttonsContainer"
  }, /*#__PURE__*/_react.default.createElement("button", {
    style: {
      marginRight: 10,
      marginLeft: 10
    },
    onClick: handleIncrement,
    "data-testid": "addSpace"
  }, "Add Space"), /*#__PURE__*/_react.default.createElement("button", {
    style: {
      marginRight: 10,
      marginLeft: 10
    },
    onClick: handleDecrement,
    disabled: numspaces <= 1,
    "data-testid": "decreaseSpace"
  }, "Remove Space"), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Link, {
    to: "/"
  }, /*#__PURE__*/_react.default.createElement("button", {
    style: {
      marginRight: 10,
      marginLeft: 10
    }
  }, "Input Again?")), /*#__PURE__*/_react.default.createElement("button", {
    style: {
      marginRight: 10,
      marginLeft: 10
    },
    onClick: handleRegisterClick,
    disabled: selectedSpace <= 0
  }, selectedSpace > 0 ? `Register Lot ${selectedSpace}` : "Register Lot"), /*#__PURE__*/_react.default.createElement("button", {
    style: {
      marginRight: 10,
      marginLeft: 10
    },
    onClick: () => handlePaymentScreen(selectedSpace),
    disabled: !spaces[selectedSpace]
  }, !spaces[selectedSpace] ? `Make Payment` : `Make Payment For Lot ${selectedSpace}`)), /*#__PURE__*/_react.default.createElement("div", {
    className: "spacesContainer"
  }, displaySpaces.map(space => /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": "space",
    key: space,
    className: `spaceNumber ${selectedSpace === space ? "selected" : ""}`,
    onClick: () => handleSpaceClick(space)
  }, space, spaces[space] && /*#__PURE__*/_react.default.createElement("div", {
    className: "spaceDetails"
  }, /*#__PURE__*/_react.default.createElement("p", null, "Registration: ", spaces[space].registration), /*#__PURE__*/_react.default.createElement("p", null, "Parking Time: ", spaces[space].parkingTime))))), displayForm && /*#__PURE__*/_react.default.createElement("div", {
    className: "formContainer"
  }, /*#__PURE__*/_react.default.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/_react.default.createElement("label", {
    style: {
      color: "white"
    }
  }, "Registration for lot ", selectedSpace), /*#__PURE__*/_react.default.createElement("input", {
    type: "text",
    className: "form-control",
    onChange: handleRegistration,
    placeholder: "Enter Registration"
  }), /*#__PURE__*/_react.default.createElement("br", null), /*#__PURE__*/_react.default.createElement("label", {
    style: {
      color: "white"
    }
  }, "Parking Time: "), /*#__PURE__*/_react.default.createElement("input", {
    type: "time",
    className: "form-control",
    placeholder: "Enter Time",
    onChange: handleTimeChange
  }), /*#__PURE__*/_react.default.createElement("br", null), /*#__PURE__*/_react.default.createElement("button", {
    type: "submit",
    disabled: registration.length < 1
  }, "Submit"), /*#__PURE__*/_react.default.createElement("button", {
    style: {
      marginTop: 10
    },
    onClick: () => setDisplayForm(false)
  }, "Close"))));
};
var _default = ParkingSpace;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,