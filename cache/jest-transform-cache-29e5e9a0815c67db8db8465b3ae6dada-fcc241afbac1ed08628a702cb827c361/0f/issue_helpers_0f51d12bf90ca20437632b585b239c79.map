{"version":3,"names":["indent_string_1","__importDefault","require","test_case_attempt_formatter_1","isFailure","result","willBeRetried","status","exports","isWarning","isIssue","formatIssue","colorFns","number","snippetBuilder","testCaseAttempt","supportCodeLibrary","printAttachments","prefix","toString","formattedTestCaseAttempt","formatTestCaseAttempt","lines","split","updatedLines","map","line","index","default","length","join","formatUndefinedParameterTypes","undefinedParameterTypes","output","withLatest","forEach","parameterType","name","push","Object","values","formatUndefinedParameterType","expression"],"sources":["../../../src/formatter/helpers/issue_helpers.ts"],"sourcesContent":["import indentString from 'indent-string'\nimport { formatTestCaseAttempt } from './test_case_attempt_formatter'\nimport * as messages from '@cucumber/messages'\nimport { IColorFns } from '../get_color_fns'\nimport StepDefinitionSnippetBuilder from '../step_definition_snippet_builder'\nimport { ISupportCodeLibrary } from '../../support_code_library_builder/types'\nimport { ITestCaseAttempt } from './event_data_collector'\n\nexport function isFailure(\n  result: messages.TestStepResult,\n  willBeRetried: boolean = false\n): boolean {\n  return (\n    result.status === 'AMBIGUOUS' ||\n    result.status === 'UNDEFINED' ||\n    (result.status === 'FAILED' && !willBeRetried)\n  )\n}\n\nexport function isWarning(\n  result: messages.TestStepResult,\n  willBeRetried: boolean = false\n): boolean {\n  return (\n    result.status === 'PENDING' || (result.status === 'FAILED' && willBeRetried)\n  )\n}\n\nexport function isIssue(result: messages.TestStepResult): boolean {\n  return isFailure(result) || isWarning(result)\n}\n\nexport interface IFormatIssueRequest {\n  colorFns: IColorFns\n  number: number\n  snippetBuilder: StepDefinitionSnippetBuilder\n  testCaseAttempt: ITestCaseAttempt\n  supportCodeLibrary: ISupportCodeLibrary\n  printAttachments?: boolean\n}\n\nexport function formatIssue({\n  colorFns,\n  number,\n  snippetBuilder,\n  testCaseAttempt,\n  supportCodeLibrary,\n  printAttachments = true,\n}: IFormatIssueRequest): string {\n  const prefix = `${number.toString()}) `\n  const formattedTestCaseAttempt = formatTestCaseAttempt({\n    colorFns,\n    snippetBuilder,\n    testCaseAttempt,\n    supportCodeLibrary,\n    printAttachments,\n  })\n  const lines = formattedTestCaseAttempt.split('\\n')\n  const updatedLines = lines.map((line, index) => {\n    if (index === 0) {\n      return `${prefix}${line}`\n    }\n    return indentString(line, prefix.length)\n  })\n  return updatedLines.join('\\n')\n}\n\nexport function formatUndefinedParameterTypes(\n  undefinedParameterTypes: messages.UndefinedParameterType[]\n): string {\n  const output = [`Undefined parameter types:\\n\\n`]\n  const withLatest: Record<string, messages.UndefinedParameterType> = {}\n  undefinedParameterTypes.forEach((parameterType) => {\n    withLatest[parameterType.name] = parameterType\n  })\n  output.push(\n    Object.values(withLatest)\n      .map(\n        (parameterType) => `- ${formatUndefinedParameterType(parameterType)}`\n      )\n      .join('\\n')\n  )\n  output.push('\\n\\n')\n  return output.join('')\n}\n\nexport function formatUndefinedParameterType(\n  parameterType: messages.UndefinedParameterType\n): string {\n  return `\"${parameterType.name}\" e.g. \\`${parameterType.expression}\\``\n}\n"],"mappings":";;;;;;;;;;;AAAA,MAAAA,eAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,6BAAA,GAAAD,OAAA;AAOA,SAAgBE,SAASA,CACvBC,MAA+B,EAC/BC,aAAA,GAAyB,KAAK;EAE9B,OACED,MAAM,CAACE,MAAM,KAAK,WAAW,IAC7BF,MAAM,CAACE,MAAM,KAAK,WAAW,IAC5BF,MAAM,CAACE,MAAM,KAAK,QAAQ,IAAI,CAACD,aAAc;AAElD;AATAE,OAAA,CAAAJ,SAAA,GAAAA,SAAA;AAWA,SAAgBK,SAASA,CACvBJ,MAA+B,EAC/BC,aAAA,GAAyB,KAAK;EAE9B,OACED,MAAM,CAACE,MAAM,KAAK,SAAS,IAAKF,MAAM,CAACE,MAAM,KAAK,QAAQ,IAAID,aAAc;AAEhF;AAPAE,OAAA,CAAAC,SAAA,GAAAA,SAAA;AASA,SAAgBC,OAAOA,CAACL,MAA+B;EACrD,OAAOD,SAAS,CAACC,MAAM,CAAC,IAAII,SAAS,CAACJ,MAAM,CAAC;AAC/C;AAFAG,OAAA,CAAAE,OAAA,GAAAA,OAAA;AAaA,SAAgBC,WAAWA,CAAC;EAC1BC,QAAQ;EACRC,MAAM;EACNC,cAAc;EACdC,eAAe;EACfC,kBAAkB;EAClBC,gBAAgB,GAAG;AAAI,CACH;EACpB,MAAMC,MAAM,GAAG,GAAGL,MAAM,CAACM,QAAQ,EAAE,IAAI;EACvC,MAAMC,wBAAwB,GAAG,IAAAjB,6BAAA,CAAAkB,qBAAqB,EAAC;IACrDT,QAAQ;IACRE,cAAc;IACdC,eAAe;IACfC,kBAAkB;IAClBC;GACD,CAAC;EACF,MAAMK,KAAK,GAAGF,wBAAwB,CAACG,KAAK,CAAC,IAAI,CAAC;EAClD,MAAMC,YAAY,GAAGF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAI;IAC7C,IAAIA,KAAK,KAAK,CAAC,EAAE;MACf,OAAO,GAAGT,MAAM,GAAGQ,IAAI,EAAE;;IAE3B,OAAO,IAAA1B,eAAA,CAAA4B,OAAY,EAACF,IAAI,EAAER,MAAM,CAACW,MAAM,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOL,YAAY,CAACM,IAAI,CAAC,IAAI,CAAC;AAChC;AAxBAtB,OAAA,CAAAG,WAAA,GAAAA,WAAA;AA0BA,SAAgBoB,6BAA6BA,CAC3CC,uBAA0D;EAE1D,MAAMC,MAAM,GAAG,CAAC,gCAAgC,CAAC;EACjD,MAAMC,UAAU,GAAoD,EAAE;EACtEF,uBAAuB,CAACG,OAAO,CAAEC,aAAa,IAAI;IAChDF,UAAU,CAACE,aAAa,CAACC,IAAI,CAAC,GAAGD,aAAa;EAChD,CAAC,CAAC;EACFH,MAAM,CAACK,IAAI,CACTC,MAAM,CAACC,MAAM,CAACN,UAAU,CAAC,CACtBT,GAAG,CACDW,aAAa,IAAK,KAAKK,4BAA4B,CAACL,aAAa,CAAC,EAAE,CACtE,CACAN,IAAI,CAAC,IAAI,CAAC,CACd;EACDG,MAAM,CAACK,IAAI,CAAC,MAAM,CAAC;EACnB,OAAOL,MAAM,CAACH,IAAI,CAAC,EAAE,CAAC;AACxB;AAjBAtB,OAAA,CAAAuB,6BAAA,GAAAA,6BAAA;AAmBA,SAAgBU,4BAA4BA,CAC1CL,aAA8C;EAE9C,OAAO,IAAIA,aAAa,CAACC,IAAI,YAAYD,aAAa,CAACM,UAAU,IAAI;AACvE;AAJAlC,OAAA,CAAAiC,4BAAA,GAAAA,4BAAA"}