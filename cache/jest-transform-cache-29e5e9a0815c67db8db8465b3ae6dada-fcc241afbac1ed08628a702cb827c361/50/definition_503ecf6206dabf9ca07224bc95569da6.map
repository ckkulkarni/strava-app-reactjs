{"version":3,"names":["Definition","constructor","code","id","line","options","unwrappedCode","uri","buildInvalidCodeLengthMessage","syncOrPromiseLength","callbackLength","length","toString","baseGetInvalidCodeLengthMessage","parameters","exports","default"],"sources":["../../src/models/definition.ts"],"sourcesContent":["import * as messages from '@cucumber/messages'\nimport { ITestCaseHookParameter } from '../support_code_library_builder/types'\nimport { Expression } from '@cucumber/cucumber-expressions'\nimport { GherkinStepKeyword } from './gherkin_step_keyword'\n\nexport interface IGetInvocationDataRequest {\n  hookParameter: ITestCaseHookParameter\n  step: messages.PickleStep\n  world: any\n}\n\nexport interface IGetInvocationDataResponse {\n  getInvalidCodeLengthMessage: () => string\n  parameters: any[]\n  validCodeLengths: number[]\n}\n\nexport interface IDefinitionOptions {\n  timeout?: number\n  wrapperOptions?: any\n}\n\nexport interface IHookDefinitionOptions extends IDefinitionOptions {\n  name?: string\n  tags?: string\n}\n\nexport interface IDefinitionParameters<T extends IDefinitionOptions> {\n  code: Function\n  id: string\n  line: number\n  options: T\n  unwrappedCode?: Function\n  uri: string\n}\n\nexport interface IStepDefinitionParameters\n  extends IDefinitionParameters<IDefinitionOptions> {\n  keyword: GherkinStepKeyword\n  pattern: string | RegExp\n  expression: Expression\n}\n\nexport interface IDefinition {\n  readonly code: Function\n  readonly id: string\n  readonly line: number\n  readonly options: IDefinitionOptions\n  readonly unwrappedCode: Function\n  readonly uri: string\n\n  getInvocationParameters: (\n    options: IGetInvocationDataRequest\n  ) => Promise<IGetInvocationDataResponse>\n}\n\nexport default abstract class Definition {\n  public readonly code: Function\n  public readonly id: string\n  public readonly line: number\n  public readonly options: IDefinitionOptions\n  public readonly unwrappedCode: Function\n  public readonly uri: string\n\n  constructor({\n    code,\n    id,\n    line,\n    options,\n    unwrappedCode,\n    uri,\n  }: IDefinitionParameters<IDefinitionOptions>) {\n    this.code = code\n    this.id = id\n    this.line = line\n    this.options = options\n    this.unwrappedCode = unwrappedCode\n    this.uri = uri\n  }\n\n  buildInvalidCodeLengthMessage(\n    syncOrPromiseLength: number | string,\n    callbackLength: number | string\n  ): string {\n    return (\n      `function has ${this.code.length.toString()} arguments` +\n      `, should have ${syncOrPromiseLength.toString()} (if synchronous or returning a promise)` +\n      ` or ${callbackLength.toString()} (if accepting a callback)`\n    )\n  }\n\n  baseGetInvalidCodeLengthMessage(parameters: any[]): string {\n    return this.buildInvalidCodeLengthMessage(\n      parameters.length,\n      parameters.length + 1\n    )\n  }\n}\n"],"mappings":";;;;;AAwDA,MAA8BA,UAAU;EAQtCC,YAAY;IACVC,IAAI;IACJC,EAAE;IACFC,IAAI;IACJC,OAAO;IACPC,aAAa;IACbC;EAAG,CACuC;IAC1C,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;EAEAC,6BAA6BA,CAC3BC,mBAAoC,EACpCC,cAA+B;IAE/B,OACE,gBAAgB,IAAI,CAACR,IAAI,CAACS,MAAM,CAACC,QAAQ,EAAE,YAAY,GACvD,iBAAiBH,mBAAmB,CAACG,QAAQ,EAAE,0CAA0C,GACzF,OAAOF,cAAc,CAACE,QAAQ,EAAE,4BAA4B;EAEhE;EAEAC,+BAA+BA,CAACC,UAAiB;IAC/C,OAAO,IAAI,CAACN,6BAA6B,CACvCM,UAAU,CAACH,MAAM,EACjBG,UAAU,CAACH,MAAM,GAAG,CAAC,CACtB;EACH;;AAxCFI,OAAA,CAAAC,OAAA,GAAAhB,UAAA"}