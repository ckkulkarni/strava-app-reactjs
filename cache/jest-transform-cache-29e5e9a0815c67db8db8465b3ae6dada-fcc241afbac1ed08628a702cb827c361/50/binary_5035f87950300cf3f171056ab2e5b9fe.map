{"version":3,"names":["Scalar","require","stringifyString","binary","identify","value","Uint8Array","default","tag","resolve","src","onError","Buffer","from","atob","str","replace","buffer","length","i","charCodeAt","stringify","comment","type","ctx","onComment","onChompKeep","buf","toString","btoa","s","String","fromCharCode","Error","BLOCK_LITERAL","QUOTE_DOUBLE","lineWidth","Math","max","options","indent","minContentWidth","n","ceil","lines","Array","o","substr","join","exports"],"sources":["binary.js"],"sourcesContent":["'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\nvar stringifyString = require('../../stringify/stringifyString.js');\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString.stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexports.binary = binary;\n"],"mappings":"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"}