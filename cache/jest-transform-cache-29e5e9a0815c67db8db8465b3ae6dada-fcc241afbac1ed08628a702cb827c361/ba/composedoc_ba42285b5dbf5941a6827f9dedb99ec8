f8d3caabddf326593180c7b22ccf0eb6
'use strict';

var Document = require('../doc/Document.js');
var composeNode = require('./compose-node.js');
var resolveEnd = require('./resolve-end.js');
var resolveProps = require('./resolve-props.js');
function composeDoc(options, directives, {
  offset,
  start,
  value,
  end
}, onError) {
  const opts = Object.assign({
    _directives: directives
  }, options);
  const doc = new Document.Document(undefined, opts);
  const ctx = {
    atRoot: true,
    directives: doc.directives,
    options: doc.options,
    schema: doc.schema
  };
  const props = resolveProps.resolveProps(start, {
    indicator: 'doc-start',
    next: value ?? end?.[0],
    offset,
    onError,
    startOnNewline: true
  });
  if (props.found) {
    doc.directives.docStart = true;
    if (value && (value.type === 'block-map' || value.type === 'block-seq') && !props.hasNewline) onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');
  }
  doc.contents = value ? composeNode.composeNode(ctx, value, props, onError) : composeNode.composeEmptyNode(ctx, props.end, start, null, props, onError);
  const contentEnd = doc.contents.range[2];
  const re = resolveEnd.resolveEnd(end, contentEnd, false, onError);
  if (re.comment) doc.comment = re.comment;
  doc.range = [offset, contentEnd, re.offset];
  return doc;
}
exports.composeDoc = composeDoc;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEb2N1bWVudCIsInJlcXVpcmUiLCJjb21wb3NlTm9kZSIsInJlc29sdmVFbmQiLCJyZXNvbHZlUHJvcHMiLCJjb21wb3NlRG9jIiwib3B0aW9ucyIsImRpcmVjdGl2ZXMiLCJvZmZzZXQiLCJzdGFydCIsInZhbHVlIiwiZW5kIiwib25FcnJvciIsIm9wdHMiLCJPYmplY3QiLCJhc3NpZ24iLCJfZGlyZWN0aXZlcyIsImRvYyIsInVuZGVmaW5lZCIsImN0eCIsImF0Um9vdCIsInNjaGVtYSIsInByb3BzIiwiaW5kaWNhdG9yIiwibmV4dCIsInN0YXJ0T25OZXdsaW5lIiwiZm91bmQiLCJkb2NTdGFydCIsInR5cGUiLCJoYXNOZXdsaW5lIiwiY29udGVudHMiLCJjb21wb3NlRW1wdHlOb2RlIiwiY29udGVudEVuZCIsInJhbmdlIiwicmUiLCJjb21tZW50IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImNvbXBvc2UtZG9jLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIERvY3VtZW50ID0gcmVxdWlyZSgnLi4vZG9jL0RvY3VtZW50LmpzJyk7XG52YXIgY29tcG9zZU5vZGUgPSByZXF1aXJlKCcuL2NvbXBvc2Utbm9kZS5qcycpO1xudmFyIHJlc29sdmVFbmQgPSByZXF1aXJlKCcuL3Jlc29sdmUtZW5kLmpzJyk7XG52YXIgcmVzb2x2ZVByb3BzID0gcmVxdWlyZSgnLi9yZXNvbHZlLXByb3BzLmpzJyk7XG5cbmZ1bmN0aW9uIGNvbXBvc2VEb2Mob3B0aW9ucywgZGlyZWN0aXZlcywgeyBvZmZzZXQsIHN0YXJ0LCB2YWx1ZSwgZW5kIH0sIG9uRXJyb3IpIHtcbiAgICBjb25zdCBvcHRzID0gT2JqZWN0LmFzc2lnbih7IF9kaXJlY3RpdmVzOiBkaXJlY3RpdmVzIH0sIG9wdGlvbnMpO1xuICAgIGNvbnN0IGRvYyA9IG5ldyBEb2N1bWVudC5Eb2N1bWVudCh1bmRlZmluZWQsIG9wdHMpO1xuICAgIGNvbnN0IGN0eCA9IHtcbiAgICAgICAgYXRSb290OiB0cnVlLFxuICAgICAgICBkaXJlY3RpdmVzOiBkb2MuZGlyZWN0aXZlcyxcbiAgICAgICAgb3B0aW9uczogZG9jLm9wdGlvbnMsXG4gICAgICAgIHNjaGVtYTogZG9jLnNjaGVtYVxuICAgIH07XG4gICAgY29uc3QgcHJvcHMgPSByZXNvbHZlUHJvcHMucmVzb2x2ZVByb3BzKHN0YXJ0LCB7XG4gICAgICAgIGluZGljYXRvcjogJ2RvYy1zdGFydCcsXG4gICAgICAgIG5leHQ6IHZhbHVlID8/IGVuZD8uWzBdLFxuICAgICAgICBvZmZzZXQsXG4gICAgICAgIG9uRXJyb3IsXG4gICAgICAgIHN0YXJ0T25OZXdsaW5lOiB0cnVlXG4gICAgfSk7XG4gICAgaWYgKHByb3BzLmZvdW5kKSB7XG4gICAgICAgIGRvYy5kaXJlY3RpdmVzLmRvY1N0YXJ0ID0gdHJ1ZTtcbiAgICAgICAgaWYgKHZhbHVlICYmXG4gICAgICAgICAgICAodmFsdWUudHlwZSA9PT0gJ2Jsb2NrLW1hcCcgfHwgdmFsdWUudHlwZSA9PT0gJ2Jsb2NrLXNlcScpICYmXG4gICAgICAgICAgICAhcHJvcHMuaGFzTmV3bGluZSlcbiAgICAgICAgICAgIG9uRXJyb3IocHJvcHMuZW5kLCAnTUlTU0lOR19DSEFSJywgJ0Jsb2NrIGNvbGxlY3Rpb24gY2Fubm90IHN0YXJ0IG9uIHNhbWUgbGluZSB3aXRoIGRpcmVjdGl2ZXMtZW5kIG1hcmtlcicpO1xuICAgIH1cbiAgICBkb2MuY29udGVudHMgPSB2YWx1ZVxuICAgICAgICA/IGNvbXBvc2VOb2RlLmNvbXBvc2VOb2RlKGN0eCwgdmFsdWUsIHByb3BzLCBvbkVycm9yKVxuICAgICAgICA6IGNvbXBvc2VOb2RlLmNvbXBvc2VFbXB0eU5vZGUoY3R4LCBwcm9wcy5lbmQsIHN0YXJ0LCBudWxsLCBwcm9wcywgb25FcnJvcik7XG4gICAgY29uc3QgY29udGVudEVuZCA9IGRvYy5jb250ZW50cy5yYW5nZVsyXTtcbiAgICBjb25zdCByZSA9IHJlc29sdmVFbmQucmVzb2x2ZUVuZChlbmQsIGNvbnRlbnRFbmQsIGZhbHNlLCBvbkVycm9yKTtcbiAgICBpZiAocmUuY29tbWVudClcbiAgICAgICAgZG9jLmNvbW1lbnQgPSByZS5jb21tZW50O1xuICAgIGRvYy5yYW5nZSA9IFtvZmZzZXQsIGNvbnRlbnRFbmQsIHJlLm9mZnNldF07XG4gICAgcmV0dXJuIGRvYztcbn1cblxuZXhwb3J0cy5jb21wb3NlRG9jID0gY29tcG9zZURvYztcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztBQUM1QyxJQUFJQyxXQUFXLEdBQUdELE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztBQUM5QyxJQUFJRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQztBQUM1QyxJQUFJRyxZQUFZLEdBQUdILE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztBQUVoRCxTQUFTSSxVQUFVQSxDQUFDQyxPQUFPLEVBQUVDLFVBQVUsRUFBRTtFQUFFQyxNQUFNO0VBQUVDLEtBQUs7RUFBRUMsS0FBSztFQUFFQztBQUFJLENBQUMsRUFBRUMsT0FBTyxFQUFFO0VBQzdFLE1BQU1DLElBQUksR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUM7SUFBRUMsV0FBVyxFQUFFVDtFQUFXLENBQUMsRUFBRUQsT0FBTyxDQUFDO0VBQ2hFLE1BQU1XLEdBQUcsR0FBRyxJQUFJakIsUUFBUSxDQUFDQSxRQUFRLENBQUNrQixTQUFTLEVBQUVMLElBQUksQ0FBQztFQUNsRCxNQUFNTSxHQUFHLEdBQUc7SUFDUkMsTUFBTSxFQUFFLElBQUk7SUFDWmIsVUFBVSxFQUFFVSxHQUFHLENBQUNWLFVBQVU7SUFDMUJELE9BQU8sRUFBRVcsR0FBRyxDQUFDWCxPQUFPO0lBQ3BCZSxNQUFNLEVBQUVKLEdBQUcsQ0FBQ0k7RUFDaEIsQ0FBQztFQUNELE1BQU1DLEtBQUssR0FBR2xCLFlBQVksQ0FBQ0EsWUFBWSxDQUFDSyxLQUFLLEVBQUU7SUFDM0NjLFNBQVMsRUFBRSxXQUFXO0lBQ3RCQyxJQUFJLEVBQUVkLEtBQUssSUFBSUMsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUN2QkgsTUFBTTtJQUNOSSxPQUFPO0lBQ1BhLGNBQWMsRUFBRTtFQUNwQixDQUFDLENBQUM7RUFDRixJQUFJSCxLQUFLLENBQUNJLEtBQUssRUFBRTtJQUNiVCxHQUFHLENBQUNWLFVBQVUsQ0FBQ29CLFFBQVEsR0FBRyxJQUFJO0lBQzlCLElBQUlqQixLQUFLLEtBQ0pBLEtBQUssQ0FBQ2tCLElBQUksS0FBSyxXQUFXLElBQUlsQixLQUFLLENBQUNrQixJQUFJLEtBQUssV0FBVyxDQUFDLElBQzFELENBQUNOLEtBQUssQ0FBQ08sVUFBVSxFQUNqQmpCLE9BQU8sQ0FBQ1UsS0FBSyxDQUFDWCxHQUFHLEVBQUUsY0FBYyxFQUFFLHVFQUF1RSxDQUFDO0VBQ25IO0VBQ0FNLEdBQUcsQ0FBQ2EsUUFBUSxHQUFHcEIsS0FBSyxHQUNkUixXQUFXLENBQUNBLFdBQVcsQ0FBQ2lCLEdBQUcsRUFBRVQsS0FBSyxFQUFFWSxLQUFLLEVBQUVWLE9BQU8sQ0FBQyxHQUNuRFYsV0FBVyxDQUFDNkIsZ0JBQWdCLENBQUNaLEdBQUcsRUFBRUcsS0FBSyxDQUFDWCxHQUFHLEVBQUVGLEtBQUssRUFBRSxJQUFJLEVBQUVhLEtBQUssRUFBRVYsT0FBTyxDQUFDO0VBQy9FLE1BQU1vQixVQUFVLEdBQUdmLEdBQUcsQ0FBQ2EsUUFBUSxDQUFDRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0VBQ3hDLE1BQU1DLEVBQUUsR0FBRy9CLFVBQVUsQ0FBQ0EsVUFBVSxDQUFDUSxHQUFHLEVBQUVxQixVQUFVLEVBQUUsS0FBSyxFQUFFcEIsT0FBTyxDQUFDO0VBQ2pFLElBQUlzQixFQUFFLENBQUNDLE9BQU8sRUFDVmxCLEdBQUcsQ0FBQ2tCLE9BQU8sR0FBR0QsRUFBRSxDQUFDQyxPQUFPO0VBQzVCbEIsR0FBRyxDQUFDZ0IsS0FBSyxHQUFHLENBQUN6QixNQUFNLEVBQUV3QixVQUFVLEVBQUVFLEVBQUUsQ0FBQzFCLE1BQU0sQ0FBQztFQUMzQyxPQUFPUyxHQUFHO0FBQ2Q7QUFFQW1CLE9BQU8sQ0FBQy9CLFVBQVUsR0FBR0EsVUFBVSJ9