280c4cf1bb7e986e63eaa89e189a5e6a
"use strict";

var baseIsEqual = require('./_baseIsEqual'),
  get = require('./get'),
  hasIn = require('./hasIn'),
  isKey = require('./_isKey'),
  isStrictComparable = require('./_isStrictComparable'),
  matchesStrictComparable = require('./_matchesStrictComparable'),
  toKey = require('./_toKey');

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
  COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function (object) {
    var objValue = get(object, path);
    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}
module.exports = baseMatchesProperty;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYXNlSXNFcXVhbCIsInJlcXVpcmUiLCJnZXQiLCJoYXNJbiIsImlzS2V5IiwiaXNTdHJpY3RDb21wYXJhYmxlIiwibWF0Y2hlc1N0cmljdENvbXBhcmFibGUiLCJ0b0tleSIsIkNPTVBBUkVfUEFSVElBTF9GTEFHIiwiQ09NUEFSRV9VTk9SREVSRURfRkxBRyIsImJhc2VNYXRjaGVzUHJvcGVydHkiLCJwYXRoIiwic3JjVmFsdWUiLCJvYmplY3QiLCJvYmpWYWx1ZSIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJfYmFzZU1hdGNoZXNQcm9wZXJ0eS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzRXF1YWwgPSByZXF1aXJlKCcuL19iYXNlSXNFcXVhbCcpLFxuICAgIGdldCA9IHJlcXVpcmUoJy4vZ2V0JyksXG4gICAgaGFzSW4gPSByZXF1aXJlKCcuL2hhc0luJyksXG4gICAgaXNLZXkgPSByZXF1aXJlKCcuL19pc0tleScpLFxuICAgIGlzU3RyaWN0Q29tcGFyYWJsZSA9IHJlcXVpcmUoJy4vX2lzU3RyaWN0Q29tcGFyYWJsZScpLFxuICAgIG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlID0gcmVxdWlyZSgnLi9fbWF0Y2hlc1N0cmljdENvbXBhcmFibGUnKSxcbiAgICB0b0tleSA9IHJlcXVpcmUoJy4vX3RvS2V5Jyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMSxcbiAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXRjaGVzUHJvcGVydHlgIHdoaWNoIGRvZXNuJ3QgY2xvbmUgYHNyY1ZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEBwYXJhbSB7Kn0gc3JjVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZU1hdGNoZXNQcm9wZXJ0eShwYXRoLCBzcmNWYWx1ZSkge1xuICBpZiAoaXNLZXkocGF0aCkgJiYgaXNTdHJpY3RDb21wYXJhYmxlKHNyY1ZhbHVlKSkge1xuICAgIHJldHVybiBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZSh0b0tleShwYXRoKSwgc3JjVmFsdWUpO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIgb2JqVmFsdWUgPSBnZXQob2JqZWN0LCBwYXRoKTtcbiAgICByZXR1cm4gKG9ialZhbHVlID09PSB1bmRlZmluZWQgJiYgb2JqVmFsdWUgPT09IHNyY1ZhbHVlKVxuICAgICAgPyBoYXNJbihvYmplY3QsIHBhdGgpXG4gICAgICA6IGJhc2VJc0VxdWFsKHNyY1ZhbHVlLCBvYmpWYWx1ZSwgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgfCBDT01QQVJFX1VOT1JERVJFRF9GTEFHKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlTWF0Y2hlc1Byb3BlcnR5O1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0VBQ3ZDQyxHQUFHLEdBQUdELE9BQU8sQ0FBQyxPQUFPLENBQUM7RUFDdEJFLEtBQUssR0FBR0YsT0FBTyxDQUFDLFNBQVMsQ0FBQztFQUMxQkcsS0FBSyxHQUFHSCxPQUFPLENBQUMsVUFBVSxDQUFDO0VBQzNCSSxrQkFBa0IsR0FBR0osT0FBTyxDQUFDLHVCQUF1QixDQUFDO0VBQ3JESyx1QkFBdUIsR0FBR0wsT0FBTyxDQUFDLDRCQUE0QixDQUFDO0VBQy9ETSxLQUFLLEdBQUdOLE9BQU8sQ0FBQyxVQUFVLENBQUM7O0FBRS9CO0FBQ0EsSUFBSU8sb0JBQW9CLEdBQUcsQ0FBQztFQUN4QkMsc0JBQXNCLEdBQUcsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNDLG1CQUFtQkEsQ0FBQ0MsSUFBSSxFQUFFQyxRQUFRLEVBQUU7RUFDM0MsSUFBSVIsS0FBSyxDQUFDTyxJQUFJLENBQUMsSUFBSU4sa0JBQWtCLENBQUNPLFFBQVEsQ0FBQyxFQUFFO0lBQy9DLE9BQU9OLHVCQUF1QixDQUFDQyxLQUFLLENBQUNJLElBQUksQ0FBQyxFQUFFQyxRQUFRLENBQUM7RUFDdkQ7RUFDQSxPQUFPLFVBQVNDLE1BQU0sRUFBRTtJQUN0QixJQUFJQyxRQUFRLEdBQUdaLEdBQUcsQ0FBQ1csTUFBTSxFQUFFRixJQUFJLENBQUM7SUFDaEMsT0FBUUcsUUFBUSxLQUFLQyxTQUFTLElBQUlELFFBQVEsS0FBS0YsUUFBUSxHQUNuRFQsS0FBSyxDQUFDVSxNQUFNLEVBQUVGLElBQUksQ0FBQyxHQUNuQlgsV0FBVyxDQUFDWSxRQUFRLEVBQUVFLFFBQVEsRUFBRU4sb0JBQW9CLEdBQUdDLHNCQUFzQixDQUFDO0VBQ3BGLENBQUM7QUFDSDtBQUVBTyxNQUFNLENBQUNDLE9BQU8sR0FBR1AsbUJBQW1CIn0=