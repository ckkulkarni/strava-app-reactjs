{"version":3,"names":["perf_hooks_1","require","messages","__importStar","methods","clearInterval","bind","global","clearTimeout","Date","setInterval","setTimeout","performance","setImmediate","clearImmediate","durationBetweenTimestamps","startedTimestamp","finishedTimestamp","durationMillis","TimeConversion","timestampToMillisecondsSinceEpoch","millisecondsToDuration","exports","wrapPromiseWithTimeout","promise","timeoutInMilliseconds","timeoutMessage","timeoutId","timeoutPromise","Promise","resolve","reject","Error","race","finally","default"],"sources":["../src/time.ts"],"sourcesContent":["import { performance } from 'perf_hooks'\nimport * as messages from '@cucumber/messages'\n\ninterface ProtectedTimingBuiltins {\n  clearImmediate: typeof clearImmediate\n  clearInterval: typeof clearInterval\n  clearTimeout: typeof clearTimeout\n  Date: typeof Date\n  setImmediate: typeof setImmediate\n  setInterval: typeof setInterval\n  setTimeout: typeof setTimeout\n  performance: typeof performance\n}\n\nconst methods: Partial<ProtectedTimingBuiltins> = {\n  clearInterval: clearInterval.bind(global),\n  clearTimeout: clearTimeout.bind(global),\n  Date,\n  setInterval: setInterval.bind(global),\n  setTimeout: setTimeout.bind(global),\n  performance,\n}\n\nif (typeof setImmediate !== 'undefined') {\n  methods.setImmediate = setImmediate.bind(global)\n  methods.clearImmediate = clearImmediate.bind(global)\n}\n\nexport function durationBetweenTimestamps(\n  startedTimestamp: messages.Timestamp,\n  finishedTimestamp: messages.Timestamp\n): messages.Duration {\n  const durationMillis =\n    messages.TimeConversion.timestampToMillisecondsSinceEpoch(\n      finishedTimestamp\n    ) -\n    messages.TimeConversion.timestampToMillisecondsSinceEpoch(startedTimestamp)\n  return messages.TimeConversion.millisecondsToDuration(durationMillis)\n}\n\nexport async function wrapPromiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeoutInMilliseconds: number,\n  timeoutMessage: string = ''\n): Promise<T> {\n  let timeoutId: ReturnType<typeof setTimeout>\n  if (timeoutMessage === '') {\n    timeoutMessage = `Action did not complete within ${timeoutInMilliseconds} milliseconds`\n  }\n  const timeoutPromise = new Promise<T>((resolve, reject) => {\n    timeoutId = methods.setTimeout(() => {\n      reject(new Error(timeoutMessage))\n    }, timeoutInMilliseconds)\n  })\n  return await Promise.race([promise, timeoutPromise]).finally(() =>\n    methods.clearTimeout(timeoutId)\n  )\n}\n\nexport default methods\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,YAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAC,YAAA,CAAAF,OAAA;AAaA,MAAMG,OAAO,GAAqC;EAChDC,aAAa,EAAEA,aAAa,CAACC,IAAI,CAACC,MAAM,CAAC;EACzCC,YAAY,EAAEA,YAAY,CAACF,IAAI,CAACC,MAAM,CAAC;EACvCE,IAAI;EACJC,WAAW,EAAEA,WAAW,CAACJ,IAAI,CAACC,MAAM,CAAC;EACrCI,UAAU,EAAEA,UAAU,CAACL,IAAI,CAACC,MAAM,CAAC;EACnCK,WAAW,EAAXZ,YAAA,CAAAY;CACD;AAED,IAAI,OAAOC,YAAY,KAAK,WAAW,EAAE;EACvCT,OAAO,CAACS,YAAY,GAAGA,YAAY,CAACP,IAAI,CAACC,MAAM,CAAC;EAChDH,OAAO,CAACU,cAAc,GAAGA,cAAc,CAACR,IAAI,CAACC,MAAM,CAAC;;AAGtD,SAAgBQ,yBAAyBA,CACvCC,gBAAoC,EACpCC,iBAAqC;EAErC,MAAMC,cAAc,GAClBhB,QAAQ,CAACiB,cAAc,CAACC,iCAAiC,CACvDH,iBAAiB,CAClB,GACDf,QAAQ,CAACiB,cAAc,CAACC,iCAAiC,CAACJ,gBAAgB,CAAC;EAC7E,OAAOd,QAAQ,CAACiB,cAAc,CAACE,sBAAsB,CAACH,cAAc,CAAC;AACvE;AAVAI,OAAA,CAAAP,yBAAA,GAAAA,yBAAA;AAYO,eAAeQ,sBAAsBA,CAC1CC,OAAmB,EACnBC,qBAA6B,EAC7BC,cAAA,GAAyB,EAAE;EAE3B,IAAIC,SAAwC;EAC5C,IAAID,cAAc,KAAK,EAAE,EAAE;IACzBA,cAAc,GAAG,kCAAkCD,qBAAqB,eAAe;;EAEzF,MAAMG,cAAc,GAAG,IAAIC,OAAO,CAAI,CAACC,OAAO,EAAEC,MAAM,KAAI;IACxDJ,SAAS,GAAGvB,OAAO,CAACO,UAAU,CAAC,MAAK;MAClCoB,MAAM,CAAC,IAAIC,KAAK,CAACN,cAAc,CAAC,CAAC;IACnC,CAAC,EAAED,qBAAqB,CAAC;EAC3B,CAAC,CAAC;EACF,OAAO,MAAMI,OAAO,CAACI,IAAI,CAAC,CAACT,OAAO,EAAEI,cAAc,CAAC,CAAC,CAACM,OAAO,CAAC,MAC3D9B,OAAO,CAACI,YAAY,CAACmB,SAAS,CAAC,CAChC;AACH;AAjBAL,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAmBAD,OAAA,CAAAa,OAAA,GAAe/B,OAAO"}