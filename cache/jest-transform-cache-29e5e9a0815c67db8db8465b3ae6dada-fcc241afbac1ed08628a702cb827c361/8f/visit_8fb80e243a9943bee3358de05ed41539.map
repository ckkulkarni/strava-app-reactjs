{"version":3,"names":["Node","require","BREAK","Symbol","SKIP","REMOVE","visit","node","visitor","visitor_","initVisitor","isDocument","cd","visit_","contents","Object","freeze","key","path","ctrl","callVisitor","isNode","isPair","replaceNode","isCollection","concat","i","items","length","ci","splice","ck","cv","value","visitAsync","visitAsync_","Collection","Value","assign","Alias","Map","Scalar","Seq","isMap","isSeq","Pair","isScalar","isAlias","undefined","parent","pt","Error","exports"],"sources":["visit.js"],"sourcesContent":["'use strict';\n\nvar Node = require('./nodes/Node.js');\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (Node.isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (Node.isNode(ctrl) || Node.isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (Node.isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (Node.isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (Node.isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (Node.isNode(ctrl) || Node.isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (Node.isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (Node.isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (Node.isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (Node.isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (Node.isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (Node.isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (Node.isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (Node.isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (Node.isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (Node.isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = Node.isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexports.visit = visit;\nexports.visitAsync = visitAsync;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAErC,MAAMC,KAAK,GAAGC,MAAM,CAAC,aAAa,CAAC;AACnC,MAAMC,IAAI,GAAGD,MAAM,CAAC,eAAe,CAAC;AACpC,MAAME,MAAM,GAAGF,MAAM,CAAC,aAAa,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,KAAKA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC1B,MAAMC,QAAQ,GAAGC,WAAW,CAACF,OAAO,CAAC;EACrC,IAAIR,IAAI,CAACW,UAAU,CAACJ,IAAI,CAAC,EAAE;IACvB,MAAMK,EAAE,GAAGC,MAAM,CAAC,IAAI,EAAEN,IAAI,CAACO,QAAQ,EAAEL,QAAQ,EAAEM,MAAM,CAACC,MAAM,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;IACvE,IAAIK,EAAE,KAAKP,MAAM,EACbE,IAAI,CAACO,QAAQ,GAAG,IAAI;EAC5B,CAAC,MAEGD,MAAM,CAAC,IAAI,EAAEN,IAAI,EAAEE,QAAQ,EAAEM,MAAM,CAACC,MAAM,CAAC,EAAE,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA;AACAV,KAAK,CAACJ,KAAK,GAAGA,KAAK;AACnB;AACAI,KAAK,CAACF,IAAI,GAAGA,IAAI;AACjB;AACAE,KAAK,CAACD,MAAM,GAAGA,MAAM;AACrB,SAASQ,MAAMA,CAACI,GAAG,EAAEV,IAAI,EAAEC,OAAO,EAAEU,IAAI,EAAE;EACtC,MAAMC,IAAI,GAAGC,WAAW,CAACH,GAAG,EAAEV,IAAI,EAAEC,OAAO,EAAEU,IAAI,CAAC;EAClD,IAAIlB,IAAI,CAACqB,MAAM,CAACF,IAAI,CAAC,IAAInB,IAAI,CAACsB,MAAM,CAACH,IAAI,CAAC,EAAE;IACxCI,WAAW,CAACN,GAAG,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAC5B,OAAON,MAAM,CAACI,GAAG,EAAEE,IAAI,EAAEX,OAAO,EAAEU,IAAI,CAAC;EAC3C;EACA,IAAI,OAAOC,IAAI,KAAK,QAAQ,EAAE;IAC1B,IAAInB,IAAI,CAACwB,YAAY,CAACjB,IAAI,CAAC,EAAE;MACzBW,IAAI,GAAGH,MAAM,CAACC,MAAM,CAACE,IAAI,CAACO,MAAM,CAAClB,IAAI,CAAC,CAAC;MACvC,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,IAAI,CAACoB,KAAK,CAACC,MAAM,EAAE,EAAEF,CAAC,EAAE;QACxC,MAAMG,EAAE,GAAGhB,MAAM,CAACa,CAAC,EAAEnB,IAAI,CAACoB,KAAK,CAACD,CAAC,CAAC,EAAElB,OAAO,EAAEU,IAAI,CAAC;QAClD,IAAI,OAAOW,EAAE,KAAK,QAAQ,EACtBH,CAAC,GAAGG,EAAE,GAAG,CAAC,CAAC,KACV,IAAIA,EAAE,KAAK3B,KAAK,EACjB,OAAOA,KAAK,CAAC,KACZ,IAAI2B,EAAE,KAAKxB,MAAM,EAAE;UACpBE,IAAI,CAACoB,KAAK,CAACG,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;UACvBA,CAAC,IAAI,CAAC;QACV;MACJ;IACJ,CAAC,MACI,IAAI1B,IAAI,CAACsB,MAAM,CAACf,IAAI,CAAC,EAAE;MACxBW,IAAI,GAAGH,MAAM,CAACC,MAAM,CAACE,IAAI,CAACO,MAAM,CAAClB,IAAI,CAAC,CAAC;MACvC,MAAMwB,EAAE,GAAGlB,MAAM,CAAC,KAAK,EAAEN,IAAI,CAACU,GAAG,EAAET,OAAO,EAAEU,IAAI,CAAC;MACjD,IAAIa,EAAE,KAAK7B,KAAK,EACZ,OAAOA,KAAK,CAAC,KACZ,IAAI6B,EAAE,KAAK1B,MAAM,EAClBE,IAAI,CAACU,GAAG,GAAG,IAAI;MACnB,MAAMe,EAAE,GAAGnB,MAAM,CAAC,OAAO,EAAEN,IAAI,CAAC0B,KAAK,EAAEzB,OAAO,EAAEU,IAAI,CAAC;MACrD,IAAIc,EAAE,KAAK9B,KAAK,EACZ,OAAOA,KAAK,CAAC,KACZ,IAAI8B,EAAE,KAAK3B,MAAM,EAClBE,IAAI,CAAC0B,KAAK,GAAG,IAAI;IACzB;EACJ;EACA,OAAOd,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAee,UAAUA,CAAC3B,IAAI,EAAEC,OAAO,EAAE;EACrC,MAAMC,QAAQ,GAAGC,WAAW,CAACF,OAAO,CAAC;EACrC,IAAIR,IAAI,CAACW,UAAU,CAACJ,IAAI,CAAC,EAAE;IACvB,MAAMK,EAAE,GAAG,MAAMuB,WAAW,CAAC,IAAI,EAAE5B,IAAI,CAACO,QAAQ,EAAEL,QAAQ,EAAEM,MAAM,CAACC,MAAM,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC;IAClF,IAAIK,EAAE,KAAKP,MAAM,EACbE,IAAI,CAACO,QAAQ,GAAG,IAAI;EAC5B,CAAC,MAEG,MAAMqB,WAAW,CAAC,IAAI,EAAE5B,IAAI,EAAEE,QAAQ,EAAEM,MAAM,CAACC,MAAM,CAAC,EAAE,CAAC,CAAC;AAClE;AACA;AACA;AACA;AACA;AACAkB,UAAU,CAAChC,KAAK,GAAGA,KAAK;AACxB;AACAgC,UAAU,CAAC9B,IAAI,GAAGA,IAAI;AACtB;AACA8B,UAAU,CAAC7B,MAAM,GAAGA,MAAM;AAC1B,eAAe8B,WAAWA,CAAClB,GAAG,EAAEV,IAAI,EAAEC,OAAO,EAAEU,IAAI,EAAE;EACjD,MAAMC,IAAI,GAAG,MAAMC,WAAW,CAACH,GAAG,EAAEV,IAAI,EAAEC,OAAO,EAAEU,IAAI,CAAC;EACxD,IAAIlB,IAAI,CAACqB,MAAM,CAACF,IAAI,CAAC,IAAInB,IAAI,CAACsB,MAAM,CAACH,IAAI,CAAC,EAAE;IACxCI,WAAW,CAACN,GAAG,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAC5B,OAAOgB,WAAW,CAAClB,GAAG,EAAEE,IAAI,EAAEX,OAAO,EAAEU,IAAI,CAAC;EAChD;EACA,IAAI,OAAOC,IAAI,KAAK,QAAQ,EAAE;IAC1B,IAAInB,IAAI,CAACwB,YAAY,CAACjB,IAAI,CAAC,EAAE;MACzBW,IAAI,GAAGH,MAAM,CAACC,MAAM,CAACE,IAAI,CAACO,MAAM,CAAClB,IAAI,CAAC,CAAC;MACvC,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,IAAI,CAACoB,KAAK,CAACC,MAAM,EAAE,EAAEF,CAAC,EAAE;QACxC,MAAMG,EAAE,GAAG,MAAMM,WAAW,CAACT,CAAC,EAAEnB,IAAI,CAACoB,KAAK,CAACD,CAAC,CAAC,EAAElB,OAAO,EAAEU,IAAI,CAAC;QAC7D,IAAI,OAAOW,EAAE,KAAK,QAAQ,EACtBH,CAAC,GAAGG,EAAE,GAAG,CAAC,CAAC,KACV,IAAIA,EAAE,KAAK3B,KAAK,EACjB,OAAOA,KAAK,CAAC,KACZ,IAAI2B,EAAE,KAAKxB,MAAM,EAAE;UACpBE,IAAI,CAACoB,KAAK,CAACG,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;UACvBA,CAAC,IAAI,CAAC;QACV;MACJ;IACJ,CAAC,MACI,IAAI1B,IAAI,CAACsB,MAAM,CAACf,IAAI,CAAC,EAAE;MACxBW,IAAI,GAAGH,MAAM,CAACC,MAAM,CAACE,IAAI,CAACO,MAAM,CAAClB,IAAI,CAAC,CAAC;MACvC,MAAMwB,EAAE,GAAG,MAAMI,WAAW,CAAC,KAAK,EAAE5B,IAAI,CAACU,GAAG,EAAET,OAAO,EAAEU,IAAI,CAAC;MAC5D,IAAIa,EAAE,KAAK7B,KAAK,EACZ,OAAOA,KAAK,CAAC,KACZ,IAAI6B,EAAE,KAAK1B,MAAM,EAClBE,IAAI,CAACU,GAAG,GAAG,IAAI;MACnB,MAAMe,EAAE,GAAG,MAAMG,WAAW,CAAC,OAAO,EAAE5B,IAAI,CAAC0B,KAAK,EAAEzB,OAAO,EAAEU,IAAI,CAAC;MAChE,IAAIc,EAAE,KAAK9B,KAAK,EACZ,OAAOA,KAAK,CAAC,KACZ,IAAI8B,EAAE,KAAK3B,MAAM,EAClBE,IAAI,CAAC0B,KAAK,GAAG,IAAI;IACzB;EACJ;EACA,OAAOd,IAAI;AACf;AACA,SAAST,WAAWA,CAACF,OAAO,EAAE;EAC1B,IAAI,OAAOA,OAAO,KAAK,QAAQ,KAC1BA,OAAO,CAAC4B,UAAU,IAAI5B,OAAO,CAACR,IAAI,IAAIQ,OAAO,CAAC6B,KAAK,CAAC,EAAE;IACvD,OAAOtB,MAAM,CAACuB,MAAM,CAAC;MACjBC,KAAK,EAAE/B,OAAO,CAACR,IAAI;MACnBwC,GAAG,EAAEhC,OAAO,CAACR,IAAI;MACjByC,MAAM,EAAEjC,OAAO,CAACR,IAAI;MACpB0C,GAAG,EAAElC,OAAO,CAACR;IACjB,CAAC,EAAEQ,OAAO,CAAC6B,KAAK,IAAI;MAChBG,GAAG,EAAEhC,OAAO,CAAC6B,KAAK;MAClBI,MAAM,EAAEjC,OAAO,CAAC6B,KAAK;MACrBK,GAAG,EAAElC,OAAO,CAAC6B;IACjB,CAAC,EAAE7B,OAAO,CAAC4B,UAAU,IAAI;MACrBI,GAAG,EAAEhC,OAAO,CAAC4B,UAAU;MACvBM,GAAG,EAAElC,OAAO,CAAC4B;IACjB,CAAC,EAAE5B,OAAO,CAAC;EACf;EACA,OAAOA,OAAO;AAClB;AACA,SAASY,WAAWA,CAACH,GAAG,EAAEV,IAAI,EAAEC,OAAO,EAAEU,IAAI,EAAE;EAC3C,IAAI,OAAOV,OAAO,KAAK,UAAU,EAC7B,OAAOA,OAAO,CAACS,GAAG,EAAEV,IAAI,EAAEW,IAAI,CAAC;EACnC,IAAIlB,IAAI,CAAC2C,KAAK,CAACpC,IAAI,CAAC,EAChB,OAAOC,OAAO,CAACgC,GAAG,GAAGvB,GAAG,EAAEV,IAAI,EAAEW,IAAI,CAAC;EACzC,IAAIlB,IAAI,CAAC4C,KAAK,CAACrC,IAAI,CAAC,EAChB,OAAOC,OAAO,CAACkC,GAAG,GAAGzB,GAAG,EAAEV,IAAI,EAAEW,IAAI,CAAC;EACzC,IAAIlB,IAAI,CAACsB,MAAM,CAACf,IAAI,CAAC,EACjB,OAAOC,OAAO,CAACqC,IAAI,GAAG5B,GAAG,EAAEV,IAAI,EAAEW,IAAI,CAAC;EAC1C,IAAIlB,IAAI,CAAC8C,QAAQ,CAACvC,IAAI,CAAC,EACnB,OAAOC,OAAO,CAACiC,MAAM,GAAGxB,GAAG,EAAEV,IAAI,EAAEW,IAAI,CAAC;EAC5C,IAAIlB,IAAI,CAAC+C,OAAO,CAACxC,IAAI,CAAC,EAClB,OAAOC,OAAO,CAAC+B,KAAK,GAAGtB,GAAG,EAAEV,IAAI,EAAEW,IAAI,CAAC;EAC3C,OAAO8B,SAAS;AACpB;AACA,SAASzB,WAAWA,CAACN,GAAG,EAAEC,IAAI,EAAEX,IAAI,EAAE;EAClC,MAAM0C,MAAM,GAAG/B,IAAI,CAACA,IAAI,CAACU,MAAM,GAAG,CAAC,CAAC;EACpC,IAAI5B,IAAI,CAACwB,YAAY,CAACyB,MAAM,CAAC,EAAE;IAC3BA,MAAM,CAACtB,KAAK,CAACV,GAAG,CAAC,GAAGV,IAAI;EAC5B,CAAC,MACI,IAAIP,IAAI,CAACsB,MAAM,CAAC2B,MAAM,CAAC,EAAE;IAC1B,IAAIhC,GAAG,KAAK,KAAK,EACbgC,MAAM,CAAChC,GAAG,GAAGV,IAAI,CAAC,KAElB0C,MAAM,CAAChB,KAAK,GAAG1B,IAAI;EAC3B,CAAC,MACI,IAAIP,IAAI,CAACW,UAAU,CAACsC,MAAM,CAAC,EAAE;IAC9BA,MAAM,CAACnC,QAAQ,GAAGP,IAAI;EAC1B,CAAC,MACI;IACD,MAAM2C,EAAE,GAAGlD,IAAI,CAAC+C,OAAO,CAACE,MAAM,CAAC,GAAG,OAAO,GAAG,QAAQ;IACpD,MAAM,IAAIE,KAAK,CAAE,4BAA2BD,EAAG,SAAQ,CAAC;EAC5D;AACJ;AAEAE,OAAO,CAAC9C,KAAK,GAAGA,KAAK;AACrB8C,OAAO,CAAClB,UAAU,GAAGA,UAAU"}