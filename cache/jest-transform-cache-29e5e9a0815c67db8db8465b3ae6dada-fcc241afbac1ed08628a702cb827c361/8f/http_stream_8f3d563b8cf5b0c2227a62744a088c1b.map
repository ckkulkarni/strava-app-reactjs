{"version":3,"names":["stream_1","require","tmp_1","__importDefault","fs_1","http_1","https_1","value_checker_1","HttpStream","Transform","constructor","url","method","headers","readableObjectMode","_write","chunk","encoding","callback","tempFile","undefined","default","file","err","name","fd","doesHaveValue","tempFilePath","createWriteStream","write","_final","end","sendHttpRequest","err1","res1","pushResponseBody","emitErrorUnlessHttp2xx","statusCode","location","err2","res2","res","done","body","Buffer","alloc","on","concat","push","toString","emit","Error","httpx","match","additionalHttpHeaders","upload","statSync","size","allHeaders","req","request","pipeline","createReadStream","exports"],"sources":["../../src/publish/http_stream.ts"],"sourcesContent":["import { pipeline, Transform, Writable } from 'stream'\nimport tmp from 'tmp'\nimport fs from 'fs'\nimport http from 'http'\nimport https from 'https'\nimport { doesHaveValue } from '../value_checker'\n\ntype HttpMethod = 'GET' | 'POST' | 'PUT'\n\n/**\n * This Writable writes data to a HTTP/HTTPS URL.\n *\n * It has special handling for https://reports.cucumber.io/\n * which uses an API where the first request is a `GET`,\n * and if the response is 202 with a Location header, issues\n * a PUT request to that URL.\n *\n * 3xx redirects are not currently followed.\n */\nexport default class HttpStream extends Transform {\n  private tempFilePath: string\n  private tempFile: Writable\n\n  constructor(\n    private readonly url: string,\n    private readonly method: HttpMethod,\n    private readonly headers: http.OutgoingHttpHeaders\n  ) {\n    super({\n      readableObjectMode: true,\n    })\n  }\n\n  _write(\n    chunk: any,\n    encoding: BufferEncoding,\n    callback: (err?: Error | null) => void\n  ): void {\n    if (this.tempFile === undefined) {\n      tmp.file((err, name, fd) => {\n        if (doesHaveValue(err)) return callback(err)\n        this.tempFilePath = name\n        this.tempFile = fs.createWriteStream(name, { fd })\n        this.tempFile.write(chunk, encoding, callback)\n      })\n    } else {\n      this.tempFile.write(chunk, encoding, callback)\n    }\n  }\n\n  _final(callback: (error?: Error | null) => void): void {\n    this.tempFile.end(() => {\n      this.sendHttpRequest(\n        this.url,\n        this.method,\n        this.headers,\n        (err1, res1) => {\n          if (doesHaveValue(err1)) return callback(err1)\n          this.pushResponseBody(res1, () => {\n            this.emitErrorUnlessHttp2xx(res1, this.url, this.method)\n            if (\n              res1.statusCode === 202 &&\n              res1.headers.location !== undefined\n            ) {\n              this.sendHttpRequest(\n                res1.headers.location,\n                'PUT',\n                {},\n                (err2, res2) => {\n                  if (doesHaveValue(err2)) return callback(err2)\n                  this.emitErrorUnlessHttp2xx(res2, this.url, this.method)\n                  callback()\n                }\n              )\n            } else {\n              callback()\n            }\n          })\n        }\n      )\n    })\n  }\n\n  private pushResponseBody(res: http.IncomingMessage, done: () => void): void {\n    let body = Buffer.alloc(0)\n    res.on('data', (chunk) => {\n      body = Buffer.concat([body, chunk])\n    })\n    res.on('end', () => {\n      this.push(body.toString('utf-8'))\n      done()\n    })\n  }\n\n  private emitErrorUnlessHttp2xx(\n    res: http.IncomingMessage,\n    url: string,\n    method: string\n  ): void {\n    if (res.statusCode >= 300)\n      this.emit(\n        'error',\n        new Error(\n          `Unexpected http status ${res.statusCode} from ${method} ${url}`\n        )\n      )\n  }\n\n  private sendHttpRequest(\n    url: string,\n    method: HttpMethod,\n    headers: http.OutgoingHttpHeaders,\n    callback: (err?: Error | null, res?: http.IncomingMessage) => void\n  ): void {\n    const httpx = doesHaveValue(url.match(/^https:/)) ? https : http\n    const additionalHttpHeaders: http.OutgoingHttpHeaders = {}\n\n    const upload = method === 'PUT' || method === 'POST'\n    if (upload) {\n      additionalHttpHeaders['Content-Length'] = fs.statSync(\n        this.tempFilePath\n      ).size\n    }\n\n    const allHeaders = { ...headers, ...additionalHttpHeaders }\n    const req = httpx.request(url, {\n      method,\n      headers: allHeaders,\n    })\n    req.on('error', (err) => this.emit('error', err))\n    req.on('response', (res) => {\n      res.on('error', (err) => this.emit('error', err))\n      callback(null, res)\n    })\n\n    if (upload) {\n      pipeline(fs.createReadStream(this.tempFilePath), req, (err) => {\n        if (doesHaveValue(err)) {\n          this.emit('error', err)\n        }\n      })\n    } else {\n      req.end()\n    }\n  }\n}\n"],"mappings":"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"}