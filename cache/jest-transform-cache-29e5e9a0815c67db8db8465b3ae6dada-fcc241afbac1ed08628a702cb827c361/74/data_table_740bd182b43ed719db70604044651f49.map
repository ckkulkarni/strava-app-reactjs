{"version":3,"names":["DataTable","constructor","sourceTable","Array","rawTable","rows","map","row","cells","cell","value","hashes","copy","raw","keys","valuesArray","slice","values","rowObject","forEach","key","index","shift","rowsHash","everyRowHasTwoColumns","every","length","Error","result","x","transpose","transposed","i","y","exports","default"],"sources":["../../src/models/data_table.ts"],"sourcesContent":["import * as messages from '@cucumber/messages'\n\nexport default class DataTable {\n  private readonly rawTable: string[][]\n\n  constructor(sourceTable: messages.PickleTable | string[][]) {\n    if (sourceTable instanceof Array) {\n      this.rawTable = sourceTable\n    } else {\n      this.rawTable = sourceTable.rows.map((row) =>\n        row.cells.map((cell) => cell.value)\n      )\n    }\n  }\n\n  hashes(): any[] {\n    const copy = this.raw()\n    const keys = copy[0]\n    const valuesArray = copy.slice(1)\n    return valuesArray.map((values) => {\n      const rowObject: Record<string, string> = {}\n      keys.forEach((key, index) => (rowObject[key] = values[index]))\n      return rowObject\n    })\n  }\n\n  raw(): string[][] {\n    return this.rawTable.slice(0)\n  }\n\n  rows(): string[][] {\n    const copy = this.raw()\n    copy.shift()\n    return copy\n  }\n\n  rowsHash(): Record<string, string> {\n    const rows = this.raw()\n    const everyRowHasTwoColumns = rows.every((row) => row.length === 2)\n    if (!everyRowHasTwoColumns) {\n      throw new Error(\n        'rowsHash can only be called on a data table where all rows have exactly two columns'\n      )\n    }\n    const result: Record<string, string> = {}\n    rows.forEach((x) => (result[x[0]] = x[1]))\n    return result\n  }\n\n  transpose(): DataTable {\n    const transposed = this.rawTable[0].map((x, i) =>\n      this.rawTable.map((y) => y[i])\n    )\n    return new DataTable(transposed)\n  }\n}\n"],"mappings":";;;;;AAEA,MAAqBA,SAAS;EAG5BC,YAAYC,WAA8C;IACxD,IAAIA,WAAW,YAAYC,KAAK,EAAE;MAChC,IAAI,CAACC,QAAQ,GAAGF,WAAW;KAC5B,MAAM;MACL,IAAI,CAACE,QAAQ,GAAGF,WAAW,CAACG,IAAI,CAACC,GAAG,CAAEC,GAAG,IACvCA,GAAG,CAACC,KAAK,CAACF,GAAG,CAAEG,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC,CACpC;;EAEL;EAEAC,MAAMA,CAAA;IACJ,MAAMC,IAAI,GAAG,IAAI,CAACC,GAAG,EAAE;IACvB,MAAMC,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC;IACpB,MAAMG,WAAW,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACjC,OAAOD,WAAW,CAACT,GAAG,CAAEW,MAAM,IAAI;MAChC,MAAMC,SAAS,GAA2B,EAAE;MAC5CJ,IAAI,CAACK,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAMH,SAAS,CAACE,GAAG,CAAC,GAAGH,MAAM,CAACI,KAAK,CAAE,CAAC;MAC9D,OAAOH,SAAS;IAClB,CAAC,CAAC;EACJ;EAEAL,GAAGA,CAAA;IACD,OAAO,IAAI,CAACT,QAAQ,CAACY,KAAK,CAAC,CAAC,CAAC;EAC/B;EAEAX,IAAIA,CAAA;IACF,MAAMO,IAAI,GAAG,IAAI,CAACC,GAAG,EAAE;IACvBD,IAAI,CAACU,KAAK,EAAE;IACZ,OAAOV,IAAI;EACb;EAEAW,QAAQA,CAAA;IACN,MAAMlB,IAAI,GAAG,IAAI,CAACQ,GAAG,EAAE;IACvB,MAAMW,qBAAqB,GAAGnB,IAAI,CAACoB,KAAK,CAAElB,GAAG,IAAKA,GAAG,CAACmB,MAAM,KAAK,CAAC,CAAC;IACnE,IAAI,CAACF,qBAAqB,EAAE;MAC1B,MAAM,IAAIG,KAAK,CACb,qFAAqF,CACtF;;IAEH,MAAMC,MAAM,GAA2B,EAAE;IACzCvB,IAAI,CAACc,OAAO,CAAEU,CAAC,IAAMD,MAAM,CAACC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAE,CAAC;IAC1C,OAAOD,MAAM;EACf;EAEAE,SAASA,CAAA;IACP,MAAMC,UAAU,GAAG,IAAI,CAAC3B,QAAQ,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACuB,CAAC,EAAEG,CAAC,KAC3C,IAAI,CAAC5B,QAAQ,CAACE,GAAG,CAAE2B,CAAC,IAAKA,CAAC,CAACD,CAAC,CAAC,CAAC,CAC/B;IACD,OAAO,IAAIhC,SAAS,CAAC+B,UAAU,CAAC;EAClC;;AApDFG,OAAA,CAAAC,OAAA,GAAAnC,SAAA"}