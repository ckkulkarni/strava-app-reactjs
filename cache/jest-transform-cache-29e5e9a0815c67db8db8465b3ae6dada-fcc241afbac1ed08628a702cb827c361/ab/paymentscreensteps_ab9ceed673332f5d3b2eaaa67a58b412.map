{"version":3,"names":["_react","_interopRequireDefault","require","_react2","_PaymentScreen","_reactRedux","_jestCucumber","_reactRouterDom","obj","__esModule","default","store","feature","loadFeature","defineFeature","test","given","then","when","and","state","spaceDetails","registration","parkingTime","space","render","createElement","Provider","MemoryRouter","initialEntries","Routes","Route","path","element","paymentButton","screen","getByTestId","fireEvent","click","findByText"],"sources":["paymentscreen.steps.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { screen, render, fireEvent } from \"@testing-library/react\";\r\nimport PaymentScreen from \"./../../PaymentScreen\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nlet store: any;\r\nconst feature = loadFeature(\"src/components/features/paymentscreen.feature\");\r\ndefineFeature(feature, (test) => {\r\n  test(\"User pays for occupied parking spot\", ({ given, then, when, and }) => {\r\n    given(\"I am on the Payment Screen\", () => {\r\n      const state = {\r\n        spaceDetails: {\r\n          registration: \"ABC123\",\r\n          parkingTime: \"08:30\",\r\n        },\r\n        space: 1,\r\n      };\r\n      render(\r\n        <Provider store={store}>\r\n          <MemoryRouter initialEntries={[\"/payment\"]}>\r\n            <Routes>\r\n              <Route path=\"/payment\" element={<PaymentScreen />} />\r\n            </Routes>\r\n          </MemoryRouter>\r\n        </Provider>\r\n      );\r\n    });\r\n\r\n    when(\"I click on the Make Payment button\", async () => {\r\n      const paymentButton = screen.getByTestId(\"paymentButton\");\r\n      fireEvent.click(paymentButton);\r\n      await screen.findByText(\"Payment Successful!\");\r\n    });\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAH,sBAAA,CAAAC,OAAA;AACAA,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AAEA,IAAAI,aAAA,GAAAJ,OAAA;AACA,IAAAK,eAAA,GAAAL,OAAA;AAM0B,SAAAD,uBAAAO,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAC1B,IAAIG,KAAU;AACd,MAAMC,OAAO,GAAG,IAAAC,yBAAW,EAAC,+CAA+C,CAAC;AAC5E,IAAAC,2BAAa,EAACF,OAAO,EAAGG,IAAI,IAAK;EAC/BA,IAAI,CAAC,qCAAqC,EAAE,CAAC;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAI,CAAC,KAAK;IAC1EH,KAAK,CAAC,4BAA4B,EAAE,MAAM;MACxC,MAAMI,KAAK,GAAG;QACZC,YAAY,EAAE;UACZC,YAAY,EAAE,QAAQ;UACtBC,WAAW,EAAE;QACf,CAAC;QACDC,KAAK,EAAE;MACT,CAAC;MACD,IAAAC,cAAM,gBACJzB,MAAA,CAAAU,OAAA,CAAAgB,aAAA,CAACrB,WAAA,CAAAsB,QAAQ;QAAChB,KAAK,EAAEA;MAAM,gBACrBX,MAAA,CAAAU,OAAA,CAAAgB,aAAA,CAACnB,eAAA,CAAAqB,YAAY;QAACC,cAAc,EAAE,CAAC,UAAU;MAAE,gBACzC7B,MAAA,CAAAU,OAAA,CAAAgB,aAAA,CAACnB,eAAA,CAAAuB,MAAM,qBACL9B,MAAA,CAAAU,OAAA,CAAAgB,aAAA,CAACnB,eAAA,CAAAwB,KAAK;QAACC,IAAI,EAAC,UAAU;QAACC,OAAO,eAAEjC,MAAA,CAAAU,OAAA,CAAAgB,aAAA,CAACtB,cAAA,CAAAM,OAAa;MAAI,EAAG,CAC9C,CACI,CACN,CACZ;IACH,CAAC,CAAC;IAEFQ,IAAI,CAAC,oCAAoC,EAAE,YAAY;MACrD,MAAMgB,aAAa,GAAGC,cAAM,CAACC,WAAW,CAAC,eAAe,CAAC;MACzDC,iBAAS,CAACC,KAAK,CAACJ,aAAa,CAAC;MAC9B,MAAMC,cAAM,CAACI,UAAU,CAAC,qBAAqB,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}