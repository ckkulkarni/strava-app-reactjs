{"version":3,"names":["stringifyNumber","require","intIdentify","value","Number","isInteger","intResolve","str","offset","radix","intAsBigInt","BigInt","parseInt","substring","intStringify","node","prefix","toString","intOct","identify","default","tag","format","test","resolve","_onError","opt","stringify","int","intHex","exports"],"sources":["int.js"],"sourcesContent":["'use strict';\n\nvar stringifyNumber = require('../../stringify/stringifyNumber.js');\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber.stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber.stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexports.int = int;\nexports.intHex = intHex;\nexports.intOct = intOct;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,eAAe,GAAGC,OAAO,CAAC,oCAAoC,CAAC;AAEnE,MAAMC,WAAW,GAAIC,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,IAAIC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC;AACnF,MAAMG,UAAU,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAAEC;AAAY,CAAC,KAAMA,WAAW,GAAGC,MAAM,CAACJ,GAAG,CAAC,GAAGK,QAAQ,CAACL,GAAG,CAACM,SAAS,CAACL,MAAM,CAAC,EAAEC,KAAK,CAAE;AAChI,SAASK,YAAYA,CAACC,IAAI,EAAEN,KAAK,EAAEO,MAAM,EAAE;EACvC,MAAM;IAAEb;EAAM,CAAC,GAAGY,IAAI;EACtB,IAAIb,WAAW,CAACC,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC,EAChC,OAAOa,MAAM,GAAGb,KAAK,CAACc,QAAQ,CAACR,KAAK,CAAC;EACzC,OAAOT,eAAe,CAACA,eAAe,CAACe,IAAI,CAAC;AAChD;AACA,MAAMG,MAAM,GAAG;EACXC,QAAQ,EAAEhB,KAAK,IAAID,WAAW,CAACC,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC;EACnDiB,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,uBAAuB;EAC5BC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,YAAY;EAClBC,OAAO,EAAEA,CAACjB,GAAG,EAAEkB,QAAQ,EAAEC,GAAG,KAAKpB,UAAU,CAACC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEmB,GAAG,CAAC;EAC3DC,SAAS,EAAEZ,IAAI,IAAID,YAAY,CAACC,IAAI,EAAE,CAAC,EAAE,IAAI;AACjD,CAAC;AACD,MAAMa,GAAG,GAAG;EACRT,QAAQ,EAAEjB,WAAW;EACrBkB,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,uBAAuB;EAC5BE,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAEA,CAACjB,GAAG,EAAEkB,QAAQ,EAAEC,GAAG,KAAKpB,UAAU,CAACC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAEmB,GAAG,CAAC;EAC5DC,SAAS,EAAE3B,eAAe,CAACA;AAC/B,CAAC;AACD,MAAM6B,MAAM,GAAG;EACXV,QAAQ,EAAEhB,KAAK,IAAID,WAAW,CAACC,KAAK,CAAC,IAAIA,KAAK,IAAI,CAAC;EACnDiB,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,uBAAuB;EAC5BC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,kBAAkB;EACxBC,OAAO,EAAEA,CAACjB,GAAG,EAAEkB,QAAQ,EAAEC,GAAG,KAAKpB,UAAU,CAACC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAEmB,GAAG,CAAC;EAC5DC,SAAS,EAAEZ,IAAI,IAAID,YAAY,CAACC,IAAI,EAAE,EAAE,EAAE,IAAI;AAClD,CAAC;AAEDe,OAAO,CAACF,GAAG,GAAGA,GAAG;AACjBE,OAAO,CAACD,MAAM,GAAGA,MAAM;AACvBC,OAAO,CAACZ,MAAM,GAAGA,MAAM"}