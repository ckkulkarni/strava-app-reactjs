{"version":3,"names":["helpers_1","require","step_arguments_1","cucumber_expressions_1","value_checker_1","StepDefinitionSnippetBuilder","constructor","snippetSyntax","parameterTypeRegistry","cucumberExpressionGenerator","CucumberExpressionGenerator","parameterTypes","build","keywordType","pickleStep","comment","functionName","getFunctionName","generatedExpressions","generateExpressions","text","stepParameterNames","getStepParameterNames","KeywordType","Event","Outcome","Precondition","step","doesHaveValue","argument","argumentName","parseStepArgument","dataTable","docString","exports","default"],"sources":["../../../src/formatter/step_definition_snippet_builder/index.ts"],"sourcesContent":["import { KeywordType } from '../helpers'\nimport { parseStepArgument } from '../../step_arguments'\nimport { ISnippetSnytax } from './snippet_syntax'\nimport {\n  CucumberExpressionGenerator,\n  ParameterTypeRegistry,\n} from '@cucumber/cucumber-expressions'\nimport * as messages from '@cucumber/messages'\nimport { doesHaveValue } from '../../value_checker'\n\nexport interface INewStepDefinitionSnippetBuilderOptions {\n  snippetSyntax: ISnippetSnytax\n  parameterTypeRegistry: ParameterTypeRegistry\n}\n\nexport interface IBuildRequest {\n  keywordType: KeywordType\n  pickleStep: messages.PickleStep\n}\n\nexport default class StepDefinitionSnippetBuilder {\n  private readonly snippetSyntax: ISnippetSnytax\n  private readonly cucumberExpressionGenerator: CucumberExpressionGenerator\n\n  constructor({\n    snippetSyntax,\n    parameterTypeRegistry,\n  }: INewStepDefinitionSnippetBuilderOptions) {\n    this.snippetSyntax = snippetSyntax\n    this.cucumberExpressionGenerator = new CucumberExpressionGenerator(\n      () => parameterTypeRegistry.parameterTypes\n    )\n  }\n\n  build({ keywordType, pickleStep }: IBuildRequest): string {\n    const comment =\n      'Write code here that turns the phrase above into concrete actions'\n    const functionName = this.getFunctionName(keywordType)\n    const generatedExpressions =\n      this.cucumberExpressionGenerator.generateExpressions(pickleStep.text)\n    const stepParameterNames = this.getStepParameterNames(pickleStep)\n    return this.snippetSyntax.build({\n      comment,\n      functionName,\n      generatedExpressions,\n      stepParameterNames,\n    })\n  }\n\n  getFunctionName(keywordType: KeywordType): string {\n    switch (keywordType) {\n      case KeywordType.Event:\n        return 'When'\n      case KeywordType.Outcome:\n        return 'Then'\n      case KeywordType.Precondition:\n        return 'Given'\n    }\n  }\n\n  getStepParameterNames(step: messages.PickleStep): string[] {\n    if (doesHaveValue(step.argument)) {\n      const argumentName = parseStepArgument(step.argument, {\n        dataTable: () => 'dataTable',\n        docString: () => 'docString',\n      })\n      return [argumentName]\n    }\n    return []\n  }\n}\n"],"mappings":";;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,gBAAA,GAAAD,OAAA;AAEA,MAAAE,sBAAA,GAAAF,OAAA;AAKA,MAAAG,eAAA,GAAAH,OAAA;AAYA,MAAqBI,4BAA4B;EAI/CC,YAAY;IACVC,aAAa;IACbC;EAAqB,CACmB;IACxC,IAAI,CAACD,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACE,2BAA2B,GAAG,IAAIN,sBAAA,CAAAO,2BAA2B,CAChE,MAAMF,qBAAqB,CAACG,cAAc,CAC3C;EACH;EAEAC,KAAKA,CAAC;IAAEC,WAAW;IAAEC;EAAU,CAAiB;IAC9C,MAAMC,OAAO,GACX,mEAAmE;IACrE,MAAMC,YAAY,GAAG,IAAI,CAACC,eAAe,CAACJ,WAAW,CAAC;IACtD,MAAMK,oBAAoB,GACxB,IAAI,CAACT,2BAA2B,CAACU,mBAAmB,CAACL,UAAU,CAACM,IAAI,CAAC;IACvE,MAAMC,kBAAkB,GAAG,IAAI,CAACC,qBAAqB,CAACR,UAAU,CAAC;IACjE,OAAO,IAAI,CAACP,aAAa,CAACK,KAAK,CAAC;MAC9BG,OAAO;MACPC,YAAY;MACZE,oBAAoB;MACpBG;KACD,CAAC;EACJ;EAEAJ,eAAeA,CAACJ,WAAwB;IACtC,QAAQA,WAAW;MACjB,KAAKb,SAAA,CAAAuB,WAAW,CAACC,KAAK;QACpB,OAAO,MAAM;MACf,KAAKxB,SAAA,CAAAuB,WAAW,CAACE,OAAO;QACtB,OAAO,MAAM;MACf,KAAKzB,SAAA,CAAAuB,WAAW,CAACG,YAAY;QAC3B,OAAO,OAAO;IAAA;EAEpB;EAEAJ,qBAAqBA,CAACK,IAAyB;IAC7C,IAAI,IAAAvB,eAAA,CAAAwB,aAAa,EAACD,IAAI,CAACE,QAAQ,CAAC,EAAE;MAChC,MAAMC,YAAY,GAAG,IAAA5B,gBAAA,CAAA6B,iBAAiB,EAACJ,IAAI,CAACE,QAAQ,EAAE;QACpDG,SAAS,EAAEA,CAAA,KAAM,WAAW;QAC5BC,SAAS,EAAEA,CAAA,KAAM;OAClB,CAAC;MACF,OAAO,CAACH,YAAY,CAAC;;IAEvB,OAAO,EAAE;EACX;;AAjDFI,OAAA,CAAAC,OAAA,GAAA9B,4BAAA"}