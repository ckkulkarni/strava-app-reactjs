{"version":3,"names":["createNode","require","Node","collectionFromPath","schema","path","value","v","i","length","k","Number","isInteger","a","Map","undefined","aliasDuplicateObjects","keepUndefined","onAnchor","Error","sourceObjects","isEmptyPath","Symbol","iterator","next","done","Collection","NodeBase","constructor","type","Object","defineProperty","configurable","enumerable","writable","clone","copy","create","getPrototypeOf","getOwnPropertyDescriptors","items","map","it","isNode","isPair","range","slice","addIn","add","key","rest","node","get","isCollection","set","deleteIn","delete","getIn","keepScalar","isScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","tag","hasIn","has","setIn","maxFlowStringSingleLineLength","exports"],"sources":["Collection.js"],"sourcesContent":["'use strict';\n\nvar createNode = require('../doc/createNode.js');\nvar Node = require('./Node.js');\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode.createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends Node.NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => Node.isNode(it) || Node.isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (Node.isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (Node.isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && Node.isScalar(node) ? node.value : node;\n        else\n            return Node.isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!Node.isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    Node.isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return Node.isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (Node.isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexports.Collection = Collection;\nexports.collectionFromPath = collectionFromPath;\nexports.isEmptyPath = isEmptyPath;\n"],"mappings":"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"}