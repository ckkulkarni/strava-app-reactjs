dac6800d7e67026904fa32570ef80018
"use strict";

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
const json_formatter_1 = __importDefault(require("../json_formatter"));
const message_formatter_1 = __importDefault(require("../message_formatter"));
const progress_bar_formatter_1 = __importDefault(require("../progress_bar_formatter"));
const progress_formatter_1 = __importDefault(require("../progress_formatter"));
const rerun_formatter_1 = __importDefault(require("../rerun_formatter"));
const snippets_formatter_1 = __importDefault(require("../snippets_formatter"));
const summary_formatter_1 = __importDefault(require("../summary_formatter"));
const usage_formatter_1 = __importDefault(require("../usage_formatter"));
const usage_json_formatter_1 = __importDefault(require("../usage_json_formatter"));
const html_formatter_1 = __importDefault(require("../html_formatter"));
const junit_formatter_1 = __importDefault(require("../junit_formatter"));
const Formatters = {
  getFormatters() {
    return {
      json: json_formatter_1.default,
      message: message_formatter_1.default,
      html: html_formatter_1.default,
      progress: progress_formatter_1.default,
      'progress-bar': progress_bar_formatter_1.default,
      rerun: rerun_formatter_1.default,
      snippets: snippets_formatter_1.default,
      summary: summary_formatter_1.default,
      usage: usage_formatter_1.default,
      'usage-json': usage_json_formatter_1.default,
      junit: junit_formatter_1.default
    };
  },
  buildFormattersDocumentationString() {
    let concatanatedFormattersDocumentation = '';
    const formatters = this.getFormatters();
    for (const formatterName in formatters) {
      concatanatedFormattersDocumentation += `    ${formatterName}: ${formatters[formatterName].documentation}\n`;
    }
    return concatanatedFormattersDocumentation;
  }
};
exports.default = Formatters;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqc29uX2Zvcm1hdHRlcl8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsIm1lc3NhZ2VfZm9ybWF0dGVyXzEiLCJwcm9ncmVzc19iYXJfZm9ybWF0dGVyXzEiLCJwcm9ncmVzc19mb3JtYXR0ZXJfMSIsInJlcnVuX2Zvcm1hdHRlcl8xIiwic25pcHBldHNfZm9ybWF0dGVyXzEiLCJzdW1tYXJ5X2Zvcm1hdHRlcl8xIiwidXNhZ2VfZm9ybWF0dGVyXzEiLCJ1c2FnZV9qc29uX2Zvcm1hdHRlcl8xIiwiaHRtbF9mb3JtYXR0ZXJfMSIsImp1bml0X2Zvcm1hdHRlcl8xIiwiRm9ybWF0dGVycyIsImdldEZvcm1hdHRlcnMiLCJqc29uIiwiZGVmYXVsdCIsIm1lc3NhZ2UiLCJodG1sIiwicHJvZ3Jlc3MiLCJyZXJ1biIsInNuaXBwZXRzIiwic3VtbWFyeSIsInVzYWdlIiwianVuaXQiLCJidWlsZEZvcm1hdHRlcnNEb2N1bWVudGF0aW9uU3RyaW5nIiwiY29uY2F0YW5hdGVkRm9ybWF0dGVyc0RvY3VtZW50YXRpb24iLCJmb3JtYXR0ZXJzIiwiZm9ybWF0dGVyTmFtZSIsImRvY3VtZW50YXRpb24iLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2Zvcm1hdHRlci9oZWxwZXJzL2Zvcm1hdHRlcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZvcm1hdHRlciBmcm9tICcuLi8uJ1xuaW1wb3J0IEpzb25Gb3JtYXR0ZXIgZnJvbSAnLi4vanNvbl9mb3JtYXR0ZXInXG5pbXBvcnQgTWVzc2FnZUZvcm1hdHRlciBmcm9tICcuLi9tZXNzYWdlX2Zvcm1hdHRlcidcbmltcG9ydCBQcm9ncmVzc0JhckZvcm1hdHRlciBmcm9tICcuLi9wcm9ncmVzc19iYXJfZm9ybWF0dGVyJ1xuaW1wb3J0IFByb2dyZXNzRm9ybWF0dGVyIGZyb20gJy4uL3Byb2dyZXNzX2Zvcm1hdHRlcidcbmltcG9ydCBSZXJ1bkZvcm1hdHRlciBmcm9tICcuLi9yZXJ1bl9mb3JtYXR0ZXInXG5pbXBvcnQgU25pcHBldHNGb3JtYXR0ZXIgZnJvbSAnLi4vc25pcHBldHNfZm9ybWF0dGVyJ1xuaW1wb3J0IFN1bW1hcnlGb3JtYXR0ZXIgZnJvbSAnLi4vc3VtbWFyeV9mb3JtYXR0ZXInXG5pbXBvcnQgVXNhZ2VGb3JtYXR0ZXIgZnJvbSAnLi4vdXNhZ2VfZm9ybWF0dGVyJ1xuaW1wb3J0IFVzYWdlSnNvbkZvcm1hdHRlciBmcm9tICcuLi91c2FnZV9qc29uX2Zvcm1hdHRlcidcbmltcG9ydCBIdG1sRm9ybWF0dGVyIGZyb20gJy4uL2h0bWxfZm9ybWF0dGVyJ1xuaW1wb3J0IEp1bml0Rm9ybWF0dGVyIGZyb20gJy4uL2p1bml0X2Zvcm1hdHRlcidcblxuY29uc3QgRm9ybWF0dGVycyA9IHtcbiAgZ2V0Rm9ybWF0dGVycygpOiBSZWNvcmQ8c3RyaW5nLCB0eXBlb2YgRm9ybWF0dGVyPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGpzb246IEpzb25Gb3JtYXR0ZXIsXG4gICAgICBtZXNzYWdlOiBNZXNzYWdlRm9ybWF0dGVyLFxuICAgICAgaHRtbDogSHRtbEZvcm1hdHRlcixcbiAgICAgIHByb2dyZXNzOiBQcm9ncmVzc0Zvcm1hdHRlcixcbiAgICAgICdwcm9ncmVzcy1iYXInOiBQcm9ncmVzc0JhckZvcm1hdHRlcixcbiAgICAgIHJlcnVuOiBSZXJ1bkZvcm1hdHRlcixcbiAgICAgIHNuaXBwZXRzOiBTbmlwcGV0c0Zvcm1hdHRlcixcbiAgICAgIHN1bW1hcnk6IFN1bW1hcnlGb3JtYXR0ZXIsXG4gICAgICB1c2FnZTogVXNhZ2VGb3JtYXR0ZXIsXG4gICAgICAndXNhZ2UtanNvbic6IFVzYWdlSnNvbkZvcm1hdHRlcixcbiAgICAgIGp1bml0OiBKdW5pdEZvcm1hdHRlcixcbiAgICB9XG4gIH0sXG4gIGJ1aWxkRm9ybWF0dGVyc0RvY3VtZW50YXRpb25TdHJpbmcoKTogc3RyaW5nIHtcbiAgICBsZXQgY29uY2F0YW5hdGVkRm9ybWF0dGVyc0RvY3VtZW50YXRpb246IHN0cmluZyA9ICcnXG4gICAgY29uc3QgZm9ybWF0dGVycyA9IHRoaXMuZ2V0Rm9ybWF0dGVycygpXG4gICAgZm9yIChjb25zdCBmb3JtYXR0ZXJOYW1lIGluIGZvcm1hdHRlcnMpIHtcbiAgICAgIGNvbmNhdGFuYXRlZEZvcm1hdHRlcnNEb2N1bWVudGF0aW9uICs9IGAgICAgJHtmb3JtYXR0ZXJOYW1lfTogJHtmb3JtYXR0ZXJzW2Zvcm1hdHRlck5hbWVdLmRvY3VtZW50YXRpb259XFxuYFxuICAgIH1cblxuICAgIHJldHVybiBjb25jYXRhbmF0ZWRGb3JtYXR0ZXJzRG9jdW1lbnRhdGlvblxuICB9LFxufVxuXG5leHBvcnQgZGVmYXVsdCBGb3JtYXR0ZXJzXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQSxNQUFBQSxnQkFBQSxHQUFBQyxlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBQyxtQkFBQSxHQUFBRixlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBRSx3QkFBQSxHQUFBSCxlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBRyxvQkFBQSxHQUFBSixlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBSSxpQkFBQSxHQUFBTCxlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBSyxvQkFBQSxHQUFBTixlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBTSxtQkFBQSxHQUFBUCxlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBTyxpQkFBQSxHQUFBUixlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBUSxzQkFBQSxHQUFBVCxlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBUyxnQkFBQSxHQUFBVixlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBVSxpQkFBQSxHQUFBWCxlQUFBLENBQUFDLE9BQUE7QUFFQSxNQUFNVyxVQUFVLEdBQUc7RUFDakJDLGFBQWFBLENBQUE7SUFDWCxPQUFPO01BQ0xDLElBQUksRUFBRWYsZ0JBQUEsQ0FBQWdCLE9BQWE7TUFDbkJDLE9BQU8sRUFBRWQsbUJBQUEsQ0FBQWEsT0FBZ0I7TUFDekJFLElBQUksRUFBRVAsZ0JBQUEsQ0FBQUssT0FBYTtNQUNuQkcsUUFBUSxFQUFFZCxvQkFBQSxDQUFBVyxPQUFpQjtNQUMzQixjQUFjLEVBQUVaLHdCQUFBLENBQUFZLE9BQW9CO01BQ3BDSSxLQUFLLEVBQUVkLGlCQUFBLENBQUFVLE9BQWM7TUFDckJLLFFBQVEsRUFBRWQsb0JBQUEsQ0FBQVMsT0FBaUI7TUFDM0JNLE9BQU8sRUFBRWQsbUJBQUEsQ0FBQVEsT0FBZ0I7TUFDekJPLEtBQUssRUFBRWQsaUJBQUEsQ0FBQU8sT0FBYztNQUNyQixZQUFZLEVBQUVOLHNCQUFBLENBQUFNLE9BQWtCO01BQ2hDUSxLQUFLLEVBQUVaLGlCQUFBLENBQUFJO0tBQ1I7RUFDSCxDQUFDO0VBQ0RTLGtDQUFrQ0EsQ0FBQTtJQUNoQyxJQUFJQyxtQ0FBbUMsR0FBVyxFQUFFO0lBQ3BELE1BQU1DLFVBQVUsR0FBRyxJQUFJLENBQUNiLGFBQWEsRUFBRTtJQUN2QyxLQUFLLE1BQU1jLGFBQWEsSUFBSUQsVUFBVSxFQUFFO01BQ3RDRCxtQ0FBbUMsSUFBSSxPQUFPRSxhQUFhLEtBQUtELFVBQVUsQ0FBQ0MsYUFBYSxDQUFDLENBQUNDLGFBQWEsSUFBSTs7SUFHN0csT0FBT0gsbUNBQW1DO0VBQzVDO0NBQ0Q7QUFFREksT0FBQSxDQUFBZCxPQUFBLEdBQWVILFVBQVUifQ==