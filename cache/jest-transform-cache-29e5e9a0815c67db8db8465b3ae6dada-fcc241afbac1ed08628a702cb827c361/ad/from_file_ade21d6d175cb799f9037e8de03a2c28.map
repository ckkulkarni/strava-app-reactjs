{"version":3,"names":["string_argv_1","__importDefault","require","fs_1","path_1","yaml_1","util_1","url_1","merge_configurations_1","argv_parser_1","check_schema_1","importer","fromFile","logger","cwd","file","profiles","definitions","loadFile","default","debug","length","definedKeys","Object","keys","forEach","profileKey","includes","Error","mergeConfigurations","map","extractConfiguration","exports","filePath","join","extension","extname","JSON","parse","promisify","readFile","encoding","error","code","pathToFileURL","name","definition","configuration","checkSchema","errors"],"sources":["../../src/configuration/from_file.ts"],"sourcesContent":["import stringArgv from 'string-argv'\nimport fs from 'fs'\nimport path from 'path'\nimport YAML from 'yaml'\nimport { promisify } from 'util'\nimport { pathToFileURL } from 'url'\nimport { IConfiguration } from './types'\nimport { mergeConfigurations } from './merge_configurations'\nimport ArgvParser from './argv_parser'\nimport { checkSchema } from './check_schema'\nimport { ILogger } from '../logger'\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { importer } = require('../importer')\n\nexport async function fromFile(\n  logger: ILogger,\n  cwd: string,\n  file: string,\n  profiles: string[] = []\n): Promise<Partial<IConfiguration>> {\n  const definitions = await loadFile(cwd, file)\n  if (!definitions.default) {\n    logger.debug('No default profile defined in configuration file')\n    definitions.default = {}\n  }\n  if (profiles.length < 1) {\n    logger.debug('No profiles specified; using default profile')\n    profiles = ['default']\n  }\n  const definedKeys = Object.keys(definitions)\n  profiles.forEach((profileKey) => {\n    if (!definedKeys.includes(profileKey)) {\n      throw new Error(`Requested profile \"${profileKey}\" doesn't exist`)\n    }\n  })\n  return mergeConfigurations(\n    {},\n    ...profiles.map((profileKey) =>\n      extractConfiguration(logger, profileKey, definitions[profileKey])\n    )\n  )\n}\n\nasync function loadFile(\n  cwd: string,\n  file: string\n): Promise<Record<string, any>> {\n  const filePath: string = path.join(cwd, file)\n  const extension = path.extname(filePath)\n  let definitions\n  switch (extension) {\n    case '.json':\n      definitions = JSON.parse(\n        await promisify(fs.readFile)(filePath, { encoding: 'utf-8' })\n      )\n      break\n    case '.yaml':\n    case '.yml':\n      definitions = YAML.parse(\n        await promisify(fs.readFile)(filePath, { encoding: 'utf-8' })\n      )\n      break\n    default:\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        definitions = require(filePath)\n      } catch (error) {\n        if (error.code === 'ERR_REQUIRE_ESM') {\n          definitions = await importer(pathToFileURL(filePath))\n        } else {\n          throw error\n        }\n      }\n  }\n  if (typeof definitions !== 'object') {\n    throw new Error(`Configuration file ${filePath} does not export an object`)\n  }\n  return definitions\n}\n\nfunction extractConfiguration(\n  logger: ILogger,\n  name: string,\n  definition: any\n): Partial<IConfiguration> {\n  if (typeof definition === 'string') {\n    logger.debug(`Profile \"${name}\" value is a string; parsing as argv`)\n    const { configuration } = ArgvParser.parse([\n      'node',\n      'cucumber-js',\n      ...stringArgv(definition),\n    ])\n    return configuration\n  }\n  try {\n    return checkSchema(definition)\n  } catch (error) {\n    throw new Error(\n      `Requested profile \"${name}\" failed schema validation: ${error.errors.join(\n        ' '\n      )}`\n    )\n  }\n}\n"],"mappings":"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"}