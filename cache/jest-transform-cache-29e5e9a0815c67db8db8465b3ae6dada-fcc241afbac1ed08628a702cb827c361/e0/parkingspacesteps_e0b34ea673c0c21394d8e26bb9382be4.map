{"version":3,"names":["_ParkingSpace","_interopRequireDefault","require","_PaymentScreen","_jestCucumber","_react","_react2","_parkingSlice","_interopRequireWildcard","_reactRedux","_toolkit","_reactRouterDom","_Base","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","feature","loadFeature","store","defineFeature","test","given","when","then","and","configureStore","reducer","parkingSpaces","parkingSlice","screen","render","createElement","Provider","BrowserRouter","Routes","Route","path","element","expect","toBeTruthy","addSpace","getByTestId","fireEvent","click","dispatch","addToParkingSpace","numSpaces","getState","toBeGreaterThan"],"sources":["parkingspace.steps.tsx"],"sourcesContent":["import ParkingSpace from \"../../ParkingSpace\";\r\nimport PaymentScreen from \"../../PaymentScreen\";\r\nimport { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport \"text-encoding\";\r\nimport parkingSlice, {\r\n  initializeParkingLot,\r\n  addToParkingSpace,\r\n} from \"../../redux/reducer/parkingSlice\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Base from \"./../../Base\";\r\n\r\nconst feature = loadFeature(\"src/components/features/parkingspace.feature\");\r\nlet store: any;\r\n\r\ndefineFeature(feature, (test) => {\r\n  test(\"Add a new parking space\", ({ given, when, then, and }) => {\r\n    store = configureStore({\r\n      reducer: {\r\n        parkingSpaces: parkingSlice,\r\n      },\r\n    });\r\n    const screen = render(\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Base />} />\r\n            <Route path=\"/spaces\" element={<ParkingSpace />} />\r\n            <Route path=\"/payment\" element={<PaymentScreen />} />\r\n          </Routes>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n    given(\"that there is a Parking Space Component\", () => {\r\n      expect(screen).toBeTruthy();\r\n    });\r\n    when('I click on the \"Add Space\" button', () => {\r\n      const addSpace = screen.getByTestId(\"addSpace\");\r\n      fireEvent.click(addSpace);\r\n    });\r\n    then(\r\n      \"a new parking space should be added to the list of available spaces\",\r\n      () => {\r\n        const addSpace = screen.getByTestId(\"addSpace\");\r\n        fireEvent.click(addSpace);\r\n        store.dispatch(addToParkingSpace());\r\n      }\r\n    );\r\n  });\r\n  test(\"Remove an existing parking space\", ({ given, when, then, and }) => {\r\n    store = configureStore({\r\n      reducer: {\r\n        parkingSpaces: parkingSlice,\r\n      },\r\n    });\r\n    const screen = render(\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Base />} />\r\n            <Route path=\"/spaces\" element={<ParkingSpace />} />\r\n            <Route path=\"/payment\" element={<PaymentScreen />} />\r\n          </Routes>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n    given(\"that there is a Parking Space Component\", () => {\r\n      expect(screen).toBeTruthy();\r\n    });\r\n    and(\"there is more than one parking space available\", () => {\r\n      const numSpaces = store.getState().parkingSpaces.numSpaces;\r\n      expect(numSpaces).toBeGreaterThan(1);\r\n    });\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,cAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,aAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAL,sBAAA,CAAAC,OAAA;AACAA,OAAA;AACA,IAAAK,aAAA,GAAAC,uBAAA,CAAAN,OAAA;AAIA,IAAAO,WAAA,GAAAP,OAAA;AACA,IAAAQ,QAAA,GAAAR,OAAA;AACA,IAAAS,eAAA,GAAAT,OAAA;AACA,IAAAU,KAAA,GAAAX,sBAAA,CAAAC,OAAA;AAAgC,SAAAW,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAvB,uBAAAiB,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEhC,MAAMiB,OAAO,GAAG,IAAAC,yBAAW,EAAC,8CAA8C,CAAC;AAC3E,IAAIC,KAAU;AAEd,IAAAC,2BAAa,EAACH,OAAO,EAAGI,IAAI,IAAK;EAC/BA,IAAI,CAAC,yBAAyB,EAAE,CAAC;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAI,CAAC,KAAK;IAC9DN,KAAK,GAAG,IAAAO,uBAAc,EAAC;MACrBC,OAAO,EAAE;QACPC,aAAa,EAAEC;MACjB;IACF,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,IAAAC,aAAM,gBACnB3C,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACzC,WAAA,CAAA0C,QAAQ;MAACd,KAAK,EAAEA;IAAM,gBACrB/B,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAAyC,aAAM,qBACL9C,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA0C,MAAM,qBACL/C,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA2C,KAAK;MAACC,IAAI,EAAC,GAAG;MAACC,OAAO,eAAElD,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACtC,KAAA,CAAAQ,OAAI;IAAI,EAAG,eACrCd,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA2C,KAAK;MAACC,IAAI,EAAC,SAAS;MAACC,OAAO,eAAElD,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAAClD,aAAA,CAAAoB,OAAY;IAAI,EAAG,eACnDd,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA2C,KAAK;MAACC,IAAI,EAAC,UAAU;MAACC,OAAO,eAAElD,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAAC/C,cAAA,CAAAiB,OAAa;IAAI,EAAG,CAC9C,CACF,CACA,CACZ;IACDoB,KAAK,CAAC,yCAAyC,EAAE,MAAM;MACrDiB,MAAM,CAACT,MAAM,CAAC,CAACU,UAAU,EAAE;IAC7B,CAAC,CAAC;IACFjB,IAAI,CAAC,mCAAmC,EAAE,MAAM;MAC9C,MAAMkB,QAAQ,GAAGX,MAAM,CAACY,WAAW,CAAC,UAAU,CAAC;MAC/CC,gBAAS,CAACC,KAAK,CAACH,QAAQ,CAAC;IAC3B,CAAC,CAAC;IACFjB,IAAI,CACF,qEAAqE,EACrE,MAAM;MACJ,MAAMiB,QAAQ,GAAGX,MAAM,CAACY,WAAW,CAAC,UAAU,CAAC;MAC/CC,gBAAS,CAACC,KAAK,CAACH,QAAQ,CAAC;MACzBtB,KAAK,CAAC0B,QAAQ,CAAC,IAAAC,+BAAiB,GAAE,CAAC;IACrC,CAAC,CACF;EACH,CAAC,CAAC;EACFzB,IAAI,CAAC,kCAAkC,EAAE,CAAC;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAI,CAAC,KAAK;IACvEN,KAAK,GAAG,IAAAO,uBAAc,EAAC;MACrBC,OAAO,EAAE;QACPC,aAAa,EAAEC;MACjB;IACF,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,IAAAC,aAAM,gBACnB3C,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACzC,WAAA,CAAA0C,QAAQ;MAACd,KAAK,EAAEA;IAAM,gBACrB/B,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAAyC,aAAM,qBACL9C,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA0C,MAAM,qBACL/C,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA2C,KAAK;MAACC,IAAI,EAAC,GAAG;MAACC,OAAO,eAAElD,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACtC,KAAA,CAAAQ,OAAI;IAAI,EAAG,eACrCd,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA2C,KAAK;MAACC,IAAI,EAAC,SAAS;MAACC,OAAO,eAAElD,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAAClD,aAAA,CAAAoB,OAAY;IAAI,EAAG,eACnDd,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAACvC,eAAA,CAAA2C,KAAK;MAACC,IAAI,EAAC,UAAU;MAACC,OAAO,eAAElD,OAAA,CAAAc,OAAA,CAAA8B,aAAA,CAAC/C,cAAA,CAAAiB,OAAa;IAAI,EAAG,CAC9C,CACF,CACA,CACZ;IACDoB,KAAK,CAAC,yCAAyC,EAAE,MAAM;MACrDiB,MAAM,CAACT,MAAM,CAAC,CAACU,UAAU,EAAE;IAC7B,CAAC,CAAC;IACFf,GAAG,CAAC,gDAAgD,EAAE,MAAM;MAC1D,MAAMsB,SAAS,GAAG5B,KAAK,CAAC6B,QAAQ,EAAE,CAACpB,aAAa,CAACmB,SAAS;MAC1DR,MAAM,CAACQ,SAAS,CAAC,CAACE,eAAe,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}