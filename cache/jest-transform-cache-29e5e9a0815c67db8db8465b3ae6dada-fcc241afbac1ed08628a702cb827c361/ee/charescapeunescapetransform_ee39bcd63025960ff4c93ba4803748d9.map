{"version":3,"names":["module","exports","_hasXFlag","init","ast","flags","includes","Char","path","node","escaped","shouldUnescape","hasXFlag","value","index","parent","type","preservesEscape","preservesInCharClass","negative","test","preservesOpeningCurlyBraceEscape","preservesClosingCurlyBraceEscape","consumeNumbers","startIndex","rtl","i","siblingNode","expressions","length","kind","Math","abs","isSimpleChar","nbFollowingNumbers","nextSiblingNode","nbPrecedingNumbers","previousSiblingNode"],"sources":["char-escape-unescape-transform.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove unnecessary escape.\n *\n * \\e -> e\n *\n * [\\(] -> [(]\n */\n\nmodule.exports = {\n  _hasXFlag: false,\n  init: function init(ast) {\n    this._hasXFlag = ast.flags.includes('x');\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (!node.escaped) {\n      return;\n    }\n\n    if (shouldUnescape(path, this._hasXFlag)) {\n      delete node.escaped;\n    }\n  }\n};\n\nfunction shouldUnescape(path, hasXFlag) {\n  var value = path.node.value,\n      index = path.index,\n      parent = path.parent;\n\n  // In char class (, etc are allowed.\n\n  if (parent.type !== 'CharacterClass' && parent.type !== 'ClassRange') {\n    return !preservesEscape(value, index, parent, hasXFlag);\n  }\n\n  return !preservesInCharClass(value, index, parent);\n}\n\n/**\n * \\], \\\\, \\^, \\-\n */\nfunction preservesInCharClass(value, index, parent) {\n  if (value === '^') {\n    // Avoid [\\^a] turning into [^a]\n    return index === 0 && !parent.negative;\n  }\n  if (value === '-') {\n    // Avoid [a\\-z] turning into [a-z]\n    return true;\n  }\n  return (/[\\]\\\\]/.test(value)\n  );\n}\n\nfunction preservesEscape(value, index, parent, hasXFlag) {\n  if (value === '{') {\n    return preservesOpeningCurlyBraceEscape(index, parent);\n  }\n\n  if (value === '}') {\n    return preservesClosingCurlyBraceEscape(index, parent);\n  }\n\n  if (hasXFlag && /[ #]/.test(value)) {\n    return true;\n  }\n\n  return (/[*[()+?^$./\\\\|]/.test(value)\n  );\n}\n\nfunction consumeNumbers(startIndex, parent, rtl) {\n  var i = startIndex;\n  var siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n\n  while (siblingNode && siblingNode.type === 'Char' && siblingNode.kind === 'simple' && !siblingNode.escaped && /\\d/.test(siblingNode.value)) {\n    rtl ? i-- : i++;\n    siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n  }\n\n  return Math.abs(startIndex - i);\n}\n\nfunction isSimpleChar(node, value) {\n  return node && node.type === 'Char' && node.kind === 'simple' && !node.escaped && node.value === value;\n}\n\nfunction preservesOpeningCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbFollowingNumbers = consumeNumbers(index + 1, parent);\n  var i = index + nbFollowingNumbers + 1;\n  var nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n  if (nbFollowingNumbers) {\n    // Avoid \\{3} turning into {3}\n    if (isSimpleChar(nextSiblingNode, '}')) {\n      return true;\n    }\n\n    if (isSimpleChar(nextSiblingNode, ',')) {\n      nbFollowingNumbers = consumeNumbers(i + 1, parent);\n      i = i + nbFollowingNumbers + 1;\n      nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n      // Avoid \\{3,} turning into {3,}\n      return isSimpleChar(nextSiblingNode, '}');\n    }\n  }\n  return false;\n}\n\nfunction preservesClosingCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbPrecedingNumbers = consumeNumbers(index - 1, parent, true);\n  var i = index - nbPrecedingNumbers - 1;\n  var previousSiblingNode = i >= 0 && parent.expressions[i];\n\n  // Avoid {3\\} turning into {3}\n  if (nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{')) {\n    return true;\n  }\n\n  if (isSimpleChar(previousSiblingNode, ',')) {\n    nbPrecedingNumbers = consumeNumbers(i - 1, parent, true);\n    i = i - nbPrecedingNumbers - 1;\n    previousSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n    // Avoid {3,\\} turning into {3,}\n    return nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{');\n  }\n  return false;\n}"],"mappings":"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"}