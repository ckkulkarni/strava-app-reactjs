3e7840552aabe192c909ee2359183ac5
'use strict';

var createNode = require('../doc/createNode.js');
var stringifyPair = require('../stringify/stringifyPair.js');
var addPairToJSMap = require('./addPairToJSMap.js');
var Node = require('./Node.js');
function createPair(key, value, ctx) {
  const k = createNode.createNode(key, undefined, ctx);
  const v = createNode.createNode(value, undefined, ctx);
  return new Pair(k, v);
}
class Pair {
  constructor(key, value = null) {
    Object.defineProperty(this, Node.NODE_TYPE, {
      value: Node.PAIR
    });
    this.key = key;
    this.value = value;
  }
  clone(schema) {
    let {
      key,
      value
    } = this;
    if (Node.isNode(key)) key = key.clone(schema);
    if (Node.isNode(value)) value = value.clone(schema);
    return new Pair(key, value);
  }
  toJSON(_, ctx) {
    const pair = ctx?.mapAsMap ? new Map() : {};
    return addPairToJSMap.addPairToJSMap(ctx, pair, this);
  }
  toString(ctx, onComment, onChompKeep) {
    return ctx?.doc ? stringifyPair.stringifyPair(this, ctx, onComment, onChompKeep) : JSON.stringify(this);
  }
}
exports.Pair = Pair;
exports.createPair = createPair;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjcmVhdGVOb2RlIiwicmVxdWlyZSIsInN0cmluZ2lmeVBhaXIiLCJhZGRQYWlyVG9KU01hcCIsIk5vZGUiLCJjcmVhdGVQYWlyIiwia2V5IiwidmFsdWUiLCJjdHgiLCJrIiwidW5kZWZpbmVkIiwidiIsIlBhaXIiLCJjb25zdHJ1Y3RvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiTk9ERV9UWVBFIiwiUEFJUiIsImNsb25lIiwic2NoZW1hIiwiaXNOb2RlIiwidG9KU09OIiwiXyIsInBhaXIiLCJtYXBBc01hcCIsIk1hcCIsInRvU3RyaW5nIiwib25Db21tZW50Iiwib25DaG9tcEtlZXAiLCJkb2MiLCJKU09OIiwic3RyaW5naWZ5IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlBhaXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY3JlYXRlTm9kZSA9IHJlcXVpcmUoJy4uL2RvYy9jcmVhdGVOb2RlLmpzJyk7XG52YXIgc3RyaW5naWZ5UGFpciA9IHJlcXVpcmUoJy4uL3N0cmluZ2lmeS9zdHJpbmdpZnlQYWlyLmpzJyk7XG52YXIgYWRkUGFpclRvSlNNYXAgPSByZXF1aXJlKCcuL2FkZFBhaXJUb0pTTWFwLmpzJyk7XG52YXIgTm9kZSA9IHJlcXVpcmUoJy4vTm9kZS5qcycpO1xuXG5mdW5jdGlvbiBjcmVhdGVQYWlyKGtleSwgdmFsdWUsIGN0eCkge1xuICAgIGNvbnN0IGsgPSBjcmVhdGVOb2RlLmNyZWF0ZU5vZGUoa2V5LCB1bmRlZmluZWQsIGN0eCk7XG4gICAgY29uc3QgdiA9IGNyZWF0ZU5vZGUuY3JlYXRlTm9kZSh2YWx1ZSwgdW5kZWZpbmVkLCBjdHgpO1xuICAgIHJldHVybiBuZXcgUGFpcihrLCB2KTtcbn1cbmNsYXNzIFBhaXIge1xuICAgIGNvbnN0cnVjdG9yKGtleSwgdmFsdWUgPSBudWxsKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBOb2RlLk5PREVfVFlQRSwgeyB2YWx1ZTogTm9kZS5QQUlSIH0pO1xuICAgICAgICB0aGlzLmtleSA9IGtleTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgICBjbG9uZShzY2hlbWEpIHtcbiAgICAgICAgbGV0IHsga2V5LCB2YWx1ZSB9ID0gdGhpcztcbiAgICAgICAgaWYgKE5vZGUuaXNOb2RlKGtleSkpXG4gICAgICAgICAgICBrZXkgPSBrZXkuY2xvbmUoc2NoZW1hKTtcbiAgICAgICAgaWYgKE5vZGUuaXNOb2RlKHZhbHVlKSlcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUuY2xvbmUoc2NoZW1hKTtcbiAgICAgICAgcmV0dXJuIG5ldyBQYWlyKGtleSwgdmFsdWUpO1xuICAgIH1cbiAgICB0b0pTT04oXywgY3R4KSB7XG4gICAgICAgIGNvbnN0IHBhaXIgPSBjdHg/Lm1hcEFzTWFwID8gbmV3IE1hcCgpIDoge307XG4gICAgICAgIHJldHVybiBhZGRQYWlyVG9KU01hcC5hZGRQYWlyVG9KU01hcChjdHgsIHBhaXIsIHRoaXMpO1xuICAgIH1cbiAgICB0b1N0cmluZyhjdHgsIG9uQ29tbWVudCwgb25DaG9tcEtlZXApIHtcbiAgICAgICAgcmV0dXJuIGN0eD8uZG9jXG4gICAgICAgICAgICA/IHN0cmluZ2lmeVBhaXIuc3RyaW5naWZ5UGFpcih0aGlzLCBjdHgsIG9uQ29tbWVudCwgb25DaG9tcEtlZXApXG4gICAgICAgICAgICA6IEpTT04uc3RyaW5naWZ5KHRoaXMpO1xuICAgIH1cbn1cblxuZXhwb3J0cy5QYWlyID0gUGFpcjtcbmV4cG9ydHMuY3JlYXRlUGFpciA9IGNyZWF0ZVBhaXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVosSUFBSUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsc0JBQXNCLENBQUM7QUFDaEQsSUFBSUMsYUFBYSxHQUFHRCxPQUFPLENBQUMsK0JBQStCLENBQUM7QUFDNUQsSUFBSUUsY0FBYyxHQUFHRixPQUFPLENBQUMscUJBQXFCLENBQUM7QUFDbkQsSUFBSUcsSUFBSSxHQUFHSCxPQUFPLENBQUMsV0FBVyxDQUFDO0FBRS9CLFNBQVNJLFVBQVVBLENBQUNDLEdBQUcsRUFBRUMsS0FBSyxFQUFFQyxHQUFHLEVBQUU7RUFDakMsTUFBTUMsQ0FBQyxHQUFHVCxVQUFVLENBQUNBLFVBQVUsQ0FBQ00sR0FBRyxFQUFFSSxTQUFTLEVBQUVGLEdBQUcsQ0FBQztFQUNwRCxNQUFNRyxDQUFDLEdBQUdYLFVBQVUsQ0FBQ0EsVUFBVSxDQUFDTyxLQUFLLEVBQUVHLFNBQVMsRUFBRUYsR0FBRyxDQUFDO0VBQ3RELE9BQU8sSUFBSUksSUFBSSxDQUFDSCxDQUFDLEVBQUVFLENBQUMsQ0FBQztBQUN6QjtBQUNBLE1BQU1DLElBQUksQ0FBQztFQUNQQyxXQUFXQSxDQUFDUCxHQUFHLEVBQUVDLEtBQUssR0FBRyxJQUFJLEVBQUU7SUFDM0JPLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDLElBQUksRUFBRVgsSUFBSSxDQUFDWSxTQUFTLEVBQUU7TUFBRVQsS0FBSyxFQUFFSCxJQUFJLENBQUNhO0lBQUssQ0FBQyxDQUFDO0lBQ2pFLElBQUksQ0FBQ1gsR0FBRyxHQUFHQSxHQUFHO0lBQ2QsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUs7RUFDdEI7RUFDQVcsS0FBS0EsQ0FBQ0MsTUFBTSxFQUFFO0lBQ1YsSUFBSTtNQUFFYixHQUFHO01BQUVDO0lBQU0sQ0FBQyxHQUFHLElBQUk7SUFDekIsSUFBSUgsSUFBSSxDQUFDZ0IsTUFBTSxDQUFDZCxHQUFHLENBQUMsRUFDaEJBLEdBQUcsR0FBR0EsR0FBRyxDQUFDWSxLQUFLLENBQUNDLE1BQU0sQ0FBQztJQUMzQixJQUFJZixJQUFJLENBQUNnQixNQUFNLENBQUNiLEtBQUssQ0FBQyxFQUNsQkEsS0FBSyxHQUFHQSxLQUFLLENBQUNXLEtBQUssQ0FBQ0MsTUFBTSxDQUFDO0lBQy9CLE9BQU8sSUFBSVAsSUFBSSxDQUFDTixHQUFHLEVBQUVDLEtBQUssQ0FBQztFQUMvQjtFQUNBYyxNQUFNQSxDQUFDQyxDQUFDLEVBQUVkLEdBQUcsRUFBRTtJQUNYLE1BQU1lLElBQUksR0FBR2YsR0FBRyxFQUFFZ0IsUUFBUSxHQUFHLElBQUlDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUMzQyxPQUFPdEIsY0FBYyxDQUFDQSxjQUFjLENBQUNLLEdBQUcsRUFBRWUsSUFBSSxFQUFFLElBQUksQ0FBQztFQUN6RDtFQUNBRyxRQUFRQSxDQUFDbEIsR0FBRyxFQUFFbUIsU0FBUyxFQUFFQyxXQUFXLEVBQUU7SUFDbEMsT0FBT3BCLEdBQUcsRUFBRXFCLEdBQUcsR0FDVDNCLGFBQWEsQ0FBQ0EsYUFBYSxDQUFDLElBQUksRUFBRU0sR0FBRyxFQUFFbUIsU0FBUyxFQUFFQyxXQUFXLENBQUMsR0FDOURFLElBQUksQ0FBQ0MsU0FBUyxDQUFDLElBQUksQ0FBQztFQUM5QjtBQUNKO0FBRUFDLE9BQU8sQ0FBQ3BCLElBQUksR0FBR0EsSUFBSTtBQUNuQm9CLE9BQU8sQ0FBQzNCLFVBQVUsR0FBR0EsVUFBVSJ9