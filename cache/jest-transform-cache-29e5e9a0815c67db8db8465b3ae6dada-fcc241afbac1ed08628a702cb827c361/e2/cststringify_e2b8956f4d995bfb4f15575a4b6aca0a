73d11803af2155a7b51e5dda5e649074
'use strict';

/**
 * Stringify a CST document, token, or collection item
 *
 * Fair warning: This applies no validation whatsoever, and
 * simply concatenates the sources in their logical order.
 */
const stringify = cst => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);
function stringifyToken(token) {
  switch (token.type) {
    case 'block-scalar':
      {
        let res = '';
        for (const tok of token.props) res += stringifyToken(tok);
        return res + token.source;
      }
    case 'block-map':
    case 'block-seq':
      {
        let res = '';
        for (const item of token.items) res += stringifyItem(item);
        return res;
      }
    case 'flow-collection':
      {
        let res = token.start.source;
        for (const item of token.items) res += stringifyItem(item);
        for (const st of token.end) res += st.source;
        return res;
      }
    case 'document':
      {
        let res = stringifyItem(token);
        if (token.end) for (const st of token.end) res += st.source;
        return res;
      }
    default:
      {
        let res = token.source;
        if ('end' in token && token.end) for (const st of token.end) res += st.source;
        return res;
      }
  }
}
function stringifyItem({
  start,
  key,
  sep,
  value
}) {
  let res = '';
  for (const st of start) res += st.source;
  if (key) res += stringifyToken(key);
  if (sep) for (const st of sep) res += st.source;
  if (value) res += stringifyToken(value);
  return res;
}
exports.stringify = stringify;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzdHJpbmdpZnkiLCJjc3QiLCJzdHJpbmdpZnlUb2tlbiIsInN0cmluZ2lmeUl0ZW0iLCJ0b2tlbiIsInR5cGUiLCJyZXMiLCJ0b2siLCJwcm9wcyIsInNvdXJjZSIsIml0ZW0iLCJpdGVtcyIsInN0YXJ0Iiwic3QiLCJlbmQiLCJrZXkiLCJzZXAiLCJ2YWx1ZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJjc3Qtc3RyaW5naWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTdHJpbmdpZnkgYSBDU1QgZG9jdW1lbnQsIHRva2VuLCBvciBjb2xsZWN0aW9uIGl0ZW1cbiAqXG4gKiBGYWlyIHdhcm5pbmc6IFRoaXMgYXBwbGllcyBubyB2YWxpZGF0aW9uIHdoYXRzb2V2ZXIsIGFuZFxuICogc2ltcGx5IGNvbmNhdGVuYXRlcyB0aGUgc291cmNlcyBpbiB0aGVpciBsb2dpY2FsIG9yZGVyLlxuICovXG5jb25zdCBzdHJpbmdpZnkgPSAoY3N0KSA9PiAndHlwZScgaW4gY3N0ID8gc3RyaW5naWZ5VG9rZW4oY3N0KSA6IHN0cmluZ2lmeUl0ZW0oY3N0KTtcbmZ1bmN0aW9uIHN0cmluZ2lmeVRva2VuKHRva2VuKSB7XG4gICAgc3dpdGNoICh0b2tlbi50eXBlKSB7XG4gICAgICAgIGNhc2UgJ2Jsb2NrLXNjYWxhcic6IHtcbiAgICAgICAgICAgIGxldCByZXMgPSAnJztcbiAgICAgICAgICAgIGZvciAoY29uc3QgdG9rIG9mIHRva2VuLnByb3BzKVxuICAgICAgICAgICAgICAgIHJlcyArPSBzdHJpbmdpZnlUb2tlbih0b2spO1xuICAgICAgICAgICAgcmV0dXJuIHJlcyArIHRva2VuLnNvdXJjZTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdibG9jay1tYXAnOlxuICAgICAgICBjYXNlICdibG9jay1zZXEnOiB7XG4gICAgICAgICAgICBsZXQgcmVzID0gJyc7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdG9rZW4uaXRlbXMpXG4gICAgICAgICAgICAgICAgcmVzICs9IHN0cmluZ2lmeUl0ZW0oaXRlbSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ2Zsb3ctY29sbGVjdGlvbic6IHtcbiAgICAgICAgICAgIGxldCByZXMgPSB0b2tlbi5zdGFydC5zb3VyY2U7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdG9rZW4uaXRlbXMpXG4gICAgICAgICAgICAgICAgcmVzICs9IHN0cmluZ2lmeUl0ZW0oaXRlbSk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHN0IG9mIHRva2VuLmVuZClcbiAgICAgICAgICAgICAgICByZXMgKz0gc3Quc291cmNlO1xuICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdkb2N1bWVudCc6IHtcbiAgICAgICAgICAgIGxldCByZXMgPSBzdHJpbmdpZnlJdGVtKHRva2VuKTtcbiAgICAgICAgICAgIGlmICh0b2tlbi5lbmQpXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBzdCBvZiB0b2tlbi5lbmQpXG4gICAgICAgICAgICAgICAgICAgIHJlcyArPSBzdC5zb3VyY2U7XG4gICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIGxldCByZXMgPSB0b2tlbi5zb3VyY2U7XG4gICAgICAgICAgICBpZiAoJ2VuZCcgaW4gdG9rZW4gJiYgdG9rZW4uZW5kKVxuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc3Qgb2YgdG9rZW4uZW5kKVxuICAgICAgICAgICAgICAgICAgICByZXMgKz0gc3Quc291cmNlO1xuICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeUl0ZW0oeyBzdGFydCwga2V5LCBzZXAsIHZhbHVlIH0pIHtcbiAgICBsZXQgcmVzID0gJyc7XG4gICAgZm9yIChjb25zdCBzdCBvZiBzdGFydClcbiAgICAgICAgcmVzICs9IHN0LnNvdXJjZTtcbiAgICBpZiAoa2V5KVxuICAgICAgICByZXMgKz0gc3RyaW5naWZ5VG9rZW4oa2V5KTtcbiAgICBpZiAoc2VwKVxuICAgICAgICBmb3IgKGNvbnN0IHN0IG9mIHNlcClcbiAgICAgICAgICAgIHJlcyArPSBzdC5zb3VyY2U7XG4gICAgaWYgKHZhbHVlKVxuICAgICAgICByZXMgKz0gc3RyaW5naWZ5VG9rZW4odmFsdWUpO1xuICAgIHJldHVybiByZXM7XG59XG5cbmV4cG9ydHMuc3RyaW5naWZ5ID0gc3RyaW5naWZ5O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLFNBQVMsR0FBSUMsR0FBRyxJQUFLLE1BQU0sSUFBSUEsR0FBRyxHQUFHQyxjQUFjLENBQUNELEdBQUcsQ0FBQyxHQUFHRSxhQUFhLENBQUNGLEdBQUcsQ0FBQztBQUNuRixTQUFTQyxjQUFjQSxDQUFDRSxLQUFLLEVBQUU7RUFDM0IsUUFBUUEsS0FBSyxDQUFDQyxJQUFJO0lBQ2QsS0FBSyxjQUFjO01BQUU7UUFDakIsSUFBSUMsR0FBRyxHQUFHLEVBQUU7UUFDWixLQUFLLE1BQU1DLEdBQUcsSUFBSUgsS0FBSyxDQUFDSSxLQUFLLEVBQ3pCRixHQUFHLElBQUlKLGNBQWMsQ0FBQ0ssR0FBRyxDQUFDO1FBQzlCLE9BQU9ELEdBQUcsR0FBR0YsS0FBSyxDQUFDSyxNQUFNO01BQzdCO0lBQ0EsS0FBSyxXQUFXO0lBQ2hCLEtBQUssV0FBVztNQUFFO1FBQ2QsSUFBSUgsR0FBRyxHQUFHLEVBQUU7UUFDWixLQUFLLE1BQU1JLElBQUksSUFBSU4sS0FBSyxDQUFDTyxLQUFLLEVBQzFCTCxHQUFHLElBQUlILGFBQWEsQ0FBQ08sSUFBSSxDQUFDO1FBQzlCLE9BQU9KLEdBQUc7TUFDZDtJQUNBLEtBQUssaUJBQWlCO01BQUU7UUFDcEIsSUFBSUEsR0FBRyxHQUFHRixLQUFLLENBQUNRLEtBQUssQ0FBQ0gsTUFBTTtRQUM1QixLQUFLLE1BQU1DLElBQUksSUFBSU4sS0FBSyxDQUFDTyxLQUFLLEVBQzFCTCxHQUFHLElBQUlILGFBQWEsQ0FBQ08sSUFBSSxDQUFDO1FBQzlCLEtBQUssTUFBTUcsRUFBRSxJQUFJVCxLQUFLLENBQUNVLEdBQUcsRUFDdEJSLEdBQUcsSUFBSU8sRUFBRSxDQUFDSixNQUFNO1FBQ3BCLE9BQU9ILEdBQUc7TUFDZDtJQUNBLEtBQUssVUFBVTtNQUFFO1FBQ2IsSUFBSUEsR0FBRyxHQUFHSCxhQUFhLENBQUNDLEtBQUssQ0FBQztRQUM5QixJQUFJQSxLQUFLLENBQUNVLEdBQUcsRUFDVCxLQUFLLE1BQU1ELEVBQUUsSUFBSVQsS0FBSyxDQUFDVSxHQUFHLEVBQ3RCUixHQUFHLElBQUlPLEVBQUUsQ0FBQ0osTUFBTTtRQUN4QixPQUFPSCxHQUFHO01BQ2Q7SUFDQTtNQUFTO1FBQ0wsSUFBSUEsR0FBRyxHQUFHRixLQUFLLENBQUNLLE1BQU07UUFDdEIsSUFBSSxLQUFLLElBQUlMLEtBQUssSUFBSUEsS0FBSyxDQUFDVSxHQUFHLEVBQzNCLEtBQUssTUFBTUQsRUFBRSxJQUFJVCxLQUFLLENBQUNVLEdBQUcsRUFDdEJSLEdBQUcsSUFBSU8sRUFBRSxDQUFDSixNQUFNO1FBQ3hCLE9BQU9ILEdBQUc7TUFDZDtFQUFDO0FBRVQ7QUFDQSxTQUFTSCxhQUFhQSxDQUFDO0VBQUVTLEtBQUs7RUFBRUcsR0FBRztFQUFFQyxHQUFHO0VBQUVDO0FBQU0sQ0FBQyxFQUFFO0VBQy9DLElBQUlYLEdBQUcsR0FBRyxFQUFFO0VBQ1osS0FBSyxNQUFNTyxFQUFFLElBQUlELEtBQUssRUFDbEJOLEdBQUcsSUFBSU8sRUFBRSxDQUFDSixNQUFNO0VBQ3BCLElBQUlNLEdBQUcsRUFDSFQsR0FBRyxJQUFJSixjQUFjLENBQUNhLEdBQUcsQ0FBQztFQUM5QixJQUFJQyxHQUFHLEVBQ0gsS0FBSyxNQUFNSCxFQUFFLElBQUlHLEdBQUcsRUFDaEJWLEdBQUcsSUFBSU8sRUFBRSxDQUFDSixNQUFNO0VBQ3hCLElBQUlRLEtBQUssRUFDTFgsR0FBRyxJQUFJSixjQUFjLENBQUNlLEtBQUssQ0FBQztFQUNoQyxPQUFPWCxHQUFHO0FBQ2Q7QUFFQVksT0FBTyxDQUFDbEIsU0FBUyxHQUFHQSxTQUFTIn0=