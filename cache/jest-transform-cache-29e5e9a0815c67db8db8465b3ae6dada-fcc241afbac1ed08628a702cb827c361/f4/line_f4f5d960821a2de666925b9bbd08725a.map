{"version":3,"names":["_base","_interopRequireDefault","require","_params","lineDiff","default","tokenize","value","retLines","linesAndNewlines","split","length","pop","i","line","options","newlineIsToken","ignoreWhitespace","trim","push","diffLines","oldStr","newStr","callback","diff","diffTrimmedLines","generateOptions"],"sources":["../../src/diff/line.js"],"sourcesContent":["import Diff from './base';\nimport {generateOptions} from '../util/params';\n\nexport const lineDiff = new Diff();\nlineDiff.tokenize = function(value) {\n  let retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (let i = 0; i < linesAndNewlines.length; i++) {\n    let line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nexport function diffLines(oldStr, newStr, callback) { return lineDiff.diff(oldStr, newStr, callback); }\nexport function diffTrimmedLines(oldStr, newStr, callback) {\n  let options = generateOptions(callback, {ignoreWhitespace: true});\n  return lineDiff.diff(oldStr, newStr, options);\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAA;;AACA;AAAAC,OAAA,GAAAD,OAAA;AAAA;;;;;;;;;;AAEO,IAAME,QAAQ,GAAG,IAAI;AAAAJ;AAAA;AAAAK;AAAJ,yBAAjB;;;;;;AACPD,QAAQ,CAACE,QAAT,GAAoB,UAASC,KAAT,EAAgB;EAClC,IAAIC,QAAQ,GAAG,EAAf;IACIC,gBAAgB,GAAGF,KAAK,CAACG,KAAN,CAAY,WAAZ,CADvB,CADkC,CAIlC;;EACA,IAAI,CAACD,gBAAgB,CAACA,gBAAgB,CAACE,MAAjB,GAA0B,CAA3B,CAArB,EAAoD;IAClDF,gBAAgB,CAACG,GAAjB;EACD,CAPiC,CASlC;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,gBAAgB,CAACE,MAArC,EAA6CE,CAAC,EAA9C,EAAkD;IAChD,IAAIC,IAAI,GAAGL,gBAAgB,CAACI,CAAD,CAA3B;IAEA,IAAIA,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAKE,OAAL,CAAaC,cAA3B,EAA2C;MACzCR,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,IAAiCG,IAAjC;IACD,CAFD,MAEO;MACL,IAAI,KAAKC,OAAL,CAAaE,gBAAjB,EAAmC;QACjCH,IAAI,GAAGA,IAAI,CAACI,IAAL,EAAP;MACD;MACDV,QAAQ,CAACW,IAAT,CAAcL,IAAd;IACD;EACF;EAED,OAAON,QAAP;AACD,CAxBD;AA0BO,SAASY,SAATA,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;EAAE,OAAOnB,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BC,QAA9B,CAAP;AAAiD;AAChG,SAASE,gBAATA,CAA0BJ,MAA1B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;EACzD,IAAIR,OAAO,GAAG;EAAA;;EAAA;EAAAZ;EAAA;EAAAuB;EAAA,yBAAgBH,QAAhB,EAA0B;IAACN,gBAAgB,EAAE;EAAnB,CAA1B,CAAd;EACA,OAAOb,QAAQ,CAACoB,IAAT,CAAcH,MAAd,EAAsBC,MAAtB,EAA8BP,OAA9B,CAAP;AACD"}