1658b6b1522aafcc3413a290b114d26e
"use strict";

var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _PaymentScreen = _interopRequireDefault(require("./../../PaymentScreen"));
require("@testing-library/jest-dom/extend-expect");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _jestCucumber = require("jest-cucumber");
var _reactRouterDom = require("react-router-dom");
var _parkingSlice = _interopRequireDefault(require("../../redux/reducer/parkingSlice"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
let store;
const feature = (0, _jestCucumber.loadFeature)("src/components/features/paymentscreen.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User pays for occupied parking spot", ({
    given,
    then,
    when,
    and
  }) => {
    _getJestObj().mock("react-router-dom", () => ({
      ...jest.requireActual("react-router-dom"),
      useLocation: jest.fn()
    }));
    const spaceDetails = {
      registration: "ABC",
      parkingTime: "14:00"
    };
    const space = "1";
    const mockLocation = {
      state: {
        spaceDetails,
        space
      }
    };
    given("I am on the Payment Screen", () => {
      store = (0, _toolkit.configureStore)({
        reducer: {
          parkingSpaces: _parkingSlice.default
        }
      });
      const state = {
        spaceDetails: {
          registration: "ABC123",
          parkingTime: "08:30"
        },
        space: 1
      };
      jest.spyOn(require("react-router-dom"), "useLocation").mockReturnValue(mockLocation);
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, {
        initialEntries: ["/payment"]
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
        path: "/payment",
        element: /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null)
      })))));
    });
    and("I see the vehicle registration and hours parked for the occupied parking spot", async () => {
      store = (0, _toolkit.configureStore)({
        reducer: {
          parkingSpaces: _parkingSlice.default
        }
      });
      const state = {
        spaceDetails: {
          registration: "ABC123",
          parkingTime: "08:30"
        },
        space: 1
      };
      jest.spyOn(require("react-router-dom"), "useLocation").mockReturnValue(mockLocation);
      (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null));
      expect(await _react2.screen.findByTestId("reg")).toHaveTextContent("Vehicle Registration: ABC123");
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfUGF5bWVudFNjcmVlbiIsIl9yZWFjdFJlZHV4IiwiX3Rvb2xraXQiLCJfamVzdEN1Y3VtYmVyIiwiX3JlYWN0Um91dGVyRG9tIiwiX3BhcmtpbmdTbGljZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2dldEplc3RPYmoiLCJqZXN0Iiwic3RvcmUiLCJmZWF0dXJlIiwibG9hZEZlYXR1cmUiLCJkZWZpbmVGZWF0dXJlIiwidGVzdCIsImdpdmVuIiwidGhlbiIsIndoZW4iLCJhbmQiLCJtb2NrIiwicmVxdWlyZUFjdHVhbCIsInVzZUxvY2F0aW9uIiwiZm4iLCJzcGFjZURldGFpbHMiLCJyZWdpc3RyYXRpb24iLCJwYXJraW5nVGltZSIsInNwYWNlIiwibW9ja0xvY2F0aW9uIiwic3RhdGUiLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJwYXJraW5nU3BhY2VzIiwicGFya2luZ1NsaWNlIiwic3B5T24iLCJtb2NrUmV0dXJuVmFsdWUiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJNZW1vcnlSb3V0ZXIiLCJpbml0aWFsRW50cmllcyIsIlJvdXRlcyIsIlJvdXRlIiwicGF0aCIsImVsZW1lbnQiLCJleHBlY3QiLCJzY3JlZW4iLCJmaW5kQnlUZXN0SWQiLCJ0b0hhdmVUZXh0Q29udGVudCJdLCJzb3VyY2VzIjpbInBheW1lbnRzY3JlZW4uc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgc2NyZWVuLCByZW5kZXIsIGZpcmVFdmVudCB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcbmltcG9ydCBQYXltZW50U2NyZWVuIGZyb20gXCIuLy4uLy4uL1BheW1lbnRTY3JlZW5cIjtcclxuaW1wb3J0IFwiQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbS9leHRlbmQtZXhwZWN0XCI7XHJcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQge1xyXG4gIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxyXG4gIFJvdXRlcyxcclxuICBSb3V0ZSxcclxuICBNZW1vcnlSb3V0ZXIsXHJcbiAgdXNlTG9jYXRpb24sXHJcbn0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IHBhcmtpbmdTbGljZSBmcm9tIFwiLi4vLi4vcmVkdXgvcmVkdWNlci9wYXJraW5nU2xpY2VcIjtcclxubGV0IHN0b3JlOiBhbnk7XHJcbmNvbnN0IGZlYXR1cmUgPSBsb2FkRmVhdHVyZShcInNyYy9jb21wb25lbnRzL2ZlYXR1cmVzL3BheW1lbnRzY3JlZW4uZmVhdHVyZVwiKTtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIHRlc3QoXCJVc2VyIHBheXMgZm9yIG9jY3VwaWVkIHBhcmtpbmcgc3BvdFwiLCAoeyBnaXZlbiwgdGhlbiwgd2hlbiwgYW5kIH0pID0+IHtcclxuICAgIGplc3QubW9jayhcInJlYWN0LXJvdXRlci1kb21cIiwgKCkgPT4gKHtcclxuICAgICAgLi4uamVzdC5yZXF1aXJlQWN0dWFsKFwicmVhY3Qtcm91dGVyLWRvbVwiKSxcclxuICAgICAgdXNlTG9jYXRpb246IGplc3QuZm4oKSxcclxuICAgIH0pKTtcclxuICAgIGNvbnN0IHNwYWNlRGV0YWlscyA9IHtcclxuICAgICAgcmVnaXN0cmF0aW9uOiBcIkFCQ1wiLFxyXG4gICAgICBwYXJraW5nVGltZTogXCIxNDowMFwiLFxyXG4gICAgfTtcclxuICAgIGNvbnN0IHNwYWNlID0gXCIxXCI7XHJcbiAgICBjb25zdCBtb2NrTG9jYXRpb24gPSB7XHJcbiAgICAgIHN0YXRlOiB7XHJcbiAgICAgICAgc3BhY2VEZXRhaWxzLFxyXG4gICAgICAgIHNwYWNlLFxyXG4gICAgICB9LFxyXG4gICAgfTtcclxuICAgIGdpdmVuKFwiSSBhbSBvbiB0aGUgUGF5bWVudCBTY3JlZW5cIiwgKCkgPT4ge1xyXG4gICAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgICByZWR1Y2VyOiB7XHJcbiAgICAgICAgICBwYXJraW5nU3BhY2VzOiBwYXJraW5nU2xpY2UsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSk7XHJcbiAgICAgIGNvbnN0IHN0YXRlID0ge1xyXG4gICAgICAgIHNwYWNlRGV0YWlsczoge1xyXG4gICAgICAgICAgcmVnaXN0cmF0aW9uOiBcIkFCQzEyM1wiLFxyXG4gICAgICAgICAgcGFya2luZ1RpbWU6IFwiMDg6MzBcIixcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNwYWNlOiAxLFxyXG4gICAgICB9O1xyXG4gICAgICBqZXN0XHJcbiAgICAgICAgLnNweU9uKHJlcXVpcmUoXCJyZWFjdC1yb3V0ZXItZG9tXCIpLCBcInVzZUxvY2F0aW9uXCIpXHJcbiAgICAgICAgLm1vY2tSZXR1cm5WYWx1ZShtb2NrTG9jYXRpb24pO1xyXG4gICAgICByZW5kZXIoXHJcbiAgICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgICAgICA8TWVtb3J5Um91dGVyIGluaXRpYWxFbnRyaWVzPXtbXCIvcGF5bWVudFwiXX0+XHJcbiAgICAgICAgICAgIDxSb3V0ZXM+XHJcbiAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvcGF5bWVudFwiIGVsZW1lbnQ9ezxQYXltZW50U2NyZWVuIC8+fSAvPlxyXG4gICAgICAgICAgICA8L1JvdXRlcz5cclxuICAgICAgICAgIDwvTWVtb3J5Um91dGVyPlxyXG4gICAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBhbmQoXHJcbiAgICAgIFwiSSBzZWUgdGhlIHZlaGljbGUgcmVnaXN0cmF0aW9uIGFuZCBob3VycyBwYXJrZWQgZm9yIHRoZSBvY2N1cGllZCBwYXJraW5nIHNwb3RcIixcclxuICAgICAgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIHN0b3JlID0gY29uZmlndXJlU3RvcmUoe1xyXG4gICAgICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgICAgICBwYXJraW5nU3BhY2VzOiBwYXJraW5nU2xpY2UsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnN0IHN0YXRlID0ge1xyXG4gICAgICAgICAgc3BhY2VEZXRhaWxzOiB7XHJcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbjogXCJBQkMxMjNcIixcclxuICAgICAgICAgICAgcGFya2luZ1RpbWU6IFwiMDg6MzBcIixcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBzcGFjZTogMSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGplc3RcclxuICAgICAgICAgIC5zcHlPbihyZXF1aXJlKFwicmVhY3Qtcm91dGVyLWRvbVwiKSwgXCJ1c2VMb2NhdGlvblwiKVxyXG4gICAgICAgICAgLm1vY2tSZXR1cm5WYWx1ZShtb2NrTG9jYXRpb24pO1xyXG5cclxuICAgICAgICByZW5kZXIoPFBheW1lbnRTY3JlZW4gLz4pO1xyXG5cclxuICAgICAgICBleHBlY3QoYXdhaXQgc2NyZWVuLmZpbmRCeVRlc3RJZChcInJlZ1wiKSkudG9IYXZlVGV4dENvbnRlbnQoXHJcbiAgICAgICAgICBcIlZlaGljbGUgUmVnaXN0cmF0aW9uOiBBQkMxMjNcIlxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsT0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsY0FB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