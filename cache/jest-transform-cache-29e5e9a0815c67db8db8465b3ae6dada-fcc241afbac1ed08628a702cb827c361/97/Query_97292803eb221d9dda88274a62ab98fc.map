{"version":3,"names":["multimaps_1","require","Query","constructor","sources","sourceByUri","Map","gherkinDocuments","pickles","locationByAstNodeId","gherkinStepByAstNodeId","pickleIdsMapByUri","pickleIdsByAstNodeId","pickleStepIdsByAstNodeId","featureByUriLine","backgroundByUriLine","ruleByUriLine","scenarioByUriLine","examplesByUriLine","stepByUriLine","getLocation","astNodeId","get","getSources","getGherkinDocuments","getPickles","getSource","uri","getFeature","line","getAstNode","getBackground","getRule","getScenario","getExamples","getStep","getPickleIds","Error","undefined","Array","from","Set","values","getPickleStepIds","update","message","source","push","set","gherkinDocument","feature","updateGherkinFeature","pickle","updatePickle","setAstNode","ArrayMultimap","featureChild","children","background","updateGherkinBackground","scenario","updateGherkinScenario","rule","updateGherkinRule","step","steps","updateGherkinStep","ruleChild","id","location","examples","updateGherkinExamples","tableRow","tableBody","pickleIdsByLineNumber","astNodeIds","put","updatePickleSteps","has","pickleSteps","pickleStep","exports","default","map","astNode","uriLine","join"],"sources":["../../src/Query.ts"],"sourcesContent":["import * as messages from '@cucumber/messages'\nimport { ArrayMultimap } from '@teppeis/multimaps'\n\nexport default class Query {\n  private readonly sources: messages.Source[] = []\n  private readonly sourceByUri = new Map<string, messages.Source>()\n  private readonly gherkinDocuments: messages.GherkinDocument[] = []\n  private readonly pickles: messages.Pickle[] = []\n  private readonly locationByAstNodeId = new Map<string, messages.Location>()\n  private readonly gherkinStepByAstNodeId = new Map<string, messages.Step>()\n  private readonly pickleIdsMapByUri = new Map<string, ArrayMultimap<string, string>>()\n  private readonly pickleIdsByAstNodeId = new Map<string, string[]>()\n  private readonly pickleStepIdsByAstNodeId = new Map<string, string[]>()\n  // AST nodes\n  private readonly featureByUriLine = new Map<string, messages.Feature>()\n  private readonly backgroundByUriLine = new Map<string, messages.Background>()\n  private readonly ruleByUriLine = new Map<string, messages.Rule>()\n  private readonly scenarioByUriLine = new Map<string, messages.Scenario>()\n  private readonly examplesByUriLine = new Map<string, messages.Examples>()\n  private readonly stepByUriLine = new Map<string, messages.Step>()\n\n  /**\n   * Gets the location (line and column) of an AST node.\n   * @param astNodeId\n   */\n  public getLocation(astNodeId: string): messages.Location {\n    return this.locationByAstNodeId.get(astNodeId)\n  }\n\n  public getSources(): readonly messages.Source[] {\n    return this.sources\n  }\n\n  public getGherkinDocuments(): readonly messages.GherkinDocument[] {\n    return this.gherkinDocuments\n  }\n\n  public getPickles(): readonly messages.Pickle[] {\n    return this.pickles\n  }\n\n  public getSource(uri: string): messages.Source | undefined {\n    return this.sourceByUri.get(uri)\n  }\n\n  public getFeature(uri: string, line: number): messages.Feature | undefined {\n    return getAstNode(this.featureByUriLine, uri, line)\n  }\n\n  public getBackground(uri: string, line: number): messages.Background | undefined {\n    return getAstNode(this.backgroundByUriLine, uri, line)\n  }\n\n  public getRule(uri: string, line: number): messages.Rule | undefined {\n    return getAstNode(this.ruleByUriLine, uri, line)\n  }\n\n  public getScenario(uri: string, line: number): messages.Scenario | undefined {\n    return getAstNode(this.scenarioByUriLine, uri, line)\n  }\n\n  public getExamples(uri: string, line: number): messages.Examples | undefined {\n    return getAstNode(this.examplesByUriLine, uri, line)\n  }\n\n  public getStep(uri: string, line: number): messages.Step | undefined {\n    return getAstNode(this.stepByUriLine, uri, line)\n  }\n\n  /**\n   * Gets all the pickle IDs\n   * @param uri - the URI of the document\n   * @param astNodeId - optionally restrict results to a particular AST node\n   */\n  public getPickleIds(uri: string, astNodeId?: string): readonly string[] {\n    const pickleIdsByAstNodeId = this.pickleIdsMapByUri.get(uri)\n    if (!pickleIdsByAstNodeId) {\n      throw new Error(`No pickleIds for uri=${uri}`)\n    }\n    return astNodeId === undefined\n      ? Array.from(new Set(pickleIdsByAstNodeId.values()))\n      : pickleIdsByAstNodeId.get(astNodeId)\n  }\n\n  public getPickleStepIds(astNodeId: string): readonly string[] {\n    return this.pickleStepIdsByAstNodeId.get(astNodeId) || []\n  }\n\n  public update(message: messages.Envelope): Query {\n    if (message.source) {\n      this.sources.push(message.source)\n      this.sourceByUri.set(message.source.uri, message.source)\n    }\n\n    if (message.gherkinDocument) {\n      this.gherkinDocuments.push(message.gherkinDocument)\n\n      if (message.gherkinDocument.feature) {\n        this.updateGherkinFeature(message.gherkinDocument.uri, message.gherkinDocument.feature)\n      }\n    }\n\n    if (message.pickle) {\n      const pickle = message.pickle\n      this.updatePickle(pickle)\n    }\n\n    return this\n  }\n\n  private updateGherkinFeature(uri: string, feature: messages.Feature) {\n    setAstNode(this.featureByUriLine, uri, feature)\n    this.pickleIdsMapByUri.set(uri, new ArrayMultimap<string, string>())\n\n    for (const featureChild of feature.children) {\n      if (featureChild.background) {\n        this.updateGherkinBackground(uri, featureChild.background)\n      }\n\n      if (featureChild.scenario) {\n        this.updateGherkinScenario(uri, featureChild.scenario)\n      }\n\n      if (featureChild.rule) {\n        this.updateGherkinRule(uri, featureChild.rule)\n      }\n    }\n  }\n\n  private updateGherkinBackground(uri: string, background: messages.Background) {\n    setAstNode(this.backgroundByUriLine, uri, background)\n    for (const step of background.steps) {\n      this.updateGherkinStep(uri, step)\n    }\n  }\n\n  private updateGherkinRule(uri: string, rule: messages.Rule) {\n    setAstNode(this.ruleByUriLine, uri, rule)\n    for (const ruleChild of rule.children) {\n      if (ruleChild.background) {\n        this.updateGherkinBackground(uri, ruleChild.background)\n      }\n\n      if (ruleChild.scenario) {\n        this.updateGherkinScenario(uri, ruleChild.scenario)\n      }\n    }\n  }\n\n  private updateGherkinScenario(uri: string, scenario: messages.Scenario) {\n    setAstNode(this.scenarioByUriLine, uri, scenario)\n    this.locationByAstNodeId.set(scenario.id, scenario.location)\n    for (const step of scenario.steps) {\n      this.updateGherkinStep(uri, step)\n    }\n\n    for (const examples of scenario.examples) {\n      this.updateGherkinExamples(uri, examples)\n    }\n  }\n\n  private updateGherkinExamples(uri: string, examples: messages.Examples) {\n    setAstNode(this.examplesByUriLine, uri, examples)\n    for (const tableRow of examples.tableBody || []) {\n      this.locationByAstNodeId.set(tableRow.id, tableRow.location)\n    }\n  }\n\n  private updateGherkinStep(uri: string, step: messages.Step) {\n    setAstNode(this.stepByUriLine, uri, step)\n    this.locationByAstNodeId.set(step.id, step.location)\n    this.gherkinStepByAstNodeId.set(step.id, step)\n  }\n\n  private updatePickle(pickle: messages.Pickle) {\n    const pickleIdsByLineNumber = this.pickleIdsMapByUri.get(pickle.uri)\n\n    for (const astNodeId of pickle.astNodeIds) {\n      pickleIdsByLineNumber.put(astNodeId, pickle.id)\n    }\n    this.updatePickleSteps(pickle)\n    this.pickles.push(pickle)\n\n    for (const astNodeId of pickle.astNodeIds) {\n      if (!this.pickleIdsByAstNodeId.has(astNodeId)) {\n        this.pickleIdsByAstNodeId.set(astNodeId, [])\n      }\n      this.pickleIdsByAstNodeId.get(astNodeId).push(pickle.id)\n    }\n  }\n\n  private updatePickleSteps(pickle: messages.Pickle) {\n    const pickleSteps = pickle.steps\n    for (const pickleStep of pickleSteps) {\n      for (const astNodeId of pickleStep.astNodeIds) {\n        if (!this.pickleStepIdsByAstNodeId.has(astNodeId)) {\n          this.pickleStepIdsByAstNodeId.set(astNodeId, [])\n        }\n        this.pickleStepIdsByAstNodeId.get(astNodeId).push(pickleStep.id)\n      }\n    }\n  }\n}\n\ntype HasLocation = {\n  location: messages.Location\n}\n\nfunction setAstNode<AstNode extends HasLocation>(\n  map: Map<string, AstNode>,\n  uri: string,\n  astNode: AstNode\n) {\n  const line = astNode.location.line\n  const uriLine = [uri, line].join(':')\n  map.set(uriLine, astNode)\n}\n\nfunction getAstNode<AstNode>(\n  map: Map<string, AstNode>,\n  uri: string,\n  line: number\n): AstNode | undefined {\n  const uriLine = [uri, line].join(':')\n  return map.get(uriLine)\n}\n"],"mappings":"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"}