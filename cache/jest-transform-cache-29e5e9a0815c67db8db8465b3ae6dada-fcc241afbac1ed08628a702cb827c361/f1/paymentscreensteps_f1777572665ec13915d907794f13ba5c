c0fb804ea6193c8e9fa3ec7dfa874cfe
"use strict";

var _react = _interopRequireDefault(require("react"));
var _PaymentScreen = _interopRequireDefault(require("../../PaymentScreen"));
var _jestCucumber = require("jest-cucumber");
var _react2 = require("@testing-library/react");
require("text-encoding");
var _parkingSlice = _interopRequireDefault(require("../../redux/reducer/parkingSlice"));
require("@testing-library/jest-dom/extend-expect");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _reactRouterDom = require("react-router-dom");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/paymentscreen.feature");
let store;
let screen;
let occupiedSpaceId;
(0, _jestCucumber.defineFeature)(feature, test => {
  test("User pays for occupied parking spot", ({
    given,
    when,
    then,
    and
  }) => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        parkingSpaces: _parkingSlice.default
      }
    });
    const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, null, /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null))));
    const navigate = (0, _reactRouterDom.useNavigate)();
    given("I am on the Payment Screen", () => {
      expect(screen).toBeTruthy();
    });
    and("I see the vehicle registration and hours parked for the occupied parking spot", () => {
      store = (0, _toolkit.configureStore)({
        reducer: {
          parkingSpaces: _parkingSlice.default
        }
      });
      const screen = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
        store: store
      }, /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, {
        initialEntries: ["/paymentscreen"],
        initialIndex: 0
      }, /*#__PURE__*/_react.default.createElement(_PaymentScreen.default, null))));
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9QYXltZW50U2NyZWVuIiwiX2plc3RDdWN1bWJlciIsIl9yZWFjdDIiLCJfcGFya2luZ1NsaWNlIiwiX3JlYWN0UmVkdXgiLCJfdG9vbGtpdCIsIl9yZWFjdFJvdXRlckRvbSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwic3RvcmUiLCJzY3JlZW4iLCJvY2N1cGllZFNwYWNlSWQiLCJkZWZpbmVGZWF0dXJlIiwidGVzdCIsImdpdmVuIiwid2hlbiIsInRoZW4iLCJhbmQiLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJwYXJraW5nU3BhY2VzIiwicGFya2luZ1NsaWNlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsIlByb3ZpZGVyIiwiTWVtb3J5Um91dGVyIiwibmF2aWdhdGUiLCJ1c2VOYXZpZ2F0ZSIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJpbml0aWFsRW50cmllcyIsImluaXRpYWxJbmRleCJdLCJzb3VyY2VzIjpbInBheW1lbnRzY3JlZW4uc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFBhcmtpbmdTcGFjZSBmcm9tIFwiLi4vLi4vUGFya2luZ1NwYWNlXCI7XHJcbmltcG9ydCBQYXltZW50U2NyZWVuIGZyb20gXCIuLi8uLi9QYXltZW50U2NyZWVuXCI7XHJcbmltcG9ydCB7IGRlZmluZUZlYXR1cmUsIGxvYWRGZWF0dXJlIH0gZnJvbSBcImplc3QtY3VjdW1iZXJcIjtcclxuaW1wb3J0IHsgZmlyZUV2ZW50LCByZW5kZXIsIHdhaXRGb3IsIGFjdCB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcbmltcG9ydCBcInRleHQtZW5jb2RpbmdcIjtcclxuaW1wb3J0IHBhcmtpbmdTbGljZSwge1xyXG4gIGluaXRpYWxpemVQYXJraW5nTG90LFxyXG4gIGFkZFRvUGFya2luZ1NwYWNlLFxyXG4gIG9jY3VweVBhcmtpbmdMb3RzLFxyXG59IGZyb20gXCIuLi8uLi9yZWR1eC9yZWR1Y2VyL3BhcmtpbmdTbGljZVwiO1xyXG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQge1xyXG4gIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxyXG4gIFJvdXRlcyxcclxuICBSb3V0ZSxcclxuICBNZW1vcnlSb3V0ZXIsXHJcbiAgdXNlTmF2aWdhdGUsXHJcbn0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvcGF5bWVudHNjcmVlbi5mZWF0dXJlXCIpO1xyXG5sZXQgc3RvcmU6IGFueTtcclxubGV0IHNjcmVlbjogYW55O1xyXG5sZXQgb2NjdXBpZWRTcGFjZUlkOiBudW1iZXI7XHJcbmRlZmluZUZlYXR1cmUoZmVhdHVyZSwgKHRlc3QpID0+IHtcclxuICB0ZXN0KFwiVXNlciBwYXlzIGZvciBvY2N1cGllZCBwYXJraW5nIHNwb3RcIiwgKHsgZ2l2ZW4sIHdoZW4sIHRoZW4sIGFuZCB9KSA9PiB7XHJcbiAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgIHBhcmtpbmdTcGFjZXM6IHBhcmtpbmdTbGljZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgY29uc3Qgc2NyZWVuID0gcmVuZGVyKFxyXG4gICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgICAgICA8TWVtb3J5Um91dGVyPlxyXG4gICAgICAgICAgPFBheW1lbnRTY3JlZW4gLz5cclxuICAgICAgICA8L01lbW9yeVJvdXRlcj5cclxuICAgICAgPC9Qcm92aWRlcj5cclxuICAgICk7XHJcbiAgICBjb25zdCBuYXZpZ2F0ZSA9IHVzZU5hdmlnYXRlKCk7XHJcbiAgICBnaXZlbihcIkkgYW0gb24gdGhlIFBheW1lbnQgU2NyZWVuXCIsICgpID0+IHtcclxuICAgICAgZXhwZWN0KHNjcmVlbikudG9CZVRydXRoeSgpO1xyXG4gICAgfSk7XHJcbiAgICBhbmQoXHJcbiAgICAgIFwiSSBzZWUgdGhlIHZlaGljbGUgcmVnaXN0cmF0aW9uIGFuZCBob3VycyBwYXJrZWQgZm9yIHRoZSBvY2N1cGllZCBwYXJraW5nIHNwb3RcIixcclxuICAgICAgKCkgPT4ge1xyXG4gICAgICAgIHN0b3JlID0gY29uZmlndXJlU3RvcmUoe1xyXG4gICAgICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgICAgICBwYXJraW5nU3BhY2VzOiBwYXJraW5nU2xpY2UsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnN0IHNjcmVlbiA9IHJlbmRlcihcclxuICAgICAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICAgICAgICA8TWVtb3J5Um91dGVyIGluaXRpYWxFbnRyaWVzPXtbXCIvcGF5bWVudHNjcmVlblwiXX0gaW5pdGlhbEluZGV4PXswfT5cclxuICAgICAgICAgICAgICA8UGF5bWVudFNjcmVlbiAvPlxyXG4gICAgICAgICAgICA8L01lbW9yeVJvdXRlcj5cclxuICAgICAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFBQyxjQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBRSxhQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxPQUFBLEdBQUFILE9BQUE7QUFDQUEsT0FBQTtBQUNBLElBQUFJLGFBQUEsR0FBQUwsc0JBQUEsQ0FBQUMsT0FBQTtBQUtBQSxPQUFBO0FBQ0EsSUFBQUssV0FBQSxHQUFBTCxPQUFBO0FBQ0EsSUFBQU0sUUFBQSxHQUFBTixPQUFBO0FBQ0EsSUFBQU8sZUFBQSxHQUFBUCxPQUFBO0FBTTBCLFNBQUFELHVCQUFBUyxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBQzFCLE1BQU1HLE9BQU8sR0FBRyxJQUFBQyx5QkFBVyxFQUFDLCtDQUErQyxDQUFDO0FBQzVFLElBQUlDLEtBQVU7QUFDZCxJQUFJQyxNQUFXO0FBQ2YsSUFBSUMsZUFBdUI7QUFDM0IsSUFBQUMsMkJBQWEsRUFBQ0wsT0FBTyxFQUFHTSxJQUFJLElBQUs7RUFDL0JBLElBQUksQ0FBQyxxQ0FBcUMsRUFBRSxDQUFDO0lBQUVDLEtBQUs7SUFBRUMsSUFBSTtJQUFFQyxJQUFJO0lBQUVDO0VBQUksQ0FBQyxLQUFLO0lBQzFFUixLQUFLLEdBQUcsSUFBQVMsdUJBQWMsRUFBQztNQUNyQkMsT0FBTyxFQUFFO1FBQ1BDLGFBQWEsRUFBRUM7TUFDakI7SUFDRixDQUFDLENBQUM7SUFDRixNQUFNWCxNQUFNLEdBQUcsSUFBQVksY0FBTSxnQkFDbkI1QixNQUFBLENBQUFZLE9BQUEsQ0FBQWlCLGFBQUEsQ0FBQ3RCLFdBQUEsQ0FBQXVCLFFBQVE7TUFBQ2YsS0FBSyxFQUFFQTtJQUFNLGdCQUNyQmYsTUFBQSxDQUFBWSxPQUFBLENBQUFpQixhQUFBLENBQUNwQixlQUFBLENBQUFzQixZQUFZLHFCQUNYL0IsTUFBQSxDQUFBWSxPQUFBLENBQUFpQixhQUFBLENBQUMxQixjQUFBLENBQUFTLE9BQWEsT0FBRyxDQUNKLENBQ04sQ0FDWjtJQUNELE1BQU1vQixRQUFRLEdBQUcsSUFBQUMsMkJBQVcsR0FBRTtJQUM5QmIsS0FBSyxDQUFDLDRCQUE0QixFQUFFLE1BQU07TUFDeENjLE1BQU0sQ0FBQ2xCLE1BQU0sQ0FBQyxDQUFDbUIsVUFBVSxFQUFFO0lBQzdCLENBQUMsQ0FBQztJQUNGWixHQUFHLENBQ0QsK0VBQStFLEVBQy9FLE1BQU07TUFDSlIsS0FBSyxHQUFHLElBQUFTLHVCQUFjLEVBQUM7UUFDckJDLE9BQU8sRUFBRTtVQUNQQyxhQUFhLEVBQUVDO1FBQ2pCO01BQ0YsQ0FBQyxDQUFDO01BQ0YsTUFBTVgsTUFBTSxHQUFHLElBQUFZLGNBQU0sZ0JBQ25CNUIsTUFBQSxDQUFBWSxPQUFBLENBQUFpQixhQUFBLENBQUN0QixXQUFBLENBQUF1QixRQUFRO1FBQUNmLEtBQUssRUFBRUE7TUFBTSxnQkFDckJmLE1BQUEsQ0FBQVksT0FBQSxDQUFBaUIsYUFBQSxDQUFDcEIsZUFBQSxDQUFBc0IsWUFBWTtRQUFDSyxjQUFjLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBRTtRQUFDQyxZQUFZLEVBQUU7TUFBRSxnQkFDaEVyQyxNQUFBLENBQUFZLE9BQUEsQ0FBQWlCLGFBQUEsQ0FBQzFCLGNBQUEsQ0FBQVMsT0FBYSxPQUFHLENBQ0osQ0FDTixDQUNaO0lBQ0gsQ0FBQyxDQUNGO0VBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=