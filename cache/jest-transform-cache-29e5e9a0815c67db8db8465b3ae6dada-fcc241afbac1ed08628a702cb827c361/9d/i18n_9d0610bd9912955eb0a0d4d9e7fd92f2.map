{"version":3,"names":["gherkin_1","require","cli_table3_1","__importDefault","capital_case_1","keywords","getAsTable","header","rows","table","default","chars","bottom","left","mid","middle","right","top","style","border","push","toString","getLanguages","Object","keys","dialects","map","isoCode","name","native","exports","getKeywords","language","keyword","words","s","join","capitalCase"],"sources":["../../src/cli/i18n.ts"],"sourcesContent":["import { dialects } from '@cucumber/gherkin'\nimport Table from 'cli-table3'\nimport { capitalCase } from 'capital-case'\n\nconst keywords = [\n  'feature',\n  'rule',\n  'background',\n  'scenario',\n  'scenarioOutline',\n  'examples',\n  'given',\n  'when',\n  'then',\n  'and',\n  'but',\n] as const\n\nfunction getAsTable(header: string[], rows: string[][]): string {\n  const table = new Table({\n    chars: {\n      bottom: '',\n      'bottom-left': '',\n      'bottom-mid': '',\n      'bottom-right': '',\n      left: '',\n      'left-mid': '',\n      mid: '',\n      'mid-mid': '',\n      middle: ' | ',\n      right: '',\n      'right-mid': '',\n      top: '',\n      'top-left': '',\n      'top-mid': '',\n      'top-right': '',\n    },\n    style: {\n      border: [],\n      'padding-left': 0,\n      'padding-right': 0,\n    },\n  })\n  table.push(header)\n  table.push(...rows)\n  return table.toString()\n}\n\nexport function getLanguages(): string {\n  const rows = Object.keys(dialects).map((isoCode) => [\n    isoCode,\n    dialects[isoCode].name,\n    dialects[isoCode].native,\n  ])\n  return getAsTable(['ISO 639-1', 'ENGLISH NAME', 'NATIVE NAME'], rows)\n}\n\nexport function getKeywords(isoCode: string): string {\n  const language = dialects[isoCode]\n  const rows = keywords.map((keyword) => {\n    const words = language[keyword].map((s) => `\"${s}\"`).join(', ')\n    return [capitalCase(keyword), words]\n  })\n  return getAsTable(['ENGLISH KEYWORD', 'NATIVE KEYWORDS'], rows)\n}\n"],"mappings":";;;;;;;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,YAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,MAAAG,cAAA,GAAAH,OAAA;AAEA,MAAMI,QAAQ,GAAG,CACf,SAAS,EACT,MAAM,EACN,YAAY,EACZ,UAAU,EACV,iBAAiB,EACjB,UAAU,EACV,OAAO,EACP,MAAM,EACN,MAAM,EACN,KAAK,EACL,KAAK,CACG;AAEV,SAASC,UAAUA,CAACC,MAAgB,EAAEC,IAAgB;EACpD,MAAMC,KAAK,GAAG,IAAIP,YAAA,CAAAQ,OAAK,CAAC;IACtBC,KAAK,EAAE;MACLC,MAAM,EAAE,EAAE;MACV,aAAa,EAAE,EAAE;MACjB,YAAY,EAAE,EAAE;MAChB,cAAc,EAAE,EAAE;MAClBC,IAAI,EAAE,EAAE;MACR,UAAU,EAAE,EAAE;MACdC,GAAG,EAAE,EAAE;MACP,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,KAAK;MACbC,KAAK,EAAE,EAAE;MACT,WAAW,EAAE,EAAE;MACfC,GAAG,EAAE,EAAE;MACP,UAAU,EAAE,EAAE;MACd,SAAS,EAAE,EAAE;MACb,WAAW,EAAE;KACd;IACDC,KAAK,EAAE;MACLC,MAAM,EAAE,EAAE;MACV,cAAc,EAAE,CAAC;MACjB,eAAe,EAAE;;GAEpB,CAAC;EACFV,KAAK,CAACW,IAAI,CAACb,MAAM,CAAC;EAClBE,KAAK,CAACW,IAAI,CAAC,GAAGZ,IAAI,CAAC;EACnB,OAAOC,KAAK,CAACY,QAAQ,EAAE;AACzB;AAEA,SAAgBC,YAAYA,CAAA;EAC1B,MAAMd,IAAI,GAAGe,MAAM,CAACC,IAAI,CAACxB,SAAA,CAAAyB,QAAQ,CAAC,CAACC,GAAG,CAAEC,OAAO,IAAK,CAClDA,OAAO,EACP3B,SAAA,CAAAyB,QAAQ,CAACE,OAAO,CAAC,CAACC,IAAI,EACtB5B,SAAA,CAAAyB,QAAQ,CAACE,OAAO,CAAC,CAACE,MAAM,CACzB,CAAC;EACF,OAAOvB,UAAU,CAAC,CAAC,WAAW,EAAE,cAAc,EAAE,aAAa,CAAC,EAAEE,IAAI,CAAC;AACvE;AAPAsB,OAAA,CAAAR,YAAA,GAAAA,YAAA;AASA,SAAgBS,WAAWA,CAACJ,OAAe;EACzC,MAAMK,QAAQ,GAAGhC,SAAA,CAAAyB,QAAQ,CAACE,OAAO,CAAC;EAClC,MAAMnB,IAAI,GAAGH,QAAQ,CAACqB,GAAG,CAAEO,OAAO,IAAI;IACpC,MAAMC,KAAK,GAAGF,QAAQ,CAACC,OAAO,CAAC,CAACP,GAAG,CAAES,CAAC,IAAK,IAAIA,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC/D,OAAO,CAAC,IAAAhC,cAAA,CAAAiC,WAAW,EAACJ,OAAO,CAAC,EAAEC,KAAK,CAAC;EACtC,CAAC,CAAC;EACF,OAAO5B,UAAU,CAAC,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,EAAEE,IAAI,CAAC;AACjE;AAPAsB,OAAA,CAAAC,WAAA,GAAAA,WAAA"}