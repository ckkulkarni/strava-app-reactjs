{"version":3,"names":["plugin_1","require","publish_1","__importDefault","INTERNAL_PLUGINS","publish","default","initializePlugins","logger","configuration","environment","pluginManager","PluginManager","Object","values","init","exports"],"sources":["../../src/api/plugins.ts"],"sourcesContent":["import { Plugin, PluginManager } from '../plugin'\nimport publishPlugin from '../publish'\nimport { IRunEnvironment, IRunOptions } from './types'\nimport { ILogger } from '../logger'\n\nconst INTERNAL_PLUGINS: Record<string, Plugin> = {\n  publish: publishPlugin,\n}\n\nexport async function initializePlugins(\n  logger: ILogger,\n  configuration: IRunOptions,\n  environment: IRunEnvironment\n): Promise<PluginManager> {\n  // eventually we'll load plugin packages here\n  const pluginManager = new PluginManager(Object.values(INTERNAL_PLUGINS))\n  await pluginManager.init(logger, configuration, environment)\n  return pluginManager\n}\n"],"mappings":";;;;;;;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AACA,MAAAC,SAAA,GAAAC,eAAA,CAAAF,OAAA;AAIA,MAAMG,gBAAgB,GAA2B;EAC/CC,OAAO,EAAEH,SAAA,CAAAI;CACV;AAEM,eAAeC,iBAAiBA,CACrCC,MAAe,EACfC,aAA0B,EAC1BC,WAA4B;EAE5B;EACA,MAAMC,aAAa,GAAG,IAAIX,QAAA,CAAAY,aAAa,CAACC,MAAM,CAACC,MAAM,CAACV,gBAAgB,CAAC,CAAC;EACxE,MAAMO,aAAa,CAACI,IAAI,CAACP,MAAM,EAAEC,aAAa,EAAEC,WAAW,CAAC;EAC5D,OAAOC,aAAa;AACtB;AATAK,OAAA,CAAAT,iBAAA,GAAAA,iBAAA"}