{"version":3,"names":["_jestCucumber","require","_react","_Base","_interopRequireDefault","_react2","_parkingSlice","_interopRequireWildcard","_reactRedux","_toolkit","_reactRouterDom","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","feature","loadFeature","store","rendered","defineFeature","test","given","when","then","and","configureStore","reducer","parkingSpaces","parkingSlice","alertMock","jest","spyOn","window","mockImplementation","screen","render","createElement","Provider","BrowserRouter","expect","toBeTruthy","input","getAllByTestId","button","getAllByText","fireEvent","change","target","value","click","toHaveBeenCalledWith","initializeParkingLot","toBeCalled"],"sources":["base.steps.tsx"],"sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor } from \"@testing-library/react\";\r\nimport Base from \"../../Base\";\r\nimport React from \"react\";\r\nimport \"text-encoding\";\r\nimport parkingSlice, {\r\n  initializeParkingLot,\r\n} from \"../../redux/reducer/parkingSlice\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nconst feature = loadFeature(\"src/components/features/base.feature\");\r\nlet store: any;\r\nlet rendered: any;\r\ndefineFeature(feature, (test) => {\r\n  test(\"User enters the number of spaces\", ({ given, when, then, and }) => {\r\n    store = configureStore({\r\n      reducer: {\r\n        parkingSpaces: parkingSlice,\r\n      },\r\n    });\r\n    const alertMock = jest.spyOn(window, \"alert\").mockImplementation(() => {});\r\n    given(\"the user is on the home page\", () => {\r\n      const screen = render(\r\n        <Provider store={store}>\r\n          <Router>\r\n            <Base />\r\n          </Router>\r\n        </Provider>\r\n      );\r\n      expect(screen).toBeTruthy();\r\n    });\r\n    when(\"the user enters some input in the input field and submits\", () => {\r\n      const screen = render(\r\n        <Provider store={store}>\r\n          <Router>\r\n            <Base />\r\n          </Router>\r\n        </Provider>\r\n      );\r\n      const input = screen.getAllByTestId(\"input\");\r\n      const button = screen.getAllByText(\"Submit\");\r\n      fireEvent.change(input[0], { target: { value: 10 } });\r\n      fireEvent.click(button[0]);\r\n    });\r\n    then('an alert is displayed with \"10 Spaces selected\"', () => {\r\n      const screen = render(\r\n        <Provider store={store}>\r\n          <Router>\r\n            <Base />\r\n          </Router>\r\n        </Provider>\r\n      );\r\n      const input = screen.getAllByTestId(\"input\");\r\n      const button = screen.getAllByText(\"Submit\");\r\n      fireEvent.change(input[0], { target: { value: 10 } });\r\n      fireEvent.click(button[0]);\r\n      expect(alertMock).toHaveBeenCalledWith(\"10 Spaces selected\");\r\n    });\r\n    and(\"the parking lot should be initialized with 10 spaces\", () => {\r\n      const screen = render(\r\n        <Provider store={store}>\r\n          <Router>\r\n            <Base />\r\n          </Router>\r\n        </Provider>\r\n      );\r\n      const input = screen.getAllByTestId(\"input\");\r\n      const button = screen.getAllByText(\"Submit\");\r\n      fireEvent.change(input[0], { target: { value: 10 } });\r\n      fireEvent.click(button[0]);\r\n      expect(alertMock).toHaveBeenCalledWith(\"10 Spaces selected\");\r\n      expect(initializeParkingLot).toBeCalled();\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}