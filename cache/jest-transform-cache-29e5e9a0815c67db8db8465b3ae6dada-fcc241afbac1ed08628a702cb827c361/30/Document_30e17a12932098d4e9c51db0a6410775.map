{"version":3,"names":["Alias","require","Collection","Node","Pair","toJS","Schema","stringify","stringifyDocument","anchors","applyReviver","createNode","directives","Document","constructor","value","replacer","options","commentBefore","comment","errors","warnings","Object","defineProperty","NODE_TYPE","DOC","_replacer","Array","isArray","undefined","opt","assign","intAsBigInt","keepSourceTokens","logLevel","prettyErrors","strict","uniqueKeys","version","_directives","atDocument","yaml","explicit","Directives","setSchema","contents","clone","copy","create","prototype","slice","schema","isNode","range","add","assertCollection","addIn","path","createAlias","node","name","anchor","prev","anchorNames","has","findNewAnchor","call","keyToStr","v","String","Number","asStr","filter","map","length","concat","aliasDuplicateObjects","anchorPrefix","flow","keepUndefined","onTagObj","tag","onAnchor","setAnchors","sourceObjects","createNodeAnchors","ctx","isCollection","createPair","key","k","delete","deleteIn","isEmptyPath","get","keepScalar","getIn","isScalar","hasIn","set","collectionFromPath","setIn","from","merge","resolveKnownTags","sv","JSON","Error","json","jsonArg","mapAsMap","maxAliasCount","reviver","Map","doc","keep","mapKeyWarned","res","count","values","toJSON","toString","isInteger","indent","s","exports"],"sources":["Document.js"],"sourcesContent":["'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar Collection = require('../nodes/Collection.js');\nvar Node = require('../nodes/Node.js');\nvar Pair = require('../nodes/Pair.js');\nvar toJS = require('../nodes/toJS.js');\nvar Schema = require('../schema/Schema.js');\nvar stringify = require('../stringify/stringify.js');\nvar stringifyDocument = require('../stringify/stringifyDocument.js');\nvar anchors = require('./anchors.js');\nvar applyReviver = require('./applyReviver.js');\nvar createNode = require('./createNode.js');\nvar directives = require('./directives.js');\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, Node.NODE_TYPE, { value: Node.DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new directives.Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [Node.NODE_TYPE]: { value: Node.DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = Node.isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchors.anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? anchors.findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias.Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = anchors.createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode.createNode(value, tag, ctx);\n        if (flow && Node.isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair.Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (Collection.isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return Node.isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (Collection.isEmptyPath(path))\n            return !keepScalar && Node.isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return Node.isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return Node.isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (Collection.isEmptyPath(path))\n            return this.contents !== undefined;\n        return Node.isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = Collection.collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (Collection.isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = Collection.collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new directives.Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new directives.Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema.Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify: stringify.stringify\n        };\n        const res = toJS.toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver.applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument.stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (Node.isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexports.Document = Document;\n"],"mappings":"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"}