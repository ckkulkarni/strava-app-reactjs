{"version":3,"names":["NFA","require","NFAState","_require","EPSILON","char","c","inState","outState","accepting","addTransition","e","altPair","first","second","out","in","alt","_len","arguments","length","fragments","Array","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","fragment","value","err","return","orPair","or","_len2","_key2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","repExplicit","rep","plusRep","questionRep","module","exports"],"sources":["builders.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa');\nvar NFAState = require('./nfa-state');\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON;\n\n// -----------------------------------------------------------------------------\n// Char NFA fragment: `c`\n\n/**\n * Char factory.\n *\n * Creates an NFA fragment for a single char.\n *\n * [in] --c--> [out]\n */\n\n\nfunction char(c) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  return new NFA(inState.addTransition(c, outState), outState);\n}\n\n// -----------------------------------------------------------------------------\n// Epsilon NFA fragment\n\n/**\n * Epsilon factory.\n *\n * Creates an NFA fragment for ε (recognizes an empty string).\n *\n * [in] --ε--> [out]\n */\nfunction e() {\n  return char(EPSILON);\n}\n\n// -----------------------------------------------------------------------------\n// Alteration NFA fragment: `abc`\n\n/**\n * Creates a connection between two NFA fragments on epsilon transition.\n *\n * [in-a] --a--> [out-a] --ε--> [in-b] --b--> [out-b]\n */\nfunction altPair(first, second) {\n  first.out.accepting = false;\n  second.out.accepting = true;\n\n  first.out.addTransition(EPSILON, second.in);\n\n  return new NFA(first.in, second.out);\n}\n\n/**\n * Alteration factory.\n *\n * Creates a alteration NFA for (at least) two NFA-fragments.\n */\nfunction alt(first) {\n  for (var _len = arguments.length, fragments = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    fragments[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = fragments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var fragment = _step.value;\n\n      first = altPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Disjunction NFA fragment: `a|b`\n\n/**\n * Creates a disjunction choice between two fragments.\n */\nfunction orPair(first, second) {\n  var inState = new NFAState();\n  var outState = new NFAState();\n\n  inState.addTransition(EPSILON, first.in);\n  inState.addTransition(EPSILON, second.in);\n\n  outState.accepting = true;\n  first.out.accepting = false;\n  second.out.accepting = false;\n\n  first.out.addTransition(EPSILON, outState);\n  second.out.addTransition(EPSILON, outState);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Disjunction factory.\n *\n * Creates a disjunction NFA for (at least) two NFA-fragments.\n */\nfunction or(first) {\n  for (var _len2 = arguments.length, fragments = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    fragments[_key2 - 1] = arguments[_key2];\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = fragments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var fragment = _step2.value;\n\n      first = orPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Kleene-closure\n\n/**\n * Kleene star/closure.\n *\n * a*\n */\nfunction repExplicit(fragment) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  // 0 or more.\n  inState.addTransition(EPSILON, fragment.in);\n  inState.addTransition(EPSILON, outState);\n\n  fragment.out.accepting = false;\n  fragment.out.addTransition(EPSILON, outState);\n  outState.addTransition(EPSILON, fragment.in);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Optimized Kleene-star: just adds ε-transitions from\n * input to the output, and back.\n */\nfunction rep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized Plus: just adds ε-transitions from\n * the output to the input.\n */\nfunction plusRep(fragment) {\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized ? repetition: just adds ε-transitions from\n * the input to the output.\n */\nfunction questionRep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  return fragment;\n}\n\nmodule.exports = {\n  alt: alt,\n  char: char,\n  e: e,\n  or: or,\n  rep: rep,\n  repExplicit: repExplicit,\n  plusRep: plusRep,\n  questionRep: questionRep\n};"],"mappings":"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"}