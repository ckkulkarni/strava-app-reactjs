292725621eebaa78c94c2bba37ce8c2e
'use strict';

var GetIntrinsic = require('get-intrinsic');
var callBound = require('call-bind/callBound');
var $WeakSet = GetIntrinsic('%WeakSet%', true);
var $setHas = callBound('WeakSet.prototype.has', true);
if ($setHas) {
  var $mapHas = callBound('WeakMap.prototype.has', true);
  module.exports = function isWeakSet(x) {
    if (!x || typeof x !== 'object') {
      return false;
    }
    try {
      $setHas(x, $setHas);
      if ($mapHas) {
        try {
          $mapHas(x, $mapHas);
        } catch (e) {
          return true;
        }
      }
      return x instanceof $WeakSet; // core-js workaround, pre-v3
    } catch (e) {}
    return false;
  };
} else {
  // eslint-disable-next-line no-unused-vars
  module.exports = function isWeakSet(x) {
    // `WeakSet` does not exist, or does not have a `has` method
    return false;
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHZXRJbnRyaW5zaWMiLCJyZXF1aXJlIiwiY2FsbEJvdW5kIiwiJFdlYWtTZXQiLCIkc2V0SGFzIiwiJG1hcEhhcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJpc1dlYWtTZXQiLCJ4IiwiZSJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEdldEludHJpbnNpYyA9IHJlcXVpcmUoJ2dldC1pbnRyaW5zaWMnKTtcbnZhciBjYWxsQm91bmQgPSByZXF1aXJlKCdjYWxsLWJpbmQvY2FsbEJvdW5kJyk7XG5cbnZhciAkV2Vha1NldCA9IEdldEludHJpbnNpYygnJVdlYWtTZXQlJywgdHJ1ZSk7XG5cbnZhciAkc2V0SGFzID0gY2FsbEJvdW5kKCdXZWFrU2V0LnByb3RvdHlwZS5oYXMnLCB0cnVlKTtcblxuaWYgKCRzZXRIYXMpIHtcblx0dmFyICRtYXBIYXMgPSBjYWxsQm91bmQoJ1dlYWtNYXAucHJvdG90eXBlLmhhcycsIHRydWUpO1xuXG5cdG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNXZWFrU2V0KHgpIHtcblx0XHRpZiAoIXggfHwgdHlwZW9mIHggIT09ICdvYmplY3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHRyeSB7XG5cdFx0XHQkc2V0SGFzKHgsICRzZXRIYXMpO1xuXHRcdFx0aWYgKCRtYXBIYXMpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQkbWFwSGFzKHgsICRtYXBIYXMpO1xuXHRcdFx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB4IGluc3RhbmNlb2YgJFdlYWtTZXQ7IC8vIGNvcmUtanMgd29ya2Fyb3VuZCwgcHJlLXYzXG5cdFx0fSBjYXRjaCAoZSkge31cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH07XG59IGVsc2Uge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcblx0bW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc1dlYWtTZXQoeCkge1xuXHRcdC8vIGBXZWFrU2V0YCBkb2VzIG5vdCBleGlzdCwgb3IgZG9lcyBub3QgaGF2ZSBhIGBoYXNgIG1ldGhvZFxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDM0MsSUFBSUMsU0FBUyxHQUFHRCxPQUFPLENBQUMscUJBQXFCLENBQUM7QUFFOUMsSUFBSUUsUUFBUSxHQUFHSCxZQUFZLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQztBQUU5QyxJQUFJSSxPQUFPLEdBQUdGLFNBQVMsQ0FBQyx1QkFBdUIsRUFBRSxJQUFJLENBQUM7QUFFdEQsSUFBSUUsT0FBTyxFQUFFO0VBQ1osSUFBSUMsT0FBTyxHQUFHSCxTQUFTLENBQUMsdUJBQXVCLEVBQUUsSUFBSSxDQUFDO0VBRXRESSxNQUFNLENBQUNDLE9BQU8sR0FBRyxTQUFTQyxTQUFTQSxDQUFDQyxDQUFDLEVBQUU7SUFDdEMsSUFBSSxDQUFDQSxDQUFDLElBQUksT0FBT0EsQ0FBQyxLQUFLLFFBQVEsRUFBRTtNQUNoQyxPQUFPLEtBQUs7SUFDYjtJQUNBLElBQUk7TUFDSEwsT0FBTyxDQUFDSyxDQUFDLEVBQUVMLE9BQU8sQ0FBQztNQUNuQixJQUFJQyxPQUFPLEVBQUU7UUFDWixJQUFJO1VBQ0hBLE9BQU8sQ0FBQ0ksQ0FBQyxFQUFFSixPQUFPLENBQUM7UUFDcEIsQ0FBQyxDQUFDLE9BQU9LLENBQUMsRUFBRTtVQUNYLE9BQU8sSUFBSTtRQUNaO01BQ0Q7TUFDQSxPQUFPRCxDQUFDLFlBQVlOLFFBQVEsQ0FBQyxDQUFDO0lBQy9CLENBQUMsQ0FBQyxPQUFPTyxDQUFDLEVBQUUsQ0FBQztJQUNiLE9BQU8sS0FBSztFQUNiLENBQUM7QUFDRixDQUFDLE1BQU07RUFDTjtFQUNBSixNQUFNLENBQUNDLE9BQU8sR0FBRyxTQUFTQyxTQUFTQSxDQUFDQyxDQUFDLEVBQUU7SUFDdEM7SUFDQSxPQUFPLEtBQUs7RUFDYixDQUFDO0FBQ0YifQ==