{"version":3,"names":["support_code_library_builder_1","__importDefault","require","url_1","importer","getSupportCodeLibrary","cwd","newId","requireModules","requirePaths","importPaths","default","reset","map","module","path","pathToFileURL","finalize","exports"],"sources":["../../src/api/support.ts"],"sourcesContent":["import { IdGenerator } from '@cucumber/messages'\nimport { ISupportCodeLibrary } from '../support_code_library_builder/types'\nimport supportCodeLibraryBuilder from '../support_code_library_builder'\nimport { pathToFileURL } from 'url'\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { importer } = require('../importer')\n\nexport async function getSupportCodeLibrary({\n  cwd,\n  newId,\n  requireModules,\n  requirePaths,\n  importPaths,\n}: {\n  cwd: string\n  newId: IdGenerator.NewId\n  requireModules: string[]\n  requirePaths: string[]\n  importPaths: string[]\n}): Promise<ISupportCodeLibrary> {\n  supportCodeLibraryBuilder.reset(cwd, newId, {\n    requireModules,\n    requirePaths,\n    importPaths,\n  })\n  requireModules.map((module) => require(module))\n  requirePaths.map((path) => require(path))\n  for (const path of importPaths) {\n    await importer(pathToFileURL(path))\n  }\n  return supportCodeLibraryBuilder.finalize()\n}\n"],"mappings":";;;;;;;;;;;AAEA,MAAAA,8BAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,KAAA,GAAAD,OAAA;AAEA;AACA,MAAM;EAAEE;AAAQ,CAAE,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEpC,eAAeG,qBAAqBA,CAAC;EAC1CC,GAAG;EACHC,KAAK;EACLC,cAAc;EACdC,YAAY;EACZC;AAAW,CAOZ;EACCV,8BAAA,CAAAW,OAAyB,CAACC,KAAK,CAACN,GAAG,EAAEC,KAAK,EAAE;IAC1CC,cAAc;IACdC,YAAY;IACZC;GACD,CAAC;EACFF,cAAc,CAACK,GAAG,CAAEC,MAAM,IAAKZ,OAAO,CAACY,MAAM,CAAC,CAAC;EAC/CL,YAAY,CAACI,GAAG,CAAEE,IAAI,IAAKb,OAAO,CAACa,IAAI,CAAC,CAAC;EACzC,KAAK,MAAMA,IAAI,IAAIL,WAAW,EAAE;IAC9B,MAAMN,QAAQ,CAAC,IAAAD,KAAA,CAAAa,aAAa,EAACD,IAAI,CAAC,CAAC;;EAErC,OAAOf,8BAAA,CAAAW,OAAyB,CAACM,QAAQ,EAAE;AAC7C;AAxBAC,OAAA,CAAAb,qBAAA,GAAAA,qBAAA"}