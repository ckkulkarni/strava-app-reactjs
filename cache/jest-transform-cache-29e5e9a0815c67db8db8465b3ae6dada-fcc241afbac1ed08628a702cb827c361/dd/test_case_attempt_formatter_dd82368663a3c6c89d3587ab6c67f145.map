{"version":3,"names":["indent_string_1","__importDefault","require","messages","__importStar","figures_1","location_helpers_1","test_case_attempt_parser_1","step_argument_formatter_1","value_checker_1","CHARACTERS","Map","TestStepResultStatus","AMBIGUOUS","default","cross","FAILED","PASSED","tick","PENDING","SKIPPED","UNDEFINED","getStepMessage","testStep","result","status","message","snippet","formatStep","colorFns","printAttachments","name","actionLocation","attachments","colorFn","forStatus","identifier","keyword","valueOrDefault","text","get","doesHaveValue","location","formatLocation","argument","argumentsText","formatStepArgument","forEach","body","mediaType","formatTestCaseAttempt","snippetBuilder","supportCodeLibrary","testCaseAttempt","parsed","parseTestCaseAttempt","testCase","getAttemptText","attempt","willBeRetried","sourceLocation","testSteps","exports","numberStr","toString","retriedStr"],"sources":["../../../src/formatter/helpers/test_case_attempt_formatter.ts"],"sourcesContent":["import indentString from 'indent-string'\nimport * as messages from '@cucumber/messages'\nimport figures from 'figures'\nimport { formatLocation } from './location_helpers'\nimport {\n  IParsedTestStep,\n  parseTestCaseAttempt,\n} from './test_case_attempt_parser'\nimport { formatStepArgument } from './step_argument_formatter'\nimport { IColorFns } from '../get_color_fns'\nimport { doesHaveValue, valueOrDefault } from '../../value_checker'\nimport { ITestCaseAttempt } from './event_data_collector'\nimport StepDefinitionSnippetBuilder from '../step_definition_snippet_builder'\nimport { ISupportCodeLibrary } from '../../support_code_library_builder/types'\n\nconst CHARACTERS: Map<messages.TestStepResultStatus, string> = new Map([\n  [messages.TestStepResultStatus.AMBIGUOUS, figures.cross],\n  [messages.TestStepResultStatus.FAILED, figures.cross],\n  [messages.TestStepResultStatus.PASSED, figures.tick],\n  [messages.TestStepResultStatus.PENDING, '?'],\n  [messages.TestStepResultStatus.SKIPPED, '-'],\n  [messages.TestStepResultStatus.UNDEFINED, '?'],\n])\n\nfunction getStepMessage(testStep: IParsedTestStep): string {\n  switch (testStep.result.status) {\n    case messages.TestStepResultStatus.AMBIGUOUS:\n    case messages.TestStepResultStatus.FAILED:\n      return testStep.result.message\n    case messages.TestStepResultStatus.UNDEFINED:\n      return `${\n        'Undefined. Implement with the following snippet:' + '\\n\\n'\n      }${indentString(testStep.snippet, 2)}\\n`\n    case messages.TestStepResultStatus.PENDING:\n      return 'Pending'\n  }\n  return ''\n}\n\ninterface IFormatStepRequest {\n  colorFns: IColorFns\n  testStep: IParsedTestStep\n  printAttachments?: boolean\n}\n\nfunction formatStep({\n  colorFns,\n  testStep,\n  printAttachments,\n}: IFormatStepRequest): string {\n  const {\n    name,\n    result: { status },\n    actionLocation,\n    attachments,\n  } = testStep\n  const colorFn = colorFns.forStatus(status)\n  const identifier = testStep.keyword + valueOrDefault(testStep.text, '')\n  let text = colorFn(`${CHARACTERS.get(status)} ${identifier}`)\n  if (doesHaveValue(name)) {\n    text += colorFn(` (${name})`)\n  }\n  if (doesHaveValue(actionLocation)) {\n    text += ` # ${colorFns.location(formatLocation(actionLocation))}`\n  }\n  text += '\\n'\n  if (doesHaveValue(testStep.argument)) {\n    const argumentsText = formatStepArgument(testStep.argument)\n    text += indentString(`${colorFn(argumentsText)}\\n`, 4)\n  }\n  if (valueOrDefault(printAttachments, true)) {\n    attachments.forEach(({ body, mediaType }) => {\n      const message = mediaType === 'text/plain' ? `: ${body}` : ''\n      text += indentString(`Attachment (${mediaType})${message}\\n`, 4)\n    })\n  }\n  const message = getStepMessage(testStep)\n  if (message !== '') {\n    text += `${indentString(colorFn(message), 4)}\\n`\n  }\n  return text\n}\n\nexport interface IFormatTestCaseAttemptRequest {\n  colorFns: IColorFns\n  testCaseAttempt: ITestCaseAttempt\n  snippetBuilder: StepDefinitionSnippetBuilder\n  supportCodeLibrary: ISupportCodeLibrary\n  printAttachments?: boolean\n}\n\nexport function formatTestCaseAttempt({\n  colorFns,\n  snippetBuilder,\n  supportCodeLibrary,\n  testCaseAttempt,\n  printAttachments,\n}: IFormatTestCaseAttemptRequest): string {\n  const parsed = parseTestCaseAttempt({\n    snippetBuilder,\n    testCaseAttempt,\n    supportCodeLibrary,\n  })\n  let text = `Scenario: ${parsed.testCase.name}`\n  text += getAttemptText(parsed.testCase.attempt, testCaseAttempt.willBeRetried)\n  text += ` # ${colorFns.location(\n    formatLocation(parsed.testCase.sourceLocation)\n  )}\\n`\n  parsed.testSteps.forEach((testStep) => {\n    text += formatStep({ colorFns, testStep, printAttachments })\n  })\n  return `${text}\\n`\n}\n\nfunction getAttemptText(attempt: number, willBeRetried: boolean): string {\n  if (attempt > 0 || willBeRetried) {\n    const numberStr = (attempt + 1).toString()\n    const retriedStr = willBeRetried ? ', retried' : ''\n    return ` (attempt ${numberStr}${retriedStr})`\n  }\n  return ''\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,eAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,QAAA,GAAAC,YAAA,CAAAF,OAAA;AACA,MAAAG,SAAA,GAAAJ,eAAA,CAAAC,OAAA;AACA,MAAAI,kBAAA,GAAAJ,OAAA;AACA,MAAAK,0BAAA,GAAAL,OAAA;AAIA,MAAAM,yBAAA,GAAAN,OAAA;AAEA,MAAAO,eAAA,GAAAP,OAAA;AAKA,MAAMQ,UAAU,GAA+C,IAAIC,GAAG,CAAC,CACrE,CAACR,QAAQ,CAACS,oBAAoB,CAACC,SAAS,EAAER,SAAA,CAAAS,OAAO,CAACC,KAAK,CAAC,EACxD,CAACZ,QAAQ,CAACS,oBAAoB,CAACI,MAAM,EAAEX,SAAA,CAAAS,OAAO,CAACC,KAAK,CAAC,EACrD,CAACZ,QAAQ,CAACS,oBAAoB,CAACK,MAAM,EAAEZ,SAAA,CAAAS,OAAO,CAACI,IAAI,CAAC,EACpD,CAACf,QAAQ,CAACS,oBAAoB,CAACO,OAAO,EAAE,GAAG,CAAC,EAC5C,CAAChB,QAAQ,CAACS,oBAAoB,CAACQ,OAAO,EAAE,GAAG,CAAC,EAC5C,CAACjB,QAAQ,CAACS,oBAAoB,CAACS,SAAS,EAAE,GAAG,CAAC,CAC/C,CAAC;AAEF,SAASC,cAAcA,CAACC,QAAyB;EAC/C,QAAQA,QAAQ,CAACC,MAAM,CAACC,MAAM;IAC5B,KAAKtB,QAAQ,CAACS,oBAAoB,CAACC,SAAS;IAC5C,KAAKV,QAAQ,CAACS,oBAAoB,CAACI,MAAM;MACvC,OAAOO,QAAQ,CAACC,MAAM,CAACE,OAAO;IAChC,KAAKvB,QAAQ,CAACS,oBAAoB,CAACS,SAAS;MAC1C,OAAO,GACL,kDAAkD,GAAG,MACvD,GAAG,IAAArB,eAAA,CAAAc,OAAY,EAACS,QAAQ,CAACI,OAAO,EAAE,CAAC,CAAC,IAAI;IAC1C,KAAKxB,QAAQ,CAACS,oBAAoB,CAACO,OAAO;MACxC,OAAO,SAAS;EAAA;EAEpB,OAAO,EAAE;AACX;AAQA,SAASS,UAAUA,CAAC;EAClBC,QAAQ;EACRN,QAAQ;EACRO;AAAgB,CACG;EACnB,MAAM;IACJC,IAAI;IACJP,MAAM,EAAE;MAAEC;IAAM,CAAE;IAClBO,cAAc;IACdC;EAAW,CACZ,GAAGV,QAAQ;EACZ,MAAMW,OAAO,GAAGL,QAAQ,CAACM,SAAS,CAACV,MAAM,CAAC;EAC1C,MAAMW,UAAU,GAAGb,QAAQ,CAACc,OAAO,GAAG,IAAA5B,eAAA,CAAA6B,cAAc,EAACf,QAAQ,CAACgB,IAAI,EAAE,EAAE,CAAC;EACvE,IAAIA,IAAI,GAAGL,OAAO,CAAC,GAAGxB,UAAU,CAAC8B,GAAG,CAACf,MAAM,CAAC,IAAIW,UAAU,EAAE,CAAC;EAC7D,IAAI,IAAA3B,eAAA,CAAAgC,aAAa,EAACV,IAAI,CAAC,EAAE;IACvBQ,IAAI,IAAIL,OAAO,CAAC,KAAKH,IAAI,GAAG,CAAC;;EAE/B,IAAI,IAAAtB,eAAA,CAAAgC,aAAa,EAACT,cAAc,CAAC,EAAE;IACjCO,IAAI,IAAI,MAAMV,QAAQ,CAACa,QAAQ,CAAC,IAAApC,kBAAA,CAAAqC,cAAc,EAACX,cAAc,CAAC,CAAC,EAAE;;EAEnEO,IAAI,IAAI,IAAI;EACZ,IAAI,IAAA9B,eAAA,CAAAgC,aAAa,EAAClB,QAAQ,CAACqB,QAAQ,CAAC,EAAE;IACpC,MAAMC,aAAa,GAAG,IAAArC,yBAAA,CAAAsC,kBAAkB,EAACvB,QAAQ,CAACqB,QAAQ,CAAC;IAC3DL,IAAI,IAAI,IAAAvC,eAAA,CAAAc,OAAY,EAAC,GAAGoB,OAAO,CAACW,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;;EAExD,IAAI,IAAApC,eAAA,CAAA6B,cAAc,EAACR,gBAAgB,EAAE,IAAI,CAAC,EAAE;IAC1CG,WAAW,CAACc,OAAO,CAAC,CAAC;MAAEC,IAAI;MAAEC;IAAS,CAAE,KAAI;MAC1C,MAAMvB,OAAO,GAAGuB,SAAS,KAAK,YAAY,GAAG,KAAKD,IAAI,EAAE,GAAG,EAAE;MAC7DT,IAAI,IAAI,IAAAvC,eAAA,CAAAc,OAAY,EAAC,eAAemC,SAAS,IAAIvB,OAAO,IAAI,EAAE,CAAC,CAAC;IAClE,CAAC,CAAC;;EAEJ,MAAMA,OAAO,GAAGJ,cAAc,CAACC,QAAQ,CAAC;EACxC,IAAIG,OAAO,KAAK,EAAE,EAAE;IAClBa,IAAI,IAAI,GAAG,IAAAvC,eAAA,CAAAc,OAAY,EAACoB,OAAO,CAACR,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI;;EAElD,OAAOa,IAAI;AACb;AAUA,SAAgBW,qBAAqBA,CAAC;EACpCrB,QAAQ;EACRsB,cAAc;EACdC,kBAAkB;EAClBC,eAAe;EACfvB;AAAgB,CACc;EAC9B,MAAMwB,MAAM,GAAG,IAAA/C,0BAAA,CAAAgD,oBAAoB,EAAC;IAClCJ,cAAc;IACdE,eAAe;IACfD;GACD,CAAC;EACF,IAAIb,IAAI,GAAG,aAAae,MAAM,CAACE,QAAQ,CAACzB,IAAI,EAAE;EAC9CQ,IAAI,IAAIkB,cAAc,CAACH,MAAM,CAACE,QAAQ,CAACE,OAAO,EAAEL,eAAe,CAACM,aAAa,CAAC;EAC9EpB,IAAI,IAAI,MAAMV,QAAQ,CAACa,QAAQ,CAC7B,IAAApC,kBAAA,CAAAqC,cAAc,EAACW,MAAM,CAACE,QAAQ,CAACI,cAAc,CAAC,CAC/C,IAAI;EACLN,MAAM,CAACO,SAAS,CAACd,OAAO,CAAExB,QAAQ,IAAI;IACpCgB,IAAI,IAAIX,UAAU,CAAC;MAAEC,QAAQ;MAAEN,QAAQ;MAAEO;IAAgB,CAAE,CAAC;EAC9D,CAAC,CAAC;EACF,OAAO,GAAGS,IAAI,IAAI;AACpB;AArBAuB,OAAA,CAAAZ,qBAAA,GAAAA,qBAAA;AAuBA,SAASO,cAAcA,CAACC,OAAe,EAAEC,aAAsB;EAC7D,IAAID,OAAO,GAAG,CAAC,IAAIC,aAAa,EAAE;IAChC,MAAMI,SAAS,GAAG,CAACL,OAAO,GAAG,CAAC,EAAEM,QAAQ,EAAE;IAC1C,MAAMC,UAAU,GAAGN,aAAa,GAAG,WAAW,GAAG,EAAE;IACnD,OAAO,aAAaI,SAAS,GAAGE,UAAU,GAAG;;EAE/C,OAAO,EAAE;AACX"}