192f59f07c6508277166a4274d00f48d
/**
 * The MIT License (MIT)
 * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>
 */

'use strict';

var compatTransforms = require('./transforms');
var _transform = require('../transform');
module.exports = {
  /**
   * Translates a regexp in new syntax to equivalent regexp in old syntax.
   *
   * @param string|RegExp|AST - regexp
   * @param Array transformsWhitelist - names of the transforms to apply
   */
  transform: function transform(regexp) {
    var transformsWhitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var transformToApply = transformsWhitelist.length > 0 ? transformsWhitelist : Object.keys(compatTransforms);
    var result = void 0;

    // Collect extra data per transform.
    var extra = {};
    transformToApply.forEach(function (transformName) {
      if (!compatTransforms.hasOwnProperty(transformName)) {
        throw new Error('Unknown compat-transform: ' + transformName + '. ' + 'Available transforms are: ' + Object.keys(compatTransforms).join(', '));
      }
      var handler = compatTransforms[transformName];
      result = _transform.transform(regexp, handler);
      regexp = result.getAST();

      // Collect `extra` transform result.
      if (typeof handler.getExtra === 'function') {
        extra[transformName] = handler.getExtra();
      }
    });

    // Set the final extras for all transforms.
    result.setExtra(extra);
    return result;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21wYXRUcmFuc2Zvcm1zIiwicmVxdWlyZSIsIl90cmFuc2Zvcm0iLCJtb2R1bGUiLCJleHBvcnRzIiwidHJhbnNmb3JtIiwicmVnZXhwIiwidHJhbnNmb3Jtc1doaXRlbGlzdCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInRyYW5zZm9ybVRvQXBwbHkiLCJPYmplY3QiLCJrZXlzIiwicmVzdWx0IiwiZXh0cmEiLCJmb3JFYWNoIiwidHJhbnNmb3JtTmFtZSIsImhhc093blByb3BlcnR5IiwiRXJyb3IiLCJqb2luIiwiaGFuZGxlciIsImdldEFTVCIsImdldEV4dHJhIiwic2V0RXh0cmEiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBNSVQgTGljZW5zZSAoTUlUKVxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQgRG1pdHJ5IFNvc2huaWtvdiA8ZG1pdHJ5LnNvc2huaWtvdkBnbWFpbC5jb20+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY29tcGF0VHJhbnNmb3JtcyA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtcycpO1xudmFyIF90cmFuc2Zvcm0gPSByZXF1aXJlKCcuLi90cmFuc2Zvcm0nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIC8qKlxuICAgKiBUcmFuc2xhdGVzIGEgcmVnZXhwIGluIG5ldyBzeW50YXggdG8gZXF1aXZhbGVudCByZWdleHAgaW4gb2xkIHN5bnRheC5cbiAgICpcbiAgICogQHBhcmFtIHN0cmluZ3xSZWdFeHB8QVNUIC0gcmVnZXhwXG4gICAqIEBwYXJhbSBBcnJheSB0cmFuc2Zvcm1zV2hpdGVsaXN0IC0gbmFtZXMgb2YgdGhlIHRyYW5zZm9ybXMgdG8gYXBwbHlcbiAgICovXG4gIHRyYW5zZm9ybTogZnVuY3Rpb24gdHJhbnNmb3JtKHJlZ2V4cCkge1xuICAgIHZhciB0cmFuc2Zvcm1zV2hpdGVsaXN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBbXTtcblxuICAgIHZhciB0cmFuc2Zvcm1Ub0FwcGx5ID0gdHJhbnNmb3Jtc1doaXRlbGlzdC5sZW5ndGggPiAwID8gdHJhbnNmb3Jtc1doaXRlbGlzdCA6IE9iamVjdC5rZXlzKGNvbXBhdFRyYW5zZm9ybXMpO1xuXG4gICAgdmFyIHJlc3VsdCA9IHZvaWQgMDtcblxuICAgIC8vIENvbGxlY3QgZXh0cmEgZGF0YSBwZXIgdHJhbnNmb3JtLlxuICAgIHZhciBleHRyYSA9IHt9O1xuXG4gICAgdHJhbnNmb3JtVG9BcHBseS5mb3JFYWNoKGZ1bmN0aW9uICh0cmFuc2Zvcm1OYW1lKSB7XG5cbiAgICAgIGlmICghY29tcGF0VHJhbnNmb3Jtcy5oYXNPd25Qcm9wZXJ0eSh0cmFuc2Zvcm1OYW1lKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gY29tcGF0LXRyYW5zZm9ybTogJyArIHRyYW5zZm9ybU5hbWUgKyAnLiAnICsgJ0F2YWlsYWJsZSB0cmFuc2Zvcm1zIGFyZTogJyArIE9iamVjdC5rZXlzKGNvbXBhdFRyYW5zZm9ybXMpLmpvaW4oJywgJykpO1xuICAgICAgfVxuXG4gICAgICB2YXIgaGFuZGxlciA9IGNvbXBhdFRyYW5zZm9ybXNbdHJhbnNmb3JtTmFtZV07XG5cbiAgICAgIHJlc3VsdCA9IF90cmFuc2Zvcm0udHJhbnNmb3JtKHJlZ2V4cCwgaGFuZGxlcik7XG4gICAgICByZWdleHAgPSByZXN1bHQuZ2V0QVNUKCk7XG5cbiAgICAgIC8vIENvbGxlY3QgYGV4dHJhYCB0cmFuc2Zvcm0gcmVzdWx0LlxuICAgICAgaWYgKHR5cGVvZiBoYW5kbGVyLmdldEV4dHJhID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGV4dHJhW3RyYW5zZm9ybU5hbWVdID0gaGFuZGxlci5nZXRFeHRyYSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gU2V0IHRoZSBmaW5hbCBleHRyYXMgZm9yIGFsbCB0cmFuc2Zvcm1zLlxuICAgIHJlc3VsdC5zZXRFeHRyYShleHRyYSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWTs7QUFFWixJQUFJQSxnQkFBZ0IsR0FBR0MsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUM5QyxJQUFJQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFFeENFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2Y7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VDLFNBQVMsRUFBRSxTQUFTQSxTQUFTQSxDQUFDQyxNQUFNLEVBQUU7SUFDcEMsSUFBSUMsbUJBQW1CLEdBQUdDLFNBQVMsQ0FBQ0MsTUFBTSxHQUFHLENBQUMsSUFBSUQsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLRSxTQUFTLEdBQUdGLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFO0lBRWhHLElBQUlHLGdCQUFnQixHQUFHSixtQkFBbUIsQ0FBQ0UsTUFBTSxHQUFHLENBQUMsR0FBR0YsbUJBQW1CLEdBQUdLLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDYixnQkFBZ0IsQ0FBQztJQUUzRyxJQUFJYyxNQUFNLEdBQUcsS0FBSyxDQUFDOztJQUVuQjtJQUNBLElBQUlDLEtBQUssR0FBRyxDQUFDLENBQUM7SUFFZEosZ0JBQWdCLENBQUNLLE9BQU8sQ0FBQyxVQUFVQyxhQUFhLEVBQUU7TUFFaEQsSUFBSSxDQUFDakIsZ0JBQWdCLENBQUNrQixjQUFjLENBQUNELGFBQWEsQ0FBQyxFQUFFO1FBQ25ELE1BQU0sSUFBSUUsS0FBSyxDQUFDLDRCQUE0QixHQUFHRixhQUFhLEdBQUcsSUFBSSxHQUFHLDRCQUE0QixHQUFHTCxNQUFNLENBQUNDLElBQUksQ0FBQ2IsZ0JBQWdCLENBQUMsQ0FBQ29CLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztNQUNoSjtNQUVBLElBQUlDLE9BQU8sR0FBR3JCLGdCQUFnQixDQUFDaUIsYUFBYSxDQUFDO01BRTdDSCxNQUFNLEdBQUdaLFVBQVUsQ0FBQ0csU0FBUyxDQUFDQyxNQUFNLEVBQUVlLE9BQU8sQ0FBQztNQUM5Q2YsTUFBTSxHQUFHUSxNQUFNLENBQUNRLE1BQU0sRUFBRTs7TUFFeEI7TUFDQSxJQUFJLE9BQU9ELE9BQU8sQ0FBQ0UsUUFBUSxLQUFLLFVBQVUsRUFBRTtRQUMxQ1IsS0FBSyxDQUFDRSxhQUFhLENBQUMsR0FBR0ksT0FBTyxDQUFDRSxRQUFRLEVBQUU7TUFDM0M7SUFDRixDQUFDLENBQUM7O0lBRUY7SUFDQVQsTUFBTSxDQUFDVSxRQUFRLENBQUNULEtBQUssQ0FBQztJQUV0QixPQUFPRCxNQUFNO0VBQ2Y7QUFDRixDQUFDIn0=