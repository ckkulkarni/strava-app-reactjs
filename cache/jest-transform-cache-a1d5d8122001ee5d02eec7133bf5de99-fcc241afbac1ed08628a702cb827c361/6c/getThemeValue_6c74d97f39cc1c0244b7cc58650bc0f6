1ae650bb372576803ca2fe399ce74d26
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.styleFunctionMapping = exports.propToStyleFunction = exports.default = void 0;
var _borders = _interopRequireDefault(require("./borders"));
var _display = _interopRequireDefault(require("./display"));
var _flexbox = _interopRequireDefault(require("./flexbox"));
var _cssGrid = _interopRequireDefault(require("./cssGrid"));
var _positions = _interopRequireDefault(require("./positions"));
var _palette = _interopRequireDefault(require("./palette"));
var _shadows = _interopRequireDefault(require("./shadows"));
var _sizing = _interopRequireDefault(require("./sizing"));
var _spacing = _interopRequireDefault(require("./spacing"));
var _typography = _interopRequireDefault(require("./typography"));
const filterPropsMapping = {
  borders: _borders.default.filterProps,
  display: _display.default.filterProps,
  flexbox: _flexbox.default.filterProps,
  grid: _cssGrid.default.filterProps,
  positions: _positions.default.filterProps,
  palette: _palette.default.filterProps,
  shadows: _shadows.default.filterProps,
  sizing: _sizing.default.filterProps,
  spacing: _spacing.default.filterProps,
  typography: _typography.default.filterProps
};
const styleFunctionMapping = {
  borders: _borders.default,
  display: _display.default,
  flexbox: _flexbox.default,
  grid: _cssGrid.default,
  positions: _positions.default,
  palette: _palette.default,
  shadows: _shadows.default,
  sizing: _sizing.default,
  spacing: _spacing.default,
  typography: _typography.default
};
exports.styleFunctionMapping = styleFunctionMapping;
const propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {
  filterPropsMapping[styleFnName].forEach(propName => {
    acc[propName] = styleFunctionMapping[styleFnName];
  });
  return acc;
}, {});
exports.propToStyleFunction = propToStyleFunction;
function getThemeValue(prop, value, theme) {
  const inputProps = {
    [prop]: value,
    theme
  };
  const styleFunction = propToStyleFunction[prop];
  return styleFunction ? styleFunction(inputProps) : {
    [prop]: value
  };
}
var _default = getThemeValue;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic3R5bGVGdW5jdGlvbk1hcHBpbmciLCJwcm9wVG9TdHlsZUZ1bmN0aW9uIiwiZGVmYXVsdCIsIl9ib3JkZXJzIiwiX2Rpc3BsYXkiLCJfZmxleGJveCIsIl9jc3NHcmlkIiwiX3Bvc2l0aW9ucyIsIl9wYWxldHRlIiwiX3NoYWRvd3MiLCJfc2l6aW5nIiwiX3NwYWNpbmciLCJfdHlwb2dyYXBoeSIsImZpbHRlclByb3BzTWFwcGluZyIsImJvcmRlcnMiLCJmaWx0ZXJQcm9wcyIsImRpc3BsYXkiLCJmbGV4Ym94IiwiZ3JpZCIsInBvc2l0aW9ucyIsInBhbGV0dGUiLCJzaGFkb3dzIiwic2l6aW5nIiwic3BhY2luZyIsInR5cG9ncmFwaHkiLCJrZXlzIiwicmVkdWNlIiwiYWNjIiwic3R5bGVGbk5hbWUiLCJmb3JFYWNoIiwicHJvcE5hbWUiLCJnZXRUaGVtZVZhbHVlIiwicHJvcCIsInRoZW1lIiwiaW5wdXRQcm9wcyIsInN0eWxlRnVuY3Rpb24iLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbImdldFRoZW1lVmFsdWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuc3R5bGVGdW5jdGlvbk1hcHBpbmcgPSBleHBvcnRzLnByb3BUb1N0eWxlRnVuY3Rpb24gPSBleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX2JvcmRlcnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2JvcmRlcnNcIikpO1xudmFyIF9kaXNwbGF5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9kaXNwbGF5XCIpKTtcbnZhciBfZmxleGJveCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vZmxleGJveFwiKSk7XG52YXIgX2Nzc0dyaWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2Nzc0dyaWRcIikpO1xudmFyIF9wb3NpdGlvbnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Bvc2l0aW9uc1wiKSk7XG52YXIgX3BhbGV0dGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3BhbGV0dGVcIikpO1xudmFyIF9zaGFkb3dzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zaGFkb3dzXCIpKTtcbnZhciBfc2l6aW5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zaXppbmdcIikpO1xudmFyIF9zcGFjaW5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zcGFjaW5nXCIpKTtcbnZhciBfdHlwb2dyYXBoeSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdHlwb2dyYXBoeVwiKSk7XG5jb25zdCBmaWx0ZXJQcm9wc01hcHBpbmcgPSB7XG4gIGJvcmRlcnM6IF9ib3JkZXJzLmRlZmF1bHQuZmlsdGVyUHJvcHMsXG4gIGRpc3BsYXk6IF9kaXNwbGF5LmRlZmF1bHQuZmlsdGVyUHJvcHMsXG4gIGZsZXhib3g6IF9mbGV4Ym94LmRlZmF1bHQuZmlsdGVyUHJvcHMsXG4gIGdyaWQ6IF9jc3NHcmlkLmRlZmF1bHQuZmlsdGVyUHJvcHMsXG4gIHBvc2l0aW9uczogX3Bvc2l0aW9ucy5kZWZhdWx0LmZpbHRlclByb3BzLFxuICBwYWxldHRlOiBfcGFsZXR0ZS5kZWZhdWx0LmZpbHRlclByb3BzLFxuICBzaGFkb3dzOiBfc2hhZG93cy5kZWZhdWx0LmZpbHRlclByb3BzLFxuICBzaXppbmc6IF9zaXppbmcuZGVmYXVsdC5maWx0ZXJQcm9wcyxcbiAgc3BhY2luZzogX3NwYWNpbmcuZGVmYXVsdC5maWx0ZXJQcm9wcyxcbiAgdHlwb2dyYXBoeTogX3R5cG9ncmFwaHkuZGVmYXVsdC5maWx0ZXJQcm9wc1xufTtcbmNvbnN0IHN0eWxlRnVuY3Rpb25NYXBwaW5nID0ge1xuICBib3JkZXJzOiBfYm9yZGVycy5kZWZhdWx0LFxuICBkaXNwbGF5OiBfZGlzcGxheS5kZWZhdWx0LFxuICBmbGV4Ym94OiBfZmxleGJveC5kZWZhdWx0LFxuICBncmlkOiBfY3NzR3JpZC5kZWZhdWx0LFxuICBwb3NpdGlvbnM6IF9wb3NpdGlvbnMuZGVmYXVsdCxcbiAgcGFsZXR0ZTogX3BhbGV0dGUuZGVmYXVsdCxcbiAgc2hhZG93czogX3NoYWRvd3MuZGVmYXVsdCxcbiAgc2l6aW5nOiBfc2l6aW5nLmRlZmF1bHQsXG4gIHNwYWNpbmc6IF9zcGFjaW5nLmRlZmF1bHQsXG4gIHR5cG9ncmFwaHk6IF90eXBvZ3JhcGh5LmRlZmF1bHRcbn07XG5leHBvcnRzLnN0eWxlRnVuY3Rpb25NYXBwaW5nID0gc3R5bGVGdW5jdGlvbk1hcHBpbmc7XG5jb25zdCBwcm9wVG9TdHlsZUZ1bmN0aW9uID0gT2JqZWN0LmtleXMoZmlsdGVyUHJvcHNNYXBwaW5nKS5yZWR1Y2UoKGFjYywgc3R5bGVGbk5hbWUpID0+IHtcbiAgZmlsdGVyUHJvcHNNYXBwaW5nW3N0eWxlRm5OYW1lXS5mb3JFYWNoKHByb3BOYW1lID0+IHtcbiAgICBhY2NbcHJvcE5hbWVdID0gc3R5bGVGdW5jdGlvbk1hcHBpbmdbc3R5bGVGbk5hbWVdO1xuICB9KTtcbiAgcmV0dXJuIGFjYztcbn0sIHt9KTtcbmV4cG9ydHMucHJvcFRvU3R5bGVGdW5jdGlvbiA9IHByb3BUb1N0eWxlRnVuY3Rpb247XG5mdW5jdGlvbiBnZXRUaGVtZVZhbHVlKHByb3AsIHZhbHVlLCB0aGVtZSkge1xuICBjb25zdCBpbnB1dFByb3BzID0ge1xuICAgIFtwcm9wXTogdmFsdWUsXG4gICAgdGhlbWVcbiAgfTtcbiAgY29uc3Qgc3R5bGVGdW5jdGlvbiA9IHByb3BUb1N0eWxlRnVuY3Rpb25bcHJvcF07XG4gIHJldHVybiBzdHlsZUZ1bmN0aW9uID8gc3R5bGVGdW5jdGlvbihpbnB1dFByb3BzKSA6IHtcbiAgICBbcHJvcF06IHZhbHVlXG4gIH07XG59XG52YXIgX2RlZmF1bHQgPSBnZXRUaGVtZVZhbHVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaLElBQUlBLHNCQUFzQixHQUFHQyxPQUFPLENBQUMsOENBQThDLENBQUM7QUFDcEZDLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDQyxPQUFPLEVBQUUsWUFBWSxFQUFFO0VBQzNDQyxLQUFLLEVBQUU7QUFDVCxDQUFDLENBQUM7QUFDRkQsT0FBTyxDQUFDRSxvQkFBb0IsR0FBR0YsT0FBTyxDQUFDRyxtQkFBbUIsR0FBR0gsT0FBTyxDQUFDSSxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQ3JGLElBQUlDLFFBQVEsR0FBR1Qsc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUMzRCxJQUFJUyxRQUFRLEdBQUdWLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDM0QsSUFBSVUsUUFBUSxHQUFHWCxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzNELElBQUlXLFFBQVEsR0FBR1osc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUMzRCxJQUFJWSxVQUFVLEdBQUdiLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDL0QsSUFBSWEsUUFBUSxHQUFHZCxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzNELElBQUljLFFBQVEsR0FBR2Ysc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxXQUFXLENBQUMs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