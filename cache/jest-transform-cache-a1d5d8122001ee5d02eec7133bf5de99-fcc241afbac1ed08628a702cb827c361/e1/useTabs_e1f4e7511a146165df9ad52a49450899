6a89431793e3cacfa2537da8954e6477
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _utils = require("@mui/utils");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function (nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
/**
 *
 * Demos:
 *
 * - [Unstyled Tabs](https://mui.com/base/react-tabs/#hooks)
 *
 * API:
 *
 * - [useTabs API](https://mui.com/base/api/use-tabs/)
 */
function useTabs(parameters) {
  const {
    value: valueProp,
    defaultValue,
    onChange,
    orientation,
    direction,
    selectionFollowsFocus
  } = parameters;
  const [value, setValue] = (0, _utils.unstable_useControlled)({
    controlled: valueProp,
    default: defaultValue,
    name: 'Tabs',
    state: 'value'
  });
  const idPrefix = (0, _utils.unstable_useId)();
  const onSelected = React.useCallback((e, newValue) => {
    setValue(newValue);
    if (onChange) {
      onChange(e, newValue);
    }
  }, [onChange, setValue]);
  const tabsContextValue = React.useMemo(() => {
    return {
      idPrefix,
      value,
      onSelected,
      orientation,
      direction,
      selectionFollowsFocus
    };
  }, [idPrefix, value, onSelected, orientation, direction, selectionFollowsFocus]);
  return {
    tabsContextValue
  };
}
var _default = useTabs;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl91dGlscyIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJ1c2VUYWJzIiwicGFyYW1ldGVycyIsInZhbHVlUHJvcCIsImRlZmF1bHRWYWx1ZSIsIm9uQ2hhbmdlIiwib3JpZW50YXRpb24iLCJkaXJlY3Rpb24iLCJzZWxlY3Rpb25Gb2xsb3dzRm9jdXMiLCJzZXRWYWx1ZSIsInVuc3RhYmxlX3VzZUNvbnRyb2xsZWQiLCJjb250cm9sbGVkIiwibmFtZSIsInN0YXRlIiwiaWRQcmVmaXgiLCJ1bnN0YWJsZV91c2VJZCIsIm9uU2VsZWN0ZWQiLCJ1c2VDYWxsYmFjayIsImUiLCJuZXdWYWx1ZSIsInRhYnNDb250ZXh0VmFsdWUiLCJ1c2VNZW1vIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyJ1c2VUYWJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIFJlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiQG11aS91dGlsc1wiKTtcbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCkgeyBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7IHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHZhciBjYWNoZU5vZGVJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgcmV0dXJuIChfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiAobm9kZUludGVyb3ApIHsgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wOyB9KShub2RlSW50ZXJvcCk7IH1cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHsgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IGRlZmF1bHQ6IG9iaiB9OyB9IHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKGtleSAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDsgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxuLyoqXG4gKlxuICogRGVtb3M6XG4gKlxuICogLSBbVW5zdHlsZWQgVGFic10oaHR0cHM6Ly9tdWkuY29tL2Jhc2UvcmVhY3QtdGFicy8jaG9va3MpXG4gKlxuICogQVBJOlxuICpcbiAqIC0gW3VzZVRhYnMgQVBJXShodHRwczovL211aS5jb20vYmFzZS9hcGkvdXNlLXRhYnMvKVxuICovXG5mdW5jdGlvbiB1c2VUYWJzKHBhcmFtZXRlcnMpIHtcbiAgY29uc3Qge1xuICAgIHZhbHVlOiB2YWx1ZVByb3AsXG4gICAgZGVmYXVsdFZhbHVlLFxuICAgIG9uQ2hhbmdlLFxuICAgIG9yaWVudGF0aW9uLFxuICAgIGRpcmVjdGlvbixcbiAgICBzZWxlY3Rpb25Gb2xsb3dzRm9jdXNcbiAgfSA9IHBhcmFtZXRlcnM7XG4gIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gKDAsIF91dGlscy51bnN0YWJsZV91c2VDb250cm9sbGVkKSh7XG4gICAgY29udHJvbGxlZDogdmFsdWVQcm9wLFxuICAgIGRlZmF1bHQ6IGRlZmF1bHRWYWx1ZSxcbiAgICBuYW1lOiAnVGFicycsXG4gICAgc3RhdGU6ICd2YWx1ZSdcbiAgfSk7XG4gIGNvbnN0IGlkUHJlZml4ID0gKDAsIF91dGlscy51bnN0YWJsZV91c2VJZCkoKTtcbiAgY29uc3Qgb25TZWxlY3RlZCA9IFJlYWN0LnVzZUNhbGxiYWNrKChlLCBuZXdWYWx1ZSkgPT4ge1xuICAgIHNldFZhbHVlKG5ld1ZhbHVlKTtcbiAgICBpZiAob25DaGFuZ2UpIHtcbiAgICAgIG9uQ2hhbmdlKGUsIG5ld1ZhbHVlKTtcbiAgICB9XG4gIH0sIFtvbkNoYW5nZSwgc2V0VmFsdWVdKTtcbiAgY29uc3QgdGFic0NvbnRleHRWYWx1ZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBpZFByZWZpeCxcbiAgICAgIHZhbHVlLFxuICAgICAgb25TZWxlY3RlZCxcbiAgICAgIG9yaWVudGF0aW9uLFxuICAgICAgZGlyZWN0aW9uLFxuICAgICAgc2VsZWN0aW9uRm9sbG93c0ZvY3VzXG4gICAgfTtcbiAgfSwgW2lkUHJlZml4LCB2YWx1ZSwgb25TZWxlY3RlZCwgb3JpZW50YXRpb24sIGRpcmVjdGlvbiwgc2VsZWN0aW9uRm9sbG93c0ZvY3VzXSk7XG4gIHJldHVybiB7XG4gICAgdGFic0NvbnRleHRWYWx1ZVxuICB9O1xufVxudmFyIF9kZWZhdWx0ID0gdXNlVGFicztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLENBQUNFLE9BQU8sR0FBRyxLQUFLLENBQUM7QUFDeEIsSUFBSUMsS0FBSyxHQUFHQyx1QkFBdUIsQ0FBQ0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3JELElBQUlDLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFlBQVksQ0FBQztBQUNsQyxTQUFTRSx3QkFBd0JBLENBQUNDLFdBQVcsRUFBRTtFQUFFLElBQUksT0FBT0MsT0FBTyxLQUFLLFVBQVUsRUFBRSxPQUFPLElBQUk7RUFBRSxJQUFJQyxpQkFBaUIsR0FBRyxJQUFJRCxPQUFPLEVBQUU7RUFBRSxJQUFJRSxnQkFBZ0IsR0FBRyxJQUFJRixPQUFPLEVBQUU7RUFBRSxPQUFPLENBQUNGLHdCQUF3QixHQUFHLFNBQUFBLENBQVVDLFdBQVcsRUFB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