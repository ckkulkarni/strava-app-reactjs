fb43ba301bfda2ffbfe6ae5d1c7b7d83
'use strict';

// modified from https://github.com/es-shims/es6-shim
var objectKeys = require('object-keys');
var hasSymbols = require('has-symbols/shams')();
var callBound = require('call-bind/callBound');
var toObject = Object;
var $push = callBound('Array.prototype.push');
var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;

// eslint-disable-next-line no-unused-vars
module.exports = function assign(target, source1) {
  if (target == null) {
    throw new TypeError('target must be an object');
  }
  var to = toObject(target); // step 1
  if (arguments.length === 1) {
    return to; // step 2
  }

  for (var s = 1; s < arguments.length; ++s) {
    var from = toObject(arguments[s]); // step 3.a.i

    // step 3.a.ii:
    var keys = objectKeys(from);
    var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
    if (getSymbols) {
      var syms = getSymbols(from);
      for (var j = 0; j < syms.length; ++j) {
        var key = syms[j];
        if ($propIsEnumerable(from, key)) {
          $push(keys, key);
        }
      }
    }

    // step 3.a.iii:
    for (var i = 0; i < keys.length; ++i) {
      var nextKey = keys[i];
      if ($propIsEnumerable(from, nextKey)) {
        // step 3.a.iii.2
        var propValue = from[nextKey]; // step 3.a.iii.2.a
        to[nextKey] = propValue; // step 3.a.iii.2.b
      }
    }
  }

  return to; // step 4
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvYmplY3RLZXlzIiwicmVxdWlyZSIsImhhc1N5bWJvbHMiLCJjYWxsQm91bmQiLCJ0b09iamVjdCIsIk9iamVjdCIsIiRwdXNoIiwiJHByb3BJc0VudW1lcmFibGUiLCJvcmlnaW5hbEdldFN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXNzaWduIiwidGFyZ2V0Iiwic291cmNlMSIsIlR5cGVFcnJvciIsInRvIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwicyIsImZyb20iLCJrZXlzIiwiZ2V0U3ltYm9scyIsInN5bXMiLCJqIiwia2V5IiwiaSIsIm5leHRLZXkiLCJwcm9wVmFsdWUiXSwic291cmNlcyI6WyJpbXBsZW1lbnRhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIG1vZGlmaWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2VzLXNoaW1zL2VzNi1zaGltXG52YXIgb2JqZWN0S2V5cyA9IHJlcXVpcmUoJ29iamVjdC1rZXlzJyk7XG52YXIgaGFzU3ltYm9scyA9IHJlcXVpcmUoJ2hhcy1zeW1ib2xzL3NoYW1zJykoKTtcbnZhciBjYWxsQm91bmQgPSByZXF1aXJlKCdjYWxsLWJpbmQvY2FsbEJvdW5kJyk7XG52YXIgdG9PYmplY3QgPSBPYmplY3Q7XG52YXIgJHB1c2ggPSBjYWxsQm91bmQoJ0FycmF5LnByb3RvdHlwZS5wdXNoJyk7XG52YXIgJHByb3BJc0VudW1lcmFibGUgPSBjYWxsQm91bmQoJ09iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUnKTtcbnZhciBvcmlnaW5hbEdldFN5bWJvbHMgPSBoYXNTeW1ib2xzID8gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA6IG51bGw7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UxKSB7XG5cdGlmICh0YXJnZXQgPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCd0YXJnZXQgbXVzdCBiZSBhbiBvYmplY3QnKTsgfVxuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpOyAvLyBzdGVwIDFcblx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcblx0XHRyZXR1cm4gdG87IC8vIHN0ZXAgMlxuXHR9XG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgKytzKSB7XG5cdFx0dmFyIGZyb20gPSB0b09iamVjdChhcmd1bWVudHNbc10pOyAvLyBzdGVwIDMuYS5pXG5cblx0XHQvLyBzdGVwIDMuYS5paTpcblx0XHR2YXIga2V5cyA9IG9iamVjdEtleXMoZnJvbSk7XG5cdFx0dmFyIGdldFN5bWJvbHMgPSBoYXNTeW1ib2xzICYmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzIHx8IG9yaWdpbmFsR2V0U3ltYm9scyk7XG5cdFx0aWYgKGdldFN5bWJvbHMpIHtcblx0XHRcdHZhciBzeW1zID0gZ2V0U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgc3ltcy5sZW5ndGg7ICsraikge1xuXHRcdFx0XHR2YXIga2V5ID0gc3ltc1tqXTtcblx0XHRcdFx0aWYgKCRwcm9wSXNFbnVtZXJhYmxlKGZyb20sIGtleSkpIHtcblx0XHRcdFx0XHQkcHVzaChrZXlzLCBrZXkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gc3RlcCAzLmEuaWlpOlxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuXHRcdFx0dmFyIG5leHRLZXkgPSBrZXlzW2ldO1xuXHRcdFx0aWYgKCRwcm9wSXNFbnVtZXJhYmxlKGZyb20sIG5leHRLZXkpKSB7IC8vIHN0ZXAgMy5hLmlpaS4yXG5cdFx0XHRcdHZhciBwcm9wVmFsdWUgPSBmcm9tW25leHRLZXldOyAvLyBzdGVwIDMuYS5paWkuMi5hXG5cdFx0XHRcdHRvW25leHRLZXldID0gcHJvcFZhbHVlOyAvLyBzdGVwIDMuYS5paWkuMi5iXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvOyAvLyBzdGVwIDRcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBRVo7QUFDQSxJQUFJQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDdkMsSUFBSUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsbUJBQW1CLENBQUMsRUFBRTtBQUMvQyxJQUFJRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUM5QyxJQUFJRyxRQUFRLEdBQUdDLE1BQU07QUFDckIsSUFBSUMsS0FBSyxHQUFHSCxTQUFTLENBQUMsc0JBQXNCLENBQUM7QUFDN0MsSUFBSUksaUJBQWlCLEdBQUdKLFNBQVMsQ0FBQyx1Q0FBdUMsQ0FBQztBQUMxRSxJQUFJSyxrQkFBa0IsR0FBR04sVUFBVSxHQUFHRyxNQUFNLENBQUNJLHFCQUFxQixHQUFHLElBQUk7O0FBRXpFO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLFNBQVNDLE1BQU1BLENBQUNDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO0VBQ2pELElBQUlELE1BQU0sSUFBSSxJQUFJLEVBQUU7SUFBRSxNQUFNLElBQUlFLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQztFQUFFO0VBQ3ZFLElBQUlDLEVBQUUsR0FBR1osUUFBUSxDQUFDUyxNQUFNLENBQUMsQ0FBQyxDQUFDO0VBQzNCLElBQUlJLFNBQVMsQ0FBQ0MsTUFBTSxLQUFLLENBQUMsRUFBRTtJQUMzQixPQUFPRixFQUFFLENBQUMsQ0FBQztFQUNaOztFQUNBLEtBQUssSUFBSUcsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRixTQUFTLENBQUNDLE1BQU0sRUFBRSxFQUFFQyxDQUFDLEVBQUU7SUFDMUMsSUFBSUMsSUFBSSxHQUFHaEIsUUFBUSxDQUFDYSxTQUFTLENBQUNFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7SUFFbkM7SUFDQSxJQUFJRSxJQUFJLEdBQUdyQixVQUFVLENBQUNvQixJQUFJLENBQUM7SUFDM0IsSUFBSUUsVUFBVSxHQUFHcEIsVUFBVSxLQUFLRyxNQUFNLENBQUNJLHFCQUFxQixJQUFJRCxrQkFBa0IsQ0FBQztJQUNuRixJQUFJYyxVQUFVLEVBQUU7TUFDZixJQUFJQyxJQUFJLEdBQUdELFVBQVUsQ0FBQ0YsSUFBSSxDQUFDO01BQzNCLEtBQUssSUFBSUksQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRCxJQUFJLENBQUNMLE1BQU0sRUFBRSxFQUFFTSxDQUFDLEVBQUU7UUFDckMsSUFBSUMsR0FBRyxHQUFHRixJQUFJLENBQUNDLENBQUMsQ0FBQztRQUNqQixJQUFJakIsaUJBQWlCLENBQUNhLElBQUksRUFBRUssR0FBRyxDQUFDLEVBQUU7VUFDakNuQixLQUFLLENBQUNlLElBQUksRUFBRUksR0FBRyxDQUFDO1FBQ2pCO01BQ0Q7SUFDRDs7SUFFQTtJQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHTCxJQUFJLENBQUNILE1BQU0sRUFBRSxFQUFFUSxDQUFDLEVBQUU7TUFDckMsSUFBSUMsT0FBTyxHQUFHTixJQUFJLENBQUNLLENBQUMsQ0FBQztNQUNyQixJQUFJbkIsaUJBQWlCLENBQUNhLElBQUksRUFBRU8sT0FBTyxDQUFDLEVBQUU7UUFBRTtRQUN2QyxJQUFJQyxTQUFTLEdBQUdSLElBQUksQ0FBQ08sT0FBTyxDQUFDLENBQUMsQ0FBQztRQUMvQlgsRUFBRSxDQUFDVyxPQUFPLENBQUMsR0FBR0MsU0FBUyxDQUFDLENBQUM7TUFDMUI7SUFDRDtFQUNEOztFQUVBLE9BQU9aLEVBQUUsQ0FBQyxDQUFDO0FBQ1osQ0FBQyJ9