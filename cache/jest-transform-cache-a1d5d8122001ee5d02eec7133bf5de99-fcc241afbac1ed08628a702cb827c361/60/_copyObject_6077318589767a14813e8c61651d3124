f1edf52574a15d7a82aa9bc12d725312
"use strict";

var assignValue = require('./_assignValue'),
  baseAssignValue = require('./_baseAssignValue');

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1,
    length = props.length;
  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}
module.exports = copyObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NpZ25WYWx1ZSIsInJlcXVpcmUiLCJiYXNlQXNzaWduVmFsdWUiLCJjb3B5T2JqZWN0Iiwic291cmNlIiwicHJvcHMiLCJvYmplY3QiLCJjdXN0b21pemVyIiwiaXNOZXciLCJpbmRleCIsImxlbmd0aCIsImtleSIsIm5ld1ZhbHVlIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIl9jb3B5T2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NpZ25WYWx1ZSA9IHJlcXVpcmUoJy4vX2Fzc2lnblZhbHVlJyksXG4gICAgYmFzZUFzc2lnblZhbHVlID0gcmVxdWlyZSgnLi9fYmFzZUFzc2lnblZhbHVlJyk7XG5cbi8qKlxuICogQ29waWVzIHByb3BlcnRpZXMgb2YgYHNvdXJjZWAgdG8gYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgZnJvbS5cbiAqIEBwYXJhbSB7QXJyYXl9IHByb3BzIFRoZSBwcm9wZXJ0eSBpZGVudGlmaWVycyB0byBjb3B5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3Q9e31dIFRoZSBvYmplY3QgdG8gY29weSBwcm9wZXJ0aWVzIHRvLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29waWVkIHZhbHVlcy5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gKi9cbmZ1bmN0aW9uIGNvcHlPYmplY3Qoc291cmNlLCBwcm9wcywgb2JqZWN0LCBjdXN0b21pemVyKSB7XG4gIHZhciBpc05ldyA9ICFvYmplY3Q7XG4gIG9iamVjdCB8fCAob2JqZWN0ID0ge30pO1xuXG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGtleSA9IHByb3BzW2luZGV4XTtcblxuICAgIHZhciBuZXdWYWx1ZSA9IGN1c3RvbWl6ZXJcbiAgICAgID8gY3VzdG9taXplcihvYmplY3Rba2V5XSwgc291cmNlW2tleV0sIGtleSwgb2JqZWN0LCBzb3VyY2UpXG4gICAgICA6IHVuZGVmaW5lZDtcblxuICAgIGlmIChuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBuZXdWYWx1ZSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgICBpZiAoaXNOZXcpIHtcbiAgICAgIGJhc2VBc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgbmV3VmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgbmV3VmFsdWUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqZWN0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvcHlPYmplY3Q7XG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7RUFDdkNDLGVBQWUsR0FBR0QsT0FBTyxDQUFDLG9CQUFvQixDQUFDOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVNFLFVBQVVBLENBQUNDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLFVBQVUsRUFBRTtFQUNyRCxJQUFJQyxLQUFLLEdBQUcsQ0FBQ0YsTUFBTTtFQUNuQkEsTUFBTSxLQUFLQSxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7RUFFdkIsSUFBSUcsS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNWQyxNQUFNLEdBQUdMLEtBQUssQ0FBQ0ssTUFBTTtFQUV6QixPQUFPLEVBQUVELEtBQUssR0FBR0MsTUFBTSxFQUFFO0lBQ3ZCLElBQUlDLEdBQUcsR0FBR04sS0FBSyxDQUFDSSxLQUFLLENBQUM7SUFFdEIsSUFBSUcsUUFBUSxHQUFHTCxVQUFVLEdBQ3JCQSxVQUFVLENBQUNELE1BQU0sQ0FBQ0ssR0FBRyxDQUFDLEVBQUVQLE1BQU0sQ0FBQ08sR0FBRyxDQUFDLEVBQUVBLEdBQUcsRUFBRUwsTUFBTSxFQUFFRixNQUFNLENBQUMsR0FDekRTLFNBQVM7SUFFYixJQUFJRCxRQUFRLEtBQUtDLFNBQVMsRUFBRTtNQUMxQkQsUUFBUSxHQUFHUixNQUFNLENBQUNPLEdBQUcsQ0FBQztJQUN4QjtJQUNBLElBQUlILEtBQUssRUFBRTtNQUNUTixlQUFlLENBQUNJLE1BQU0sRUFBRUssR0FBRyxFQUFFQyxRQUFRLENBQUM7SUFDeEMsQ0FBQyxNQUFNO01BQ0xaLFdBQVcsQ0FBQ00sTUFBTSxFQUFFSyxHQUFHLEVBQUVDLFFBQVEsQ0FBQztJQUNwQztFQUNGO0VBQ0EsT0FBT04sTUFBTTtBQUNmO0FBRUFRLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHWixVQUFVIn0=