06a5b5a36377b3e4a63cdc293d214da1
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var index_1 = require("./index");
var MILLISECONDS_PER_SECOND = 1000;
var NANOSECONDS_PER_MILLISECOND = 1000000;
function millisecondsSinceEpochToTimestamp(millisecondsSinceEpoch) {
  return new index_1.messages.Timestamp(toSecondsAndNanos(millisecondsSinceEpoch));
}
exports.millisecondsSinceEpochToTimestamp = millisecondsSinceEpochToTimestamp;
function millisecondsToDuration(durationInMilliseconds) {
  return new index_1.messages.Duration(toSecondsAndNanos(durationInMilliseconds));
}
exports.millisecondsToDuration = millisecondsToDuration;
function timestampToMillisecondsSinceEpoch(timestamp) {
  var nanos = timestamp.nanos,
    seconds = timestamp.seconds;
  return toMillis(seconds, nanos);
}
exports.timestampToMillisecondsSinceEpoch = timestampToMillisecondsSinceEpoch;
function durationToMilliseconds(duration) {
  var nanos = duration.nanos,
    seconds = duration.seconds;
  return toMillis(seconds, nanos);
}
exports.durationToMilliseconds = durationToMilliseconds;
function toSecondsAndNanos(milliseconds) {
  var seconds = Math.floor(milliseconds / MILLISECONDS_PER_SECOND);
  var nanos = Math.floor(Math.floor(milliseconds % MILLISECONDS_PER_SECOND) * NANOSECONDS_PER_MILLISECOND);
  return {
    seconds: seconds,
    nanos: nanos
  };
}
function toMillis(seconds, nanos) {
  var secondMillis;
  if (typeof seconds === 'number') {
    secondMillis = seconds * MILLISECONDS_PER_SECOND;
  } else {
    secondMillis = seconds.multiply(MILLISECONDS_PER_SECOND).toNumber();
  }
  var nanoMillis = nanos / NANOSECONDS_PER_MILLISECOND;
  return Math.floor(secondMillis + nanoMillis);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbmRleF8xIiwicmVxdWlyZSIsIk1JTExJU0VDT05EU19QRVJfU0VDT05EIiwiTkFOT1NFQ09ORFNfUEVSX01JTExJU0VDT05EIiwibWlsbGlzZWNvbmRzU2luY2VFcG9jaFRvVGltZXN0YW1wIiwibWlsbGlzZWNvbmRzU2luY2VFcG9jaCIsIm1lc3NhZ2VzIiwiVGltZXN0YW1wIiwidG9TZWNvbmRzQW5kTmFub3MiLCJleHBvcnRzIiwibWlsbGlzZWNvbmRzVG9EdXJhdGlvbiIsImR1cmF0aW9uSW5NaWxsaXNlY29uZHMiLCJEdXJhdGlvbiIsInRpbWVzdGFtcFRvTWlsbGlzZWNvbmRzU2luY2VFcG9jaCIsInRpbWVzdGFtcCIsIm5hbm9zIiwic2Vjb25kcyIsInRvTWlsbGlzIiwiZHVyYXRpb25Ub01pbGxpc2Vjb25kcyIsImR1cmF0aW9uIiwibWlsbGlzZWNvbmRzIiwiTWF0aCIsImZsb29yIiwic2Vjb25kTWlsbGlzIiwibXVsdGlwbHkiLCJ0b051bWJlciIsIm5hbm9NaWxsaXMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvVGltZUNvbnZlcnNpb24udHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxPQUFBO0FBRUEsSUFBTUMsdUJBQXVCLEdBQUcsSUFBSTtBQUNwQyxJQUFNQywyQkFBMkIsR0FBRyxPQUFPO0FBRTNDLFNBQWdCQyxpQ0FBaUNBLENBQy9DQyxzQkFBOEI7RUFFOUIsT0FBTyxJQUFJTCxPQUFBLENBQUFNLFFBQVEsQ0FBQ0MsU0FBUyxDQUFDQyxpQkFBaUIsQ0FBQ0gsc0JBQXNCLENBQUMsQ0FBQztBQUMxRTtBQUpBSSxPQUFBLENBQUFMLGlDQUFBLEdBQUFBLGlDQUFBO0FBTUEsU0FBZ0JNLHNCQUFzQkEsQ0FDcENDLHNCQUE4QjtFQUU5QixPQUFPLElBQUlYLE9BQUEsQ0FBQU0sUUFBUSxDQUFDTSxRQUFRLENBQUNKLGlCQUFpQixDQUFDRyxzQkFBc0IsQ0FBQyxDQUFDO0FBQ3pFO0FBSkFGLE9BQUEsQ0FBQUMsc0JBQUEsR0FBQUEsc0JBQUE7QUFNQSxTQUFnQkcsaUNBQWlDQSxDQUMvQ0MsU0FBOEI7RUFFdEIsSUFBQUMsS0FBQSxHQUFBRCxTQUFBLENBQUFDLEtBQUs7SUFBRUMsT0FBQSxHQUFBRixTQUFBLENBQUFFLE9BQU87RUFDdEIsT0FBT0MsUUFBUSxDQUFDRCxPQUFPLEVBQUVELEtBQUssQ0FBQztBQUNqQztBQUxBTixPQUFBLENBQUFJLGlDQUFBLEdBQUFBLGlDQUFBO0FBT0EsU0FBZ0JLLHNCQUFzQkEsQ0FBQ0MsUUFBNEI7RUFDekQsSUFBQUosS0FBQSxHQUFBSSxRQUFBLENBQUFKLEtBQUs7SUFBRUMsT0FBQSxHQUFBRyxRQUFBLENBQUFILE9BQU87RUFDdEIsT0FBT0MsUUFBUSxDQUFDRCxPQUFPLEVBQUVELEtBQUssQ0FBQztBQUNqQztBQUhBTixPQUFBLENBQUFTLHNCQUFBLEdBQUFBLHNCQUFBO0FBS0EsU0FBU1YsaUJBQWlCQSxDQUFDWSxZQUFvQjtFQUM3QyxJQUFNSixPQUFPLEdBQUdLLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixZQUFZLEdBQUdsQix1QkFBdUIsQ0FBQztFQUNsRSxJQUFNYSxLQUFLLEdBQUdNLElBQUksQ0FBQ0MsS0FBSyxDQUN0QkQsSUFBSSxDQUFDQyxLQUFLLENBQUNGLFlBQVksR0FBR2xCLHVCQUF1QixDQUFDLEdBQ2hEQywyQkFBMkIsQ0FDOUI7RUFDRCxPQUFPO0lBQUVhLE9BQU8sRUFBQUEsT0FBQTtJQUFFRCxLQUFLLEVBQUFBO0VBQUEsQ0FBRTtBQUMzQjtBQUVBLFNBQVNFLFFBQVFBLENBQUNELE9BQXNCLEVBQUVELEtBQWE7RUFDckQsSUFBSVEsWUFBb0I7RUFDeEIsSUFBSSxPQUFPUCxPQUFPLEtBQUssUUFBUSxFQUFFO0lBQy9CTyxZQUFZLEdBQUlQLE9BQWtCLEdBQUdkLHVCQUF1QjtHQUM3RCxNQUFNO0lBQ0xxQixZQUFZLEdBQUlQLE9BQWdCLENBQzdCUSxRQUFRLENBQUN0Qix1QkFBdUIsQ0FBQyxDQUNqQ3VCLFFBQVEsRUFBRTs7RUFFZixJQUFNQyxVQUFVLEdBQUdYLEtBQUssR0FBR1osMkJBQTJCO0VBQ3RELE9BQU9rQixJQUFJLENBQUNDLEtBQUssQ0FBQ0MsWUFBWSxHQUFHRyxVQUFVLENBQUM7QUFDOUMifQ==