1d7d31c36cf52ab430bea5d54a769c88
"use strict";

_getJestObj().mock("axios");
var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _react2 = _interopRequireDefault(require("react"));
require("@testing-library/jest-dom/extend-expect");
require("text-encoding");
var _reactRouterDom = require("react-router-dom");
var _Details = _interopRequireDefault(require("../../Details"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getJestObj() {
  const {
    jest
  } = require("@jest/globals");
  _getJestObj = () => jest;
  return jest;
}
const feature = (0, _jestCucumber.loadFeature)("src/components/features/details.feature");
(0, _jestCucumber.defineFeature)(feature, test => {
  const location = {
    state: {
      Title: "Manmadhudu",
      Year: "2002",
      Rated: "N/A",
      Genre: "Comedy, Romance",
      Actors: "Nagarjuna Akkineni, Sonali Bendre, Anshu",
      Poster: "https://m.media-amazon.com/images/M/MV5BOTE1M2IwMzktNjI1Mi00ZTFkLTg4MmMtNTZmMjk4YTdhODlkXkEyXkFqcGdeQXVyNjE2NTgxOTE@._V1_SX300.jpg",
      Ratings: [{
        Source: "Internet Movie Database",
        Value: "8.3/10"
      }]
    }
  };
  test("Display details of a movie", ({
    given,
    when,
    then,
    and
  }) => {
    const screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRouterDom.MemoryRouter, {
      initialEntries: [location]
    }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Route, {
      path: "/",
      element: /*#__PURE__*/_react2.default.createElement(_Details.default, null)
    }))));
    given("I am on the details page", () => {
      expect(screen).toBeDefined();
      const movieTitle = screen.getByText("Manmadhudu");
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJfamVzdEN1Y3VtYmVyIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdDIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0Um91dGVyRG9tIiwiX0RldGFpbHMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImplc3QiLCJmZWF0dXJlIiwibG9hZEZlYXR1cmUiLCJkZWZpbmVGZWF0dXJlIiwidGVzdCIsImxvY2F0aW9uIiwic3RhdGUiLCJUaXRsZSIsIlllYXIiLCJSYXRlZCIsIkdlbnJlIiwiQWN0b3JzIiwiUG9zdGVyIiwiUmF0aW5ncyIsIlNvdXJjZSIsIlZhbHVlIiwiZ2l2ZW4iLCJ3aGVuIiwidGhlbiIsImFuZCIsInNjcmVlbiIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJNZW1vcnlSb3V0ZXIiLCJpbml0aWFsRW50cmllcyIsIlJvdXRlcyIsIlJvdXRlIiwicGF0aCIsImVsZW1lbnQiLCJleHBlY3QiLCJ0b0JlRGVmaW5lZCIsIm1vdmllVGl0bGUiLCJnZXRCeVRleHQiXSwic291cmNlcyI6WyJkZXRhaWxzLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVGZWF0dXJlLCBsb2FkRmVhdHVyZSB9IGZyb20gXCJqZXN0LWN1Y3VtYmVyXCI7XHJcbmltcG9ydCB7IGZpcmVFdmVudCwgcmVuZGVyLCB3YWl0Rm9yIH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IEJhc2UgZnJvbSBcIi4uLy4uL0Jhc2VcIjtcclxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcclxuaW1wb3J0IFwidGV4dC1lbmNvZGluZ1wiO1xyXG5pbXBvcnQge1xyXG4gIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxyXG4gIFJvdXRlcyxcclxuICBSb3V0ZSxcclxuICBNZW1vcnlSb3V0ZXIsXHJcbn0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvZGV0YWlscy5mZWF0dXJlXCIpO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XHJcbmltcG9ydCB7IGFjdCB9IGZyb20gXCJyZWFjdC1kb20vdGVzdC11dGlsc1wiO1xyXG5pbXBvcnQgRGV0YWlscyBmcm9tIFwiLi4vLi4vRGV0YWlsc1wiO1xyXG5qZXN0Lm1vY2soXCJheGlvc1wiKTtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIGNvbnN0IGxvY2F0aW9uID0ge1xyXG4gICAgc3RhdGU6IHtcclxuICAgICAgVGl0bGU6IFwiTWFubWFkaHVkdVwiLFxyXG4gICAgICBZZWFyOiBcIjIwMDJcIixcclxuICAgICAgUmF0ZWQ6IFwiTi9BXCIsXHJcbiAgICAgIEdlbnJlOiBcIkNvbWVkeSwgUm9tYW5jZVwiLFxyXG4gICAgICBBY3RvcnM6IFwiTmFnYXJqdW5hIEFra2luZW5pLCBTb25hbGkgQmVuZHJlLCBBbnNodVwiLFxyXG4gICAgICBQb3N0ZXI6XHJcbiAgICAgICAgXCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCT1RFMU0ySXdNemt0TmpJMU1pMDBaVEZrTFRnNE1tTXROVFptTWprNFlUZGhPRGxrWGtFeVhrRnFjR2RlUVhWeU5qRTJOVGd4T1RFQC5fVjFfU1gzMDAuanBnXCIsXHJcbiAgICAgIFJhdGluZ3M6IFt7IFNvdXJjZTogXCJJbnRlcm5ldCBNb3ZpZSBEYXRhYmFzZVwiLCBWYWx1ZTogXCI4LjMvMTBcIiB9XSxcclxuICAgIH0sXHJcbiAgfTtcclxuICB0ZXN0KFwiRGlzcGxheSBkZXRhaWxzIG9mIGEgbW92aWVcIiwgKHsgZ2l2ZW4sIHdoZW4sIHRoZW4sIGFuZCB9KSA9PiB7XHJcbiAgICBjb25zdCBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgIDxNZW1vcnlSb3V0ZXIgaW5pdGlhbEVudHJpZXM9e1tsb2NhdGlvbl19PlxyXG4gICAgICAgIDxSb3V0ZXM+XHJcbiAgICAgICAgICA8Um91dGUgcGF0aD1cIi9cIiBlbGVtZW50PXs8RGV0YWlscyAvPn0gLz5cclxuICAgICAgICA8L1JvdXRlcz5cclxuICAgICAgPC9NZW1vcnlSb3V0ZXI+XHJcbiAgICApO1xyXG4gICAgZ2l2ZW4oXCJJIGFtIG9uIHRoZSBkZXRhaWxzIHBhZ2VcIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgICBjb25zdCBtb3ZpZVRpdGxlID0gc2NyZWVuLmdldEJ5VGV4dChcIk1hbm1hZGh1ZHVcIik7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFnQkFBLFdBQUEsR0FBS0MsSUFBSSxDQUFDLE9BQU8sQ0FBQztBQWhCbEIsSUFBQUMsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsT0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0FBLE9BQUE7QUFDQUEsT0FBQTtBQUNBLElBQUFJLGVBQUEsR0FBQUosT0FBQTtBQVNBLElBQUFLLFFBQUEsR0FBQUYsc0JBQUEsQ0FBQUgsT0FBQTtBQUFvQyxTQUFBRyx1QkFBQUcsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUFBLFNBQUFULFlBQUE7RUFBQTtJQUFBWTtFQUFBLElBQUFULE9BQUE7RUFBQUgsV0FBQSxHQUFBQSxDQUFBLEtBQUFZLElBQUE7RUFBQSxPQUFBQSxJQUFBO0FBQUE7QUFIcEMsTUFBTUMsT0FBTyxHQUFHLElBQUFDLHlCQUFXLEVBQUMseUNBQXlDLENBQUM7QUFLdEUsSUFBQUMsMkJBQWEsRUFBQ0YsT0FBTyxFQUFHRyxJQUFJLElBQUs7RUFDL0IsTUFBTUMsUUFBUSxHQUFHO0lBQ2ZDLEtBQUssRUFBRTtNQUNMQyxLQUFLLEVBQUUsWUFBWTtNQUNuQkMsSUFBSSxFQUFFLE1BQU07TUFDWkMsS0FBSyxFQUFFLEtBQUs7TUFDWkMsS0FBSyxFQUFFLGlCQUFpQjtNQUN4QkMsTUFBTSxFQUFFLDBDQUEwQztNQUNsREMsTUFBTSxFQUNKLG9JQUFvSTtNQUN0SUMsT0FBTyxFQUFFLENBQUM7UUFBRUMsTUFBTSxFQUFFLHlCQUF5QjtRQUFFQyxLQUFLLEVBQUU7TUFBUyxDQUFDO0lBQ2xFO0VBQ0YsQ0FBQztFQUNEWCxJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztJQUFFWSxLQUFLO0lBQUVDLElBQUk7SUFBRUMsSUFBSTtJQUFFQztFQUFJLENBQUMsS0FBSztJQUNqRSxNQUFNQyxNQUFNLEdBQUcsSUFBQUMsYUFBTSxnQkFDbkI1QixPQUFBLENBQUFNLE9BQUEsQ0FBQXVCLGFBQUEsQ0FBQzNCLGVBQUEsQ0FBQTRCLFlBQVk7TUFBQ0MsY0FBYyxFQUFFLENBQUNuQixRQUFRO0lBQUUsZ0JBQ3ZDWixPQUFBLENBQUFNLE9BQUEsQ0FBQXVCLGFBQUEsQ0FBQzNCLGVBQUEsQ0FBQThCLE1BQU0scUJBQ0xoQyxPQUFBLENBQUFNLE9BQUEsQ0FBQXVCLGFBQUEsQ0FBQzNCLGVBQUEsQ0FBQStCLEtBQUs7TUFBQ0MsSUFBSSxFQUFDLEdBQUc7TUFBQ0MsT0FBTyxlQUFFbkMsT0FBQSxDQUFBTSxPQUFBLENBQUF1QixhQUFBLENBQUMxQixRQUFBLENBQUFHLE9BQU87SUFBSSxFQUFHLENBQ2pDLENBQ0ksQ0FDaEI7SUFDRGlCLEtBQUssQ0FBQywwQkFBMEIsRUFBRSxNQUFNO01BQ3RDYSxNQUFNLENBQUNULE1BQU0sQ0FBQyxDQUFDVSxXQUFXLEVBQUU7TUFDNUIsTUFBTUMsVUFBVSxHQUFHWCxNQUFNLENBQUNZLFNBQVMsQ0FBQyxZQUFZLENBQUM7SUFDbkQsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=