eb291816b59f5a9c787d3581d5e04a84
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = deepmerge;
exports.isPlainObject = isPlainObject;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
function isPlainObject(item) {
  return item !== null && typeof item === 'object' && item.constructor === Object;
}
function deepClone(source) {
  if (!isPlainObject(source)) {
    return source;
  }
  const output = {};
  Object.keys(source).forEach(key => {
    output[key] = deepClone(source[key]);
  });
  return output;
}
function deepmerge(target, source, options = {
  clone: true
}) {
  const output = options.clone ? (0, _extends2.default)({}, target) : target;
  if (isPlainObject(target) && isPlainObject(source)) {
    Object.keys(source).forEach(key => {
      // Avoid prototype pollution
      if (key === '__proto__') {
        return;
      }
      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {
        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.
        output[key] = deepmerge(target[key], source[key], options);
      } else if (options.clone) {
        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];
      } else {
        output[key] = source[key];
      }
    });
  }
  return output;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImRlZXBtZXJnZSIsImlzUGxhaW5PYmplY3QiLCJfZXh0ZW5kczIiLCJpdGVtIiwiY29uc3RydWN0b3IiLCJkZWVwQ2xvbmUiLCJzb3VyY2UiLCJvdXRwdXQiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInRhcmdldCIsIm9wdGlvbnMiLCJjbG9uZSJdLCJzb3VyY2VzIjpbImRlZXBtZXJnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZGVlcG1lcmdlO1xuZXhwb3J0cy5pc1BsYWluT2JqZWN0ID0gaXNQbGFpbk9iamVjdDtcbnZhciBfZXh0ZW5kczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIikpO1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChpdGVtKSB7XG4gIHJldHVybiBpdGVtICE9PSBudWxsICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiBpdGVtLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59XG5mdW5jdGlvbiBkZWVwQ2xvbmUoc291cmNlKSB7XG4gIGlmICghaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuICBjb25zdCBvdXRwdXQgPSB7fTtcbiAgT2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgb3V0cHV0W2tleV0gPSBkZWVwQ2xvbmUoc291cmNlW2tleV0pO1xuICB9KTtcbiAgcmV0dXJuIG91dHB1dDtcbn1cbmZ1bmN0aW9uIGRlZXBtZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucyA9IHtcbiAgY2xvbmU6IHRydWVcbn0pIHtcbiAgY29uc3Qgb3V0cHV0ID0gb3B0aW9ucy5jbG9uZSA/ICgwLCBfZXh0ZW5kczIuZGVmYXVsdCkoe30sIHRhcmdldCkgOiB0YXJnZXQ7XG4gIGlmIChpc1BsYWluT2JqZWN0KHRhcmdldCkgJiYgaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgT2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAvLyBBdm9pZCBwcm90b3R5cGUgcG9sbHV0aW9uXG4gICAgICBpZiAoa2V5ID09PSAnX19wcm90b19fJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoaXNQbGFpbk9iamVjdChzb3VyY2Vba2V5XSkgJiYga2V5IGluIHRhcmdldCAmJiBpc1BsYWluT2JqZWN0KHRhcmdldFtrZXldKSkge1xuICAgICAgICAvLyBTaW5jZSBgb3V0cHV0YCBpcyBhIGNsb25lIG9mIGB0YXJnZXRgIGFuZCB3ZSBoYXZlIG5hcnJvd2VkIGB0YXJnZXRgIGluIHRoaXMgYmxvY2sgd2UgY2FuIGNhc3QgdG8gdGhlIHNhbWUgdHlwZS5cbiAgICAgICAgb3V0cHV0W2tleV0gPSBkZWVwbWVyZ2UodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldLCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5jbG9uZSkge1xuICAgICAgICBvdXRwdXRba2V5XSA9IGlzUGxhaW5PYmplY3Qoc291cmNlW2tleV0pID8gZGVlcENsb25lKHNvdXJjZVtrZXldKSA6IHNvdXJjZVtrZXldO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0cHV0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBy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