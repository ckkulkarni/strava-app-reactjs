{"version":3,"names":["_getJestObj","mock","_jestCucumber","require","_react","_react2","_interopRequireDefault","_reactRouterDom","_Activities","_axios","_reactRedux","_toolkit","_stravaSlice","obj","__esModule","default","jest","feature","loadFeature","store","screen","REACT_APP_CLIENTID","process","env","REACT_APP_CLIENT_SECRET","scope","defineFeature","test","beforeEach","configureStore","reducer","strava","stravaSlice","render","createElement","Provider","MemoryRouter","mockActivities","id","name","type","distance","average_speed","max_speed","average_heartrate","localStorage","setItem","given","when","then","and","expect","toBeDefined","accessToken","getItem","toBe","axios","get","mockResolvedValueOnce","data","activityList","getByTestId","toBeInTheDocument","forEach","activity","activityCard","getByText","sportsType","avgSpeed","maxSpeed","heartRate"],"sources":["activities.steps.tsx"],"sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport \"text-encoding\";\r\nimport * as router from \"react-router\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport Activities from \"../../pages/Activities\";\r\nimport axios from \"axios\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport stravaSlice from \"../../redux/reducer/stravaSlice\";\r\nconst feature = loadFeature(\"src/components/features/activities.feature\");\r\nlet store: any;\r\nlet screen: any;\r\njest.mock(\"axios\");\r\nconst { REACT_APP_CLIENTID } = process.env;\r\nconst { REACT_APP_CLIENT_SECRET } = process.env;\r\nconst scope = \"read,activity:read\";\r\ndefineFeature(feature, (test) => {\r\n  beforeEach(() => {\r\n    store = configureStore({\r\n      reducer: {\r\n        strava: stravaSlice,\r\n      },\r\n    });\r\n    screen = render(\r\n      <Provider store={store}>\r\n        <MemoryRouter>\r\n          <Activities />\r\n        </MemoryRouter>\r\n      </Provider>\r\n    );\r\n  });\r\n  const mockActivities = [\r\n    {\r\n      id: 1,\r\n      name: \"Morning Run\",\r\n      type: \"Run\",\r\n      distance: 1000,\r\n      average_speed: 2.5,\r\n      max_speed: 5.0,\r\n      average_heartrate: 140,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Evening Run\",\r\n      type: \"Run\",\r\n      distance: 1000,\r\n      average_speed: 1.3,\r\n      max_speed: 2.0,\r\n      average_heartrate: 112,\r\n    },\r\n  ];\r\n  localStorage.setItem(\"access_token\", \"mock-token\");\r\n  test(\"User sees a list of activities\", ({ given, when, then, and }) => {\r\n    given(\"the user is on the Activities page\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n    when(\"the user's activities are fetched\", async () => {\r\n      const accessToken = localStorage.getItem(\"access_token\");\r\n      expect(accessToken).toBe(\"mock-token\");\r\n      (axios.get as jest.Mock).mockResolvedValueOnce({\r\n        data: mockActivities,\r\n      });\r\n    });\r\n    then(\"the user should see a list of activities\", () => {\r\n      const activityList = screen.getByTestId(\"activity-container\");\r\n      expect(activityList).toBeInTheDocument();\r\n      mockActivities.forEach((activity) => {\r\n        const activityCard = screen.getByText(activity.name);\r\n        expect(activityCard).toBeInTheDocument();\r\n\r\n        const sportsType = screen.getByText(`Sports Type: ${activity.type}`);\r\n        expect(sportsType).toBeInTheDocument();\r\n\r\n        const distance = screen.getByText(\r\n          `Distance: ${activity.distance} meters`\r\n        );\r\n        expect(distance).toBeInTheDocument();\r\n\r\n        const avgSpeed = screen.getByText(\r\n          `Average speed: ${activity.average_speed} m/s`\r\n        );\r\n        expect(avgSpeed).toBeInTheDocument();\r\n\r\n        const maxSpeed = screen.getByText(\r\n          `Max speed: ${activity.max_speed} m/s`\r\n        );\r\n        expect(maxSpeed).toBeInTheDocument();\r\n\r\n        const heartRate = screen.getByText(\r\n          `Heart rate: ${activity.average_heartrate}`\r\n        );\r\n        expect(heartRate).toBeInTheDocument();\r\n      });\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}