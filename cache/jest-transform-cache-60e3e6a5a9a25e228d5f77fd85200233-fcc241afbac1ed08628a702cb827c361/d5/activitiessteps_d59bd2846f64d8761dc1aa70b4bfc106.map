{"version":3,"names":["_getJestObj","mock","_jestCucumber","require","_react","_react2","_interopRequireDefault","router","_interopRequireWildcard","_reactRouterDom","_Activities","_axios","_testUtils","_reactRedux","_toolkit","_stravaSlice","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","jest","feature","loadFeature","store","screen","REACT_APP_CLIENTID","process","env","REACT_APP_CLIENT_SECRET","scope","navigate","fn","spyOn","mockImplementation","defineFeature","test","beforeEach","configureStore","reducer","strava","stravaSlice","render","createElement","Provider","MemoryRouter","localStorage","setItem","mockActivities","id","name","type","distance","average_speed","max_speed","average_heartrate","axios","mockResolvedValueOnce","data","given","when","then","and","expect","toBeDefined","accessToken","getItem","toBe","waitFor","activityList","getByTestId","toBeInTheDocument","activityCard","getByText","sportsType","getAllByText","avgSpeed","maxSpeed","heartRate","createActivityButton","getByRole","act","fireEvent","click","toHaveBeenCalled"],"sources":["activities.steps.tsx"],"sourcesContent":["import { defineFeature, loadFeature } from \"jest-cucumber\";\r\nimport { fireEvent, render, waitFor } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport \"text-encoding\";\r\nimport * as router from \"react-router\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  MemoryRouter,\r\n} from \"react-router-dom\";\r\nimport Activities from \"../../pages/Activities\";\r\nimport axios from \"axios\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport stravaSlice from \"../../redux/reducer/stravaSlice\";\r\nconst feature = loadFeature(\"src/components/features/activities.feature\");\r\nlet store: any;\r\nlet screen: any;\r\njest.mock(\"axios\");\r\nconst { REACT_APP_CLIENTID } = process.env;\r\nconst { REACT_APP_CLIENT_SECRET } = process.env;\r\nconst scope = \"read,activity:read\";\r\nconst navigate = jest.fn();\r\njest.spyOn(router, \"useNavigate\").mockImplementation(() => navigate);\r\ndefineFeature(feature, (test) => {\r\n  beforeEach(() => {\r\n    store = configureStore({\r\n      reducer: {\r\n        strava: stravaSlice,\r\n      },\r\n    });\r\n    screen = render(\r\n      <Provider store={store}>\r\n        <MemoryRouter>\r\n          <Activities />\r\n        </MemoryRouter>\r\n      </Provider>\r\n    );\r\n  });\r\n  localStorage.setItem(\"access_token\", \"mock-token\");\r\n  const mockActivities = [\r\n    {\r\n      id: 1,\r\n      name: \"Morning Run\",\r\n      type: \"Run\",\r\n      distance: 2000,\r\n      average_speed: 2.5,\r\n      max_speed: 5.0,\r\n      average_heartrate: 140,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Evening Run\",\r\n      type: \"Run\",\r\n      distance: 1000,\r\n      average_speed: 1.3,\r\n      max_speed: 2.0,\r\n      average_heartrate: 112,\r\n    },\r\n  ];\r\n\r\n  (axios.get as jest.Mock).mockResolvedValueOnce({\r\n    data: mockActivities,\r\n  });\r\n\r\n  test(\"User sees a list of activities\", ({ given, when, then, and }) => {\r\n    given(\"the user is on the Activities page\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n    when(\"the user's activities are fetched\", async () => {\r\n      const accessToken = localStorage.getItem(\"access_token\");\r\n      expect(accessToken).toBe(\"mock-token\");\r\n    });\r\n    then(\"the user should see a list of activities\", async () => {\r\n      await waitFor(() => {\r\n        const activityList = screen.getByTestId(\"activity-container\");\r\n        expect(activityList).toBeInTheDocument();\r\n        const activityCard = screen.getByText(\"Morning Run\");\r\n        expect(activityCard).toBeDefined();\r\n\r\n        const sportsType = screen.getAllByText(\"Run\");\r\n        expect(sportsType).toBeDefined();\r\n\r\n        const distance = screen.getByText(\"2000 meters\");\r\n        expect(distance).toBeInTheDocument();\r\n\r\n        const avgSpeed = screen.getByText(\"2.5 m/s\");\r\n        expect(avgSpeed).toBeInTheDocument();\r\n\r\n        const maxSpeed = screen.getByText(\"5 m/s\");\r\n        expect(maxSpeed).toBeInTheDocument();\r\n\r\n        const heartRate = screen.getByText(\"140\");\r\n        expect(heartRate).toBeInTheDocument();\r\n      });\r\n    });\r\n  });\r\n\r\n  test('User clicks on \"Create Activity\" button', ({\r\n    given,\r\n    when,\r\n    then,\r\n    and,\r\n  }) => {\r\n    given(\"the user is on the Activities page\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n    when('the user clicks on the \"Create Activity\" button', async () => {\r\n      const createActivityButton = screen.getByRole(\"link\", {\r\n        name: \"Create Activity\",\r\n      });\r\n      act(() => {\r\n        fireEvent.click(createActivityButton);\r\n      });\r\n    });\r\n    then('the user should be redirected to the \"Create Activity\" page', () => {\r\n      expect(navigate).toHaveBeenCalled();\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}