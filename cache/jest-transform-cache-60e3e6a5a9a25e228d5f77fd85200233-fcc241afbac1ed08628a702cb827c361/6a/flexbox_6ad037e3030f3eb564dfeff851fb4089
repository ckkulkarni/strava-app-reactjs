c3ea60f57835736b058030dcc9d096e9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.order = exports.justifySelf = exports.justifyItems = exports.justifyContent = exports.flexWrap = exports.flexShrink = exports.flexGrow = exports.flexDirection = exports.flexBasis = exports.flex = exports.default = exports.alignSelf = exports.alignItems = exports.alignContent = void 0;
var _style = _interopRequireDefault(require("./style"));
var _compose = _interopRequireDefault(require("./compose"));
const flexBasis = (0, _style.default)({
  prop: 'flexBasis'
});
exports.flexBasis = flexBasis;
const flexDirection = (0, _style.default)({
  prop: 'flexDirection'
});
exports.flexDirection = flexDirection;
const flexWrap = (0, _style.default)({
  prop: 'flexWrap'
});
exports.flexWrap = flexWrap;
const justifyContent = (0, _style.default)({
  prop: 'justifyContent'
});
exports.justifyContent = justifyContent;
const alignItems = (0, _style.default)({
  prop: 'alignItems'
});
exports.alignItems = alignItems;
const alignContent = (0, _style.default)({
  prop: 'alignContent'
});
exports.alignContent = alignContent;
const order = (0, _style.default)({
  prop: 'order'
});
exports.order = order;
const flex = (0, _style.default)({
  prop: 'flex'
});
exports.flex = flex;
const flexGrow = (0, _style.default)({
  prop: 'flexGrow'
});
exports.flexGrow = flexGrow;
const flexShrink = (0, _style.default)({
  prop: 'flexShrink'
});
exports.flexShrink = flexShrink;
const alignSelf = (0, _style.default)({
  prop: 'alignSelf'
});
exports.alignSelf = alignSelf;
const justifyItems = (0, _style.default)({
  prop: 'justifyItems'
});
exports.justifyItems = justifyItems;
const justifySelf = (0, _style.default)({
  prop: 'justifySelf'
});
exports.justifySelf = justifySelf;
const flexbox = (0, _compose.default)(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
var _default = flexbox;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwib3JkZXIiLCJqdXN0aWZ5U2VsZiIsImp1c3RpZnlJdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleFdyYXAiLCJmbGV4U2hyaW5rIiwiZmxleEdyb3ciLCJmbGV4RGlyZWN0aW9uIiwiZmxleEJhc2lzIiwiZmxleCIsImRlZmF1bHQiLCJhbGlnblNlbGYiLCJhbGlnbkl0ZW1zIiwiYWxpZ25Db250ZW50IiwiX3N0eWxlIiwiX2NvbXBvc2UiLCJwcm9wIiwiZmxleGJveCIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiZmxleGJveC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5vcmRlciA9IGV4cG9ydHMuanVzdGlmeVNlbGYgPSBleHBvcnRzLmp1c3RpZnlJdGVtcyA9IGV4cG9ydHMuanVzdGlmeUNvbnRlbnQgPSBleHBvcnRzLmZsZXhXcmFwID0gZXhwb3J0cy5mbGV4U2hyaW5rID0gZXhwb3J0cy5mbGV4R3JvdyA9IGV4cG9ydHMuZmxleERpcmVjdGlvbiA9IGV4cG9ydHMuZmxleEJhc2lzID0gZXhwb3J0cy5mbGV4ID0gZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5hbGlnblNlbGYgPSBleHBvcnRzLmFsaWduSXRlbXMgPSBleHBvcnRzLmFsaWduQ29udGVudCA9IHZvaWQgMDtcbnZhciBfc3R5bGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3N0eWxlXCIpKTtcbnZhciBfY29tcG9zZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY29tcG9zZVwiKSk7XG5jb25zdCBmbGV4QmFzaXMgPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2ZsZXhCYXNpcydcbn0pO1xuZXhwb3J0cy5mbGV4QmFzaXMgPSBmbGV4QmFzaXM7XG5jb25zdCBmbGV4RGlyZWN0aW9uID0gKDAsIF9zdHlsZS5kZWZhdWx0KSh7XG4gIHByb3A6ICdmbGV4RGlyZWN0aW9uJ1xufSk7XG5leHBvcnRzLmZsZXhEaXJlY3Rpb24gPSBmbGV4RGlyZWN0aW9uO1xuY29uc3QgZmxleFdyYXAgPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2ZsZXhXcmFwJ1xufSk7XG5leHBvcnRzLmZsZXhXcmFwID0gZmxleFdyYXA7XG5jb25zdCBqdXN0aWZ5Q29udGVudCA9ICgwLCBfc3R5bGUuZGVmYXVsdCkoe1xuICBwcm9wOiAnanVzdGlmeUNvbnRlbnQnXG59KTtcbmV4cG9ydHMuanVzdGlmeUNvbnRlbnQgPSBqdXN0aWZ5Q29udGVudDtcbmNvbnN0IGFsaWduSXRlbXMgPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2FsaWduSXRlbXMnXG59KTtcbmV4cG9ydHMuYWxpZ25JdGVtcyA9IGFsaWduSXRlbXM7XG5jb25zdCBhbGlnbkNvbnRlbnQgPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2FsaWduQ29udGVudCdcbn0pO1xuZXhwb3J0cy5hbGlnbkNvbnRlbnQgPSBhbGlnbkNvbnRlbnQ7XG5jb25zdCBvcmRlciA9ICgwLCBfc3R5bGUuZGVmYXVsdCkoe1xuICBwcm9wOiAnb3JkZXInXG59KTtcbmV4cG9ydHMub3JkZXIgPSBvcmRlcjtcbmNvbnN0IGZsZXggPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2ZsZXgnXG59KTtcbmV4cG9ydHMuZmxleCA9IGZsZXg7XG5jb25zdCBmbGV4R3JvdyA9ICgwLCBfc3R5bGUuZGVmYXVsdCkoe1xuICBwcm9wOiAnZmxleEdyb3cnXG59KTtcbmV4cG9ydHMuZmxleEdyb3cgPSBmbGV4R3JvdztcbmNvbnN0IGZsZXhTaHJpbmsgPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2ZsZXhTaHJpbmsnXG59KTtcbmV4cG9ydHMuZmxleFNocmluayA9IGZsZXhTaHJpbms7XG5jb25zdCBhbGlnblNlbGYgPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2FsaWduU2VsZidcbn0pO1xuZXhwb3J0cy5hbGlnblNlbGYgPSBhbGlnblNlbGY7XG5jb25zdCBqdXN0aWZ5SXRlbXMgPSAoMCwgX3N0eWxlLmRlZmF1bHQpKHtcbiAgcHJvcDogJ2p1c3RpZnlJdGVtcydcbn0pO1xuZXhwb3J0cy5qdXN0aWZ5SXRlbXMgPSBqdXN0aWZ5SXRlbXM7XG5jb25zdCBqdXN0aWZ5U2VsZiA9ICgwLCBfc3R5bGUuZGVmYXVsdCkoe1xuICBwcm9wOiAnanVzdGlmeVNlbGYnXG59KTtcbmV4cG9ydHMuanVzdGlmeVNlbGYgPSBqdXN0aWZ5U2VsZjtcbmNvbnN0IGZsZXhib3ggPSAoMCwgX2NvbXBvc2UuZGVmYXVsdCkoZmxleEJhc2lzLCBmbGV4RGlyZWN0aW9uLCBmbGV4V3JhcCwganVzdGlmeUNvbnRlbnQsIGFsaWduSXRlbXMsIGFsaWduQ29udGVudCwgb3JkZXIsIGZsZXgsIGZsZXhHcm93LCBmbGV4U2hyaW5rLCBhbGlnblNlbGYsIGp1c3RpZnlJdGVtcywganVzdGlmeVNlbGYpO1xudmFyIF9kZWZhdWx0ID0gZmxleGJveDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxzQkFBc0IsR0FBR0MsT0FBTyxDQUFDLDhDQUE4QyxDQUFDO0FBQ3BGQyxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUMzQ0MsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxDQUFDO0FBQ0ZELE9BQU8sQ0FBQ0UsS0FB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