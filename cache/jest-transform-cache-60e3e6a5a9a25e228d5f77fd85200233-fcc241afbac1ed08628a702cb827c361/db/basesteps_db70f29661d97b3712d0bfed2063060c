ad0b97134ec13d4c65c95c46f573622c
"use strict";

var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _react2 = _interopRequireDefault(require("react"));
require("@testing-library/jest-dom/extend-expect");
require("text-encoding");
var _reactRouterDom = require("react-router-dom");
var _Base = _interopRequireDefault(require("../../pages/Base"));
var _testUtils = require("react-dom/test-utils");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _stravaSlice = _interopRequireDefault(require("../../redux/reducer/stravaSlice"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
let store;
let screen;
(0, _jestCucumber.defineFeature)(feature, test => {
  beforeEach(() => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        strava: _stravaSlice.default
      }
    });
    screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Route, {
      path: "/",
      element: /*#__PURE__*/_react2.default.createElement(_Base.default, null)
    })))));
  });
  test('User is not logged in and clicks on "Login with Strava" button', ({
    given,
    when,
    then,
    and
  }) => {
    given("I am on the home page", () => {
      expect(screen).toBeDefined();
    });
    when('I click on "Login With Strava" button', () => {
      const loginButton = screen.getByRole("button", {
        name: "Login With Strava"
      });
      (0, _testUtils.act)(() => {
        _react.fireEvent.click(loginButton);
      });
    });
    then("I should be redirected to the Strava login page", async () => {
      expect(window.location.href).toMatch(/www\.strava\.com\/oauth\/authorize/);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdEN1Y3VtYmVyIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdDIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0Um91dGVyRG9tIiwiX0Jhc2UiLCJfdGVzdFV0aWxzIiwiX3JlYWN0UmVkdXgiLCJfdG9vbGtpdCIsIl9zdHJhdmFTbGljZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwic3RvcmUiLCJzY3JlZW4iLCJkZWZpbmVGZWF0dXJlIiwidGVzdCIsImJlZm9yZUVhY2giLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJzdHJhdmEiLCJzdHJhdmFTbGljZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsIkJyb3dzZXJSb3V0ZXIiLCJSb3V0ZXMiLCJSb3V0ZSIsInBhdGgiLCJlbGVtZW50IiwiZ2l2ZW4iLCJ3aGVuIiwidGhlbiIsImFuZCIsImV4cGVjdCIsInRvQmVEZWZpbmVkIiwibG9naW5CdXR0b24iLCJnZXRCeVJvbGUiLCJuYW1lIiwiYWN0IiwiZmlyZUV2ZW50IiwiY2xpY2siLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJ0b01hdGNoIl0sInNvdXJjZXMiOlsiYmFzZS5zdGVwcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmaW5lRmVhdHVyZSwgbG9hZEZlYXR1cmUgfSBmcm9tIFwiamVzdC1jdWN1bWJlclwiO1xyXG5pbXBvcnQgeyBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvciB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFwiQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbS9leHRlbmQtZXhwZWN0XCI7XHJcbmltcG9ydCBcInRleHQtZW5jb2RpbmdcIjtcclxuaW1wb3J0IHtcclxuICBCcm93c2VyUm91dGVyIGFzIFJvdXRlcixcclxuICBSb3V0ZXMsXHJcbiAgUm91dGUsXHJcbiAgTWVtb3J5Um91dGVyLFxyXG59IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCBCYXNlIGZyb20gXCIuLi8uLi9wYWdlcy9CYXNlXCI7XHJcbmltcG9ydCBheGlvcyBmcm9tIFwiYXhpb3NcIjtcclxuaW1wb3J0IHsgYWN0IH0gZnJvbSBcInJlYWN0LWRvbS90ZXN0LXV0aWxzXCI7XHJcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHN0cmF2YVNsaWNlIGZyb20gXCIuLi8uLi9yZWR1eC9yZWR1Y2VyL3N0cmF2YVNsaWNlXCI7XHJcbmNvbnN0IGZlYXR1cmUgPSBsb2FkRmVhdHVyZShcInNyYy9jb21wb25lbnRzL2ZlYXR1cmVzL2Jhc2UuZmVhdHVyZVwiKTtcclxuXHJcbmxldCBzdG9yZTogYW55O1xyXG5sZXQgc2NyZWVuOiBhbnk7XHJcblxyXG5kZWZpbmVGZWF0dXJlKGZlYXR1cmUsICh0ZXN0KSA9PiB7XHJcbiAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcclxuICAgICAgcmVkdWNlcjoge1xyXG4gICAgICAgIHN0cmF2YTogc3RyYXZhU2xpY2UsXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICAgIHNjcmVlbiA9IHJlbmRlcihcclxuICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgICAgPFJvdXRlcj5cclxuICAgICAgICAgIDxSb3V0ZXM+XHJcbiAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL1wiIGVsZW1lbnQ9ezxCYXNlIC8+fSAvPlxyXG4gICAgICAgICAgPC9Sb3V0ZXM+XHJcbiAgICAgICAgPC9Sb3V0ZXI+XHJcbiAgICAgIDwvUHJvdmlkZXI+XHJcbiAgICApO1xyXG4gIH0pO1xyXG4gIHRlc3QoJ1VzZXIgaXMgbm90IGxvZ2dlZCBpbiBhbmQgY2xpY2tzIG9uIFwiTG9naW4gd2l0aCBTdHJhdmFcIiBidXR0b24nLCAoe1xyXG4gICAgZ2l2ZW4sXHJcbiAgICB3aGVuLFxyXG4gICAgdGhlbixcclxuICAgIGFuZCxcclxuICB9KSA9PiB7XHJcbiAgICBnaXZlbihcIkkgYW0gb24gdGhlIGhvbWUgcGFnZVwiLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdChzY3JlZW4pLnRvQmVEZWZpbmVkKCk7XHJcbiAgICB9KTtcclxuICAgIHdoZW4oJ0kgY2xpY2sgb24gXCJMb2dpbiBXaXRoIFN0cmF2YVwiIGJ1dHRvbicsICgpID0+IHtcclxuICAgICAgY29uc3QgbG9naW5CdXR0b24gPSBzY3JlZW4uZ2V0QnlSb2xlKFwiYnV0dG9uXCIsIHtcclxuICAgICAgICBuYW1lOiBcIkxvZ2luIFdpdGggU3RyYXZhXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgICBhY3QoKCkgPT4ge1xyXG4gICAgICAgIGZpcmVFdmVudC5jbGljayhsb2dpbkJ1dHRvbik7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICB0aGVuKFwiSSBzaG91bGQgYmUgcmVkaXJlY3RlZCB0byB0aGUgU3RyYXZhIGxvZ2luIHBhZ2VcIiwgYXN5bmMgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qod2luZG93LmxvY2F0aW9uLmhyZWYpLnRvTWF0Y2goXHJcbiAgICAgICAgL3d3d1xcLnN0cmF2YVxcLmNvbVxcL29hdXRoXFwvYXV0aG9yaXplL1xyXG4gICAgICApO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0FBLE9BQUE7QUFDQUEsT0FBQTtBQUNBLElBQUFJLGVBQUEsR0FBQUosT0FBQTtBQU1BLElBQUFLLEtBQUEsR0FBQUYsc0JBQUEsQ0FBQUgsT0FBQTtBQUVBLElBQUFNLFVBQUEsR0FBQU4sT0FBQTtBQUNBLElBQUFPLFdBQUEsR0FBQVAsT0FBQTtBQUNBLElBQUFRLFFBQUEsR0FBQVIsT0FBQTtBQUNBLElBQUFTLFlBQUEsR0FBQU4sc0JBQUEsQ0FBQUgsT0FBQTtBQUEwRCxTQUFBRyx1QkFBQU8sR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUMxRCxNQUFNRyxPQUFPLEdBQUcsSUFBQUMseUJBQVcsRUFBQyxzQ0FBc0MsQ0FBQztBQUVuRSxJQUFJQyxLQUFVO0FBQ2QsSUFBSUMsTUFBVztBQUVmLElBQUFDLDJCQUFhLEVBQUNKLE9BQU8sRUFBR0ssSUFBSSxJQUFLO0VBQy9CQyxVQUFVLENBQUMsTUFBTTtJQUNmSixLQUFLLEdBQUcsSUFBQUssdUJBQWMsRUFBQztNQUNyQkMsT0FBTyxFQUFFO1FBQ1BDLE1BQU0sRUFBRUM7TUFDVjtJQUNGLENBQUMsQ0FBQztJQUNGUCxNQUFNLEdBQUcsSUFBQVEsYUFBTSxnQkFDYnRCLE9BQUEsQ0FBQVUsT0FBQSxDQUFBYSxhQUFBLENBQUNsQixXQUFBLENBQUFtQixRQUFRO01BQUNYLEtBQUssRUFBRUE7SUFBTSxnQkFDckJiLE9BQUEsQ0FBQVUsT0FBQSxDQUFBYSxhQUFBLENBQUNyQixlQUFBLENBQUF1QixhQUFNLHFCQUNMekIsT0FBQSxDQUFBVSxPQUFBLENBQUFhLGFBQUEsQ0FBQ3JCLGVBQUEsQ0FBQXdCLE1BQU0scUJBQ0wxQixPQUFBLENBQUFVLE9BQUEsQ0FBQWEsYUFBQSxDQUFDckIsZUFBQSxDQUFBeUIsS0FBSztNQUFDQyxJQUFJLEVBQUMsR0FBRztNQUFDQyxPQUFPLGVBQUU3QixPQUFBLENBQUFVLE9BQUEsQ0FBQWEsYUFBQSxDQUFDcEIsS0FBQSxDQUFBTyxPQUFJO0lBQUksRUFBRyxDQUM5QixDQUNGLENBQ0EsQ0FDWjtFQUNILENBQUMsQ0FBQztFQUNGTSxJQUFJLENBQUMsZ0VBQWdFLEVBQUUsQ0FBQztJQUN0RWMsS0FBSztJQUNMQyxJQUFJO0lBQ0pDLElBQUk7SUFDSkM7RUFDRixDQUFDLEtBQUs7SUFDSkgsS0FBSyxDQUFDLHVCQUF1QixFQUFFLE1BQU07TUFDbkNJLE1BQU0sQ0FBQ3BCLE1BQU0sQ0FBQyxDQUFDcUIsV0FBVyxFQUFFO0lBQzlCLENBQUMsQ0FBQztJQUNGSixJQUFJLENBQUMsdUNBQXVDLEVBQUUsTUFBTTtNQUNsRCxNQUFNSyxXQUFXLEdBQUd0QixNQUFNLENBQUN1QixTQUFTLENBQUMsUUFBUSxFQUFFO1FBQzdDQyxJQUFJLEVBQUU7TUFDUixDQUFDLENBQUM7TUFDRixJQUFBQyxjQUFHLEVBQUMsTUFBTTtRQUNSQyxnQkFBUyxDQUFDQyxLQUFLLENBQUNMLFdBQVcsQ0FBQztNQUM5QixDQUFDLENBQUM7SUFDSixDQUFDLENBQUM7SUFDRkosSUFBSSxDQUFDLGlEQUFpRCxFQUFFLFlBQVk7TUFDbEVFLE1BQU0sQ0FBQ1EsTUFBTSxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQyxDQUFDQyxPQUFPLENBQ2xDLG9DQUFvQyxDQUNyQztJQUNILENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9