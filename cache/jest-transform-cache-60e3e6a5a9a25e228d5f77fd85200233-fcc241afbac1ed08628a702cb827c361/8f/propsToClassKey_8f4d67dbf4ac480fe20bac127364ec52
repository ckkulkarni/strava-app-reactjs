de5673139ba07fe04d9df45369cadcaa
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = propsToClassKey;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _utils = require("@mui/utils");
const _excluded = ["variant"];
function isEmpty(string) {
  return string.length === 0;
}

/**
 * Generates string classKey based on the properties provided. It starts with the
 * variant if defined, and then it appends all other properties in alphabetical order.
 * @param {object} props - the properties for which the classKey should be created.
 */
function propsToClassKey(props) {
  const {
      variant
    } = props,
    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);
  let classKey = variant || '';
  Object.keys(other).sort().forEach(key => {
    if (key === 'color') {
      classKey += isEmpty(classKey) ? props[key] : (0, _utils.unstable_capitalize)(props[key]);
    } else {
      classKey += `${isEmpty(classKey) ? key : (0, _utils.unstable_capitalize)(key)}${(0, _utils.unstable_capitalize)(props[key].toString())}`;
    }
  });
  return classKey;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInByb3BzVG9DbGFzc0tleSIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlMiIsIl91dGlscyIsIl9leGNsdWRlZCIsImlzRW1wdHkiLCJzdHJpbmciLCJsZW5ndGgiLCJwcm9wcyIsInZhcmlhbnQiLCJvdGhlciIsImNsYXNzS2V5Iiwia2V5cyIsInNvcnQiLCJmb3JFYWNoIiwia2V5IiwidW5zdGFibGVfY2FwaXRhbGl6ZSIsInRvU3RyaW5nIl0sInNvdXJjZXMiOlsicHJvcHNUb0NsYXNzS2V5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcm9wc1RvQ2xhc3NLZXk7XG52YXIgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCIpKTtcbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiQG11aS91dGlsc1wiKTtcbmNvbnN0IF9leGNsdWRlZCA9IFtcInZhcmlhbnRcIl07XG5mdW5jdGlvbiBpc0VtcHR5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmxlbmd0aCA9PT0gMDtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZXMgc3RyaW5nIGNsYXNzS2V5IGJhc2VkIG9uIHRoZSBwcm9wZXJ0aWVzIHByb3ZpZGVkLiBJdCBzdGFydHMgd2l0aCB0aGVcbiAqIHZhcmlhbnQgaWYgZGVmaW5lZCwgYW5kIHRoZW4gaXQgYXBwZW5kcyBhbGwgb3RoZXIgcHJvcGVydGllcyBpbiBhbHBoYWJldGljYWwgb3JkZXIuXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHMgLSB0aGUgcHJvcGVydGllcyBmb3Igd2hpY2ggdGhlIGNsYXNzS2V5IHNob3VsZCBiZSBjcmVhdGVkLlxuICovXG5mdW5jdGlvbiBwcm9wc1RvQ2xhc3NLZXkocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgICAgdmFyaWFudFxuICAgIH0gPSBwcm9wcyxcbiAgICBvdGhlciA9ICgwLCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZTIuZGVmYXVsdCkocHJvcHMsIF9leGNsdWRlZCk7XG4gIGxldCBjbGFzc0tleSA9IHZhcmlhbnQgfHwgJyc7XG4gIE9iamVjdC5rZXlzKG90aGVyKS5zb3J0KCkuZm9yRWFjaChrZXkgPT4ge1xuICAgIGlmIChrZXkgPT09ICdjb2xvcicpIHtcbiAgICAgIGNsYXNzS2V5ICs9IGlzRW1wdHkoY2xhc3NLZXkpID8gcHJvcHNba2V5XSA6ICgwLCBfdXRpbHMudW5zdGFibGVfY2FwaXRhbGl6ZSkocHJvcHNba2V5XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNsYXNzS2V5ICs9IGAke2lzRW1wdHkoY2xhc3NLZXkpID8ga2V5IDogKDAsIF91dGlscy51bnN0YWJsZV9jYXBpdGFsaXplKShrZXkpfSR7KDAsIF91dGlscy51bnN0YWJsZV9jYXBpdGFsaXplKShwcm9wc1trZXldLnRvU3RyaW5nKCkpfWA7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGNsYXNzS2V5O1xufSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixJQUFJQSxzQkFBc0IsR0FBR0MsT0FBTyxDQUFDLDhDQUE4QyxDQUFDO0FBQ3BGQyxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUMzQ0MsS0FBSyxFQUFFO0FBQ1QsQ0FBQyxDQUFDO0FBQ0ZELE9BQU8sQ0FBQ0UsT0FBTyxHQUFHQyxlQUFlO0FBQ2pDLElBQUlDLDhCQUE4QixHQUFHUixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7QUFDM0gsSUFBSVEsTUFBTSxHQUFHUixPQUFPLENBQUMsWUFBWSxDQUFDO0FBQ2xDLE1BQU1TLFNBQVMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUM3QixTQUFTQyxPQUFPQSxDQUFDQyxNQUFNLEVBQUU7RUFDdkIsT0FBT0EsTUFBTSxDQUFDQyxNQUFNLEtBQUssQ0FBQztBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBU04sZUFBZUEsQ0FBQ08sS0FBSyxFQUFFO0VBQzlCLE1BQU07TUFDRkM7SUFDRixDQUFDLEdBQUdELEtBQUs7SUFDVEUsS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFUiw4QkFBOEIsQ0FBQ0YsT0FBTyxFQUFFUSxLQUFLLEVBQUVKLFNBQVMsQ0FBQztFQUN2RSxJQUFJTyxRQUFRLEdBQUdGLE9BQU8sSUFBSSxFQUFFO0VBQzVCYixNQUFNLENBQUNnQixJQUFJLENBQUNGLEtBQUssQ0FBQyxDQUFDRyxJQUFJLEVBQUUsQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLElBQUk7SUFDdkMsSUFBSUEsR0FBRyxLQUFLLE9BQU8sRUFBRTtNQUNuQkosUUFBUSxJQUFJTixPQUFPLENBQUNNLFFBQVEsQ0FBQyxHQUFHSCxLQUFLLENBQUNPLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFWixNQUFNLENBQUNhLG1CQUFtQixFQUFFUixLQUFLLENBQUNPLEdBQUcsQ0FBQyxDQUFDO0lBQzFGLENBQUMsTUFBTTtNQUNMSixRQUFRLElBQUssR0FBRU4sT0FBTyxDQUFDTSxRQUFRLENBQUMsR0FBR0ksR0FBRyxHQUFHLENBQUMsQ0FBQyxFQUFFWixNQUFNLENBQUNhLG1CQUFtQixFQUFFRCxHQUFHLENBQUUsR0FBRSxDQUFDLENBQUMsRUFBRVosTUFBTSxDQUFDYSxtQkFBbUIsRUFBRVIsS0FBSyxDQUFDTyxHQUFHLENBQUMsQ0FBQ0UsUUFBUSxFQUFFLENBQUUsRUFBQztJQUMxSTtFQUNGLENBQUMsQ0FBQztFQUNGLE9BQU9OLFFBQVE7QUFDakIifQ==