07889e7fc817ed360c0a9afd2f877ce3
"use strict";

var _jestCucumber = require("jest-cucumber");
var _react = require("@testing-library/react");
var _react2 = _interopRequireDefault(require("react"));
require("@testing-library/jest-dom/extend-expect");
require("text-encoding");
var _reactRouterDom = require("react-router-dom");
var _Base = _interopRequireDefault(require("../../pages/Base"));
var _testUtils = require("react-dom/test-utils");
var _reactRedux = require("react-redux");
var _toolkit = require("@reduxjs/toolkit");
var _stravaSlice = _interopRequireDefault(require("../../redux/reducer/stravaSlice"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const feature = (0, _jestCucumber.loadFeature)("src/components/features/base.feature");
let store;
let screen;
const {
  REACT_APP_CLIENTID
} = process.env;
const {
  REACT_APP_CLIENT_SECRET
} = process.env;
const redirectUrl = "http://localhost:3000/redirect";
const scope = "read,activity:read";
(0, _jestCucumber.defineFeature)(feature, test => {
  beforeEach(() => {
    store = (0, _toolkit.configureStore)({
      reducer: {
        strava: _stravaSlice.default
      }
    });
    screen = (0, _react.render)( /*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {
      store: store
    }, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.BrowserRouter, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Routes, null, /*#__PURE__*/_react2.default.createElement(_reactRouterDom.Route, {
      path: "/",
      element: /*#__PURE__*/_react2.default.createElement(_Base.default, null)
    })))));
  });
  test('User is not logged in and clicks on "Login with Strava" button', ({
    given,
    when,
    then,
    and
  }) => {
    given("I am on the home page", () => {
      expect(screen).toBeDefined();
    });
    when('I click on "Login With Strava" button', () => {
      const loginButton = screen.getByRole("button", {
        name: "Login With Strava"
      });
      (0, _testUtils.act)(() => {
        _react.fireEvent.click(loginButton);
      });
    });
  });
  test("User is logged in and opens the app", ({
    given,
    when,
    then,
    and
  }) => {
    given("I am on the home page", () => {
      localStorage.setItem("access_token", "mock-token");
      expect(screen).toBeDefined();
    });
    and("I am already logged in", () => {
      const accessToken = localStorage.getItem("access_token");
      expect(accessToken).toBeDefined();
    });
    then('I should be redirected to the "Activities" screen', () => {
      const activityContainer = screen.getByTestId("activity-container");
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdEN1Y3VtYmVyIiwicmVxdWlyZSIsIl9yZWFjdCIsIl9yZWFjdDIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0Um91dGVyRG9tIiwiX0Jhc2UiLCJfdGVzdFV0aWxzIiwiX3JlYWN0UmVkdXgiLCJfdG9vbGtpdCIsIl9zdHJhdmFTbGljZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwic3RvcmUiLCJzY3JlZW4iLCJSRUFDVF9BUFBfQ0xJRU5USUQiLCJwcm9jZXNzIiwiZW52IiwiUkVBQ1RfQVBQX0NMSUVOVF9TRUNSRVQiLCJyZWRpcmVjdFVybCIsInNjb3BlIiwiZGVmaW5lRmVhdHVyZSIsInRlc3QiLCJiZWZvcmVFYWNoIiwiY29uZmlndXJlU3RvcmUiLCJyZWR1Y2VyIiwic3RyYXZhIiwic3RyYXZhU2xpY2UiLCJyZW5kZXIiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJCcm93c2VyUm91dGVyIiwiUm91dGVzIiwiUm91dGUiLCJwYXRoIiwiZWxlbWVudCIsImdpdmVuIiwid2hlbiIsInRoZW4iLCJhbmQiLCJleHBlY3QiLCJ0b0JlRGVmaW5lZCIsImxvZ2luQnV0dG9uIiwiZ2V0QnlSb2xlIiwibmFtZSIsImFjdCIsImZpcmVFdmVudCIsImNsaWNrIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImFjY2Vzc1Rva2VuIiwiZ2V0SXRlbSIsImFjdGl2aXR5Q29udGFpbmVyIiwiZ2V0QnlUZXN0SWQiXSwic291cmNlcyI6WyJiYXNlLnN0ZXBzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZpbmVGZWF0dXJlLCBsb2FkRmVhdHVyZSB9IGZyb20gXCJqZXN0LWN1Y3VtYmVyXCI7XHJcbmltcG9ydCB7IGZpcmVFdmVudCwgcmVuZGVyLCB3YWl0Rm9yIH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3RcIjtcclxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3RcIjtcclxuaW1wb3J0IFwidGV4dC1lbmNvZGluZ1wiO1xyXG5pbXBvcnQge1xyXG4gIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxyXG4gIFJvdXRlcyxcclxuICBSb3V0ZSxcclxuICBNZW1vcnlSb3V0ZXIsXHJcbn0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IEJhc2UgZnJvbSBcIi4uLy4uL3BhZ2VzL0Jhc2VcIjtcclxuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xyXG5pbXBvcnQgeyBhY3QgfSBmcm9tIFwicmVhY3QtZG9tL3Rlc3QtdXRpbHNcIjtcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tIFwiQHJlZHV4anMvdG9vbGtpdFwiO1xyXG5pbXBvcnQgc3RyYXZhU2xpY2UgZnJvbSBcIi4uLy4uL3JlZHV4L3JlZHVjZXIvc3RyYXZhU2xpY2VcIjtcclxuY29uc3QgZmVhdHVyZSA9IGxvYWRGZWF0dXJlKFwic3JjL2NvbXBvbmVudHMvZmVhdHVyZXMvYmFzZS5mZWF0dXJlXCIpO1xyXG5sZXQgc3RvcmU6IGFueTtcclxubGV0IHNjcmVlbjogYW55O1xyXG5jb25zdCB7IFJFQUNUX0FQUF9DTElFTlRJRCB9ID0gcHJvY2Vzcy5lbnY7XHJcbmNvbnN0IHsgUkVBQ1RfQVBQX0NMSUVOVF9TRUNSRVQgfSA9IHByb2Nlc3MuZW52O1xyXG5jb25zdCByZWRpcmVjdFVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL3JlZGlyZWN0XCI7XHJcbmNvbnN0IHNjb3BlID0gXCJyZWFkLGFjdGl2aXR5OnJlYWRcIjtcclxuZGVmaW5lRmVhdHVyZShmZWF0dXJlLCAodGVzdCkgPT4ge1xyXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xyXG4gICAgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgICAgIHJlZHVjZXI6IHtcclxuICAgICAgICBzdHJhdmE6IHN0cmF2YVNsaWNlLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgICBzY3JlZW4gPSByZW5kZXIoXHJcbiAgICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICAgIDxSb3V0ZXI+XHJcbiAgICAgICAgICA8Um91dGVzPlxyXG4gICAgICAgICAgICA8Um91dGUgcGF0aD1cIi9cIiBlbGVtZW50PXs8QmFzZSAvPn0gLz5cclxuICAgICAgICAgIDwvUm91dGVzPlxyXG4gICAgICAgIDwvUm91dGVyPlxyXG4gICAgICA8L1Byb3ZpZGVyPlxyXG4gICAgKTtcclxuICB9KTtcclxuICB0ZXN0KCdVc2VyIGlzIG5vdCBsb2dnZWQgaW4gYW5kIGNsaWNrcyBvbiBcIkxvZ2luIHdpdGggU3RyYXZhXCIgYnV0dG9uJywgKHtcclxuICAgIGdpdmVuLFxyXG4gICAgd2hlbixcclxuICAgIHRoZW4sXHJcbiAgICBhbmQsXHJcbiAgfSkgPT4ge1xyXG4gICAgZ2l2ZW4oXCJJIGFtIG9uIHRoZSBob21lIHBhZ2VcIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgICB3aGVuKCdJIGNsaWNrIG9uIFwiTG9naW4gV2l0aCBTdHJhdmFcIiBidXR0b24nLCAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGxvZ2luQnV0dG9uID0gc2NyZWVuLmdldEJ5Um9sZShcImJ1dHRvblwiLCB7XHJcbiAgICAgICAgbmFtZTogXCJMb2dpbiBXaXRoIFN0cmF2YVwiLFxyXG4gICAgICB9KTtcclxuICAgICAgYWN0KCgpID0+IHtcclxuICAgICAgICBmaXJlRXZlbnQuY2xpY2sobG9naW5CdXR0b24pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG4gIHRlc3QoXCJVc2VyIGlzIGxvZ2dlZCBpbiBhbmQgb3BlbnMgdGhlIGFwcFwiLCAoeyBnaXZlbiwgd2hlbiwgdGhlbiwgYW5kIH0pID0+IHtcclxuICAgIGdpdmVuKFwiSSBhbSBvbiB0aGUgaG9tZSBwYWdlXCIsICgpID0+IHtcclxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJhY2Nlc3NfdG9rZW5cIiwgXCJtb2NrLXRva2VuXCIpO1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgICBhbmQoXCJJIGFtIGFscmVhZHkgbG9nZ2VkIGluXCIsICgpID0+IHtcclxuICAgICAgY29uc3QgYWNjZXNzVG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImFjY2Vzc190b2tlblwiKTtcclxuICAgICAgZXhwZWN0KGFjY2Vzc1Rva2VuKS50b0JlRGVmaW5lZCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGVuKCdJIHNob3VsZCBiZSByZWRpcmVjdGVkIHRvIHRoZSBcIkFjdGl2aXRpZXNcIiBzY3JlZW4nLCAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGFjdGl2aXR5Q29udGFpbmVyID0gc2NyZWVuLmdldEJ5VGVzdElkKFwiYWN0aXZpdHktY29udGFpbmVyXCIpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsYUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsT0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQ0FBLE9BQUE7QUFDQUEsT0FBQTtBQUNBLElBQUFJLGVBQUEsR0FBQUosT0FBQTtBQU1BLElBQUFLLEtBQUEsR0FBQUYsc0JBQUEsQ0FBQUgsT0FBQTtBQUVBLElBQUFNLFVBQUEsR0FBQU4sT0FBQTtBQUNBLElBQUFPLFdBQUEsR0FBQVAsT0FBQTtBQUNBLElBQUFRLFFBQUEsR0FBQVIsT0FBQTtBQUNBLElBQUFTLFlBQUEsR0FBQU4sc0JBQUEsQ0FBQUgsT0FBQTtBQUEwRCxTQUFBRyx1QkFBQU8sR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEs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