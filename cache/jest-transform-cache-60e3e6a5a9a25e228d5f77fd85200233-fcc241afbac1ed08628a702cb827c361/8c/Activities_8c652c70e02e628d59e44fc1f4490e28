cc592841ac6815620df45858a9ce69ef
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _axios = _interopRequireDefault(require("axios"));
var _material = require("@mui/material");
var _reactRedux = require("react-redux");
var _reactRouterDom = require("react-router-dom");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Activities = () => {
  const [resultsSet, setResultsSet] = (0, _react.useState)([]);
  const userID = (0, _reactRedux.useSelector)(state => state.strava.userID);
  const accessToken = localStorage.getItem("access_token");
  const fetchActivities = async () => {
    try {
      const response = await _axios.default.get(`https://www.strava.com/api/v3/athlete/activities`, {
        headers: {
          Authorization: `Bearer ${accessToken}`
        }
      });
      setResultsSet(response.data);
    } catch (error) {
      console.error("Error fetching activities:", error);
    }
  };
  (0, _react.useEffect)(() => {
    fetchActivities();
  }, [userID]);
  return /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": "activity-container"
  }, /*#__PURE__*/_react.default.createElement(_material.Box, {
    sx: {
      display: "flex",
      justifyContent: "flex-end",
      marginRight: 2,
      marginTop: 2
    }
  }, /*#__PURE__*/_react.default.createElement(_material.Button, {
    component: _reactRouterDom.Link,
    to: "/create-activity",
    variant: "contained",
    color: "primary"
  }, "Create Activity")), /*#__PURE__*/_react.default.createElement(_material.Typography, {
    variant: "h4",
    sx: {
      textAlign: "center",
      marginTop: 4,
      marginBottom: 2
    }
  }, "Activities"), /*#__PURE__*/_react.default.createElement(_material.List, {
    sx: {
      padding: 2
    }
  }, resultsSet.map(activity => /*#__PURE__*/_react.default.createElement(_material.Card, {
    key: activity.id,
    sx: {
      marginBottom: 2,
      border: "1px solid #e0e0e0",
      borderRadius: "8px"
    }
  }, /*#__PURE__*/_react.default.createElement(_material.CardContent, null, /*#__PURE__*/_react.default.createElement(_material.Typography, {
    variant: "h6"
  }, activity.name), /*#__PURE__*/_react.default.createElement(_material.ListItem, null, /*#__PURE__*/_react.default.createElement(_material.ListItemText, {
    primary: "Sports Type",
    secondary: activity.type
  })), /*#__PURE__*/_react.default.createElement(_material.ListItem, null, /*#__PURE__*/_react.default.createElement(_material.ListItemText, {
    primary: "Distance",
    secondary: `${activity.distance} meters`
  })), /*#__PURE__*/_react.default.createElement(_material.ListItem, null, /*#__PURE__*/_react.default.createElement(_material.ListItemText, {
    primary: "Average speed",
    secondary: `${activity.average_speed} m/s`
  })), /*#__PURE__*/_react.default.createElement(_material.ListItem, null, /*#__PURE__*/_react.default.createElement(_material.ListItemText, {
    primary: "Max speed",
    secondary: `${activity.max_speed} m/s`
  })), /*#__PURE__*/_react.default.createElement(_material.ListItem, null, /*#__PURE__*/_react.default.createElement(_material.ListItemText, {
    primary: "Heart rate",
    secondary: activity.average_heartrate
  })))))));
};
var _default = Activities;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,