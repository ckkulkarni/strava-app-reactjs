95444c96144cd528172f5abe644dfcfc
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.test = exports.serialize = exports.default = void 0;
var _ansiRegex = _interopRequireDefault(require('ansi-regex'));
var _ansiStyles = _interopRequireDefault(require('ansi-styles'));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
const toHumanReadableAnsi = text => text.replace((0, _ansiRegex.default)(), match => {
  switch (match) {
    case _ansiStyles.default.red.close:
    case _ansiStyles.default.green.close:
    case _ansiStyles.default.cyan.close:
    case _ansiStyles.default.gray.close:
    case _ansiStyles.default.white.close:
    case _ansiStyles.default.yellow.close:
    case _ansiStyles.default.bgRed.close:
    case _ansiStyles.default.bgGreen.close:
    case _ansiStyles.default.bgYellow.close:
    case _ansiStyles.default.inverse.close:
    case _ansiStyles.default.dim.close:
    case _ansiStyles.default.bold.close:
    case _ansiStyles.default.reset.open:
    case _ansiStyles.default.reset.close:
      return '</>';
    case _ansiStyles.default.red.open:
      return '<red>';
    case _ansiStyles.default.green.open:
      return '<green>';
    case _ansiStyles.default.cyan.open:
      return '<cyan>';
    case _ansiStyles.default.gray.open:
      return '<gray>';
    case _ansiStyles.default.white.open:
      return '<white>';
    case _ansiStyles.default.yellow.open:
      return '<yellow>';
    case _ansiStyles.default.bgRed.open:
      return '<bgRed>';
    case _ansiStyles.default.bgGreen.open:
      return '<bgGreen>';
    case _ansiStyles.default.bgYellow.open:
      return '<bgYellow>';
    case _ansiStyles.default.inverse.open:
      return '<inverse>';
    case _ansiStyles.default.dim.open:
      return '<dim>';
    case _ansiStyles.default.bold.open:
      return '<bold>';
    default:
      return '';
  }
});
const test = val => typeof val === 'string' && !!val.match((0, _ansiRegex.default)());
exports.test = test;
const serialize = (val, config, indentation, depth, refs, printer) => printer(toHumanReadableAnsi(val), config, indentation, depth, refs);
exports.serialize = serialize;
const plugin = {
  serialize,
  test
};
var _default = plugin;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRlc3QiLCJzZXJpYWxpemUiLCJkZWZhdWx0IiwiX2Fuc2lSZWdleCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2Fuc2lTdHlsZXMiLCJvYmoiLCJfX2VzTW9kdWxlIiwidG9IdW1hblJlYWRhYmxlQW5zaSIsInRleHQiLCJyZXBsYWNlIiwibWF0Y2giLCJyZWQiLCJjbG9zZSIsImdyZWVuIiwiY3lhbiIsImdyYXkiLCJ3aGl0ZSIsInllbGxvdyIsImJnUmVkIiwiYmdHcmVlbiIsImJnWWVsbG93IiwiaW52ZXJzZSIsImRpbSIsImJvbGQiLCJyZXNldCIsIm9wZW4iLCJ2YWwiLCJjb25maWciLCJpbmRlbnRhdGlvbiIsImRlcHRoIiwicmVmcyIsInByaW50ZXIiLCJwbHVnaW4iLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIkNvbnZlcnRBbnNpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnRlc3QgPSBleHBvcnRzLnNlcmlhbGl6ZSA9IGV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9hbnNpUmVnZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoJ2Fuc2ktcmVnZXgnKSk7XG5cbnZhciBfYW5zaVN0eWxlcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgnYW5zaS1zdHlsZXMnKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ZGVmYXVsdDogb2JqfTtcbn1cblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuY29uc3QgdG9IdW1hblJlYWRhYmxlQW5zaSA9IHRleHQgPT5cbiAgdGV4dC5yZXBsYWNlKCgwLCBfYW5zaVJlZ2V4LmRlZmF1bHQpKCksIG1hdGNoID0+IHtcbiAgICBzd2l0Y2ggKG1hdGNoKSB7XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQucmVkLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmdyZWVuLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmN5YW4uY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuZ3JheS5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC53aGl0ZS5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC55ZWxsb3cuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYmdSZWQuY2xvc2U6XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQuYmdHcmVlbi5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5iZ1llbGxvdy5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5pbnZlcnNlLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmRpbS5jbG9zZTpcbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5ib2xkLmNsb3NlOlxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LnJlc2V0Lm9wZW46XG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQucmVzZXQuY2xvc2U6XG4gICAgICAgIHJldHVybiAnPC8+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LnJlZC5vcGVuOlxuICAgICAgICByZXR1cm4gJzxyZWQ+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmdyZWVuLm9wZW46XG4gICAgICAgIHJldHVybiAnPGdyZWVuPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5jeWFuLm9wZW46XG4gICAgICAgIHJldHVybiAnPGN5YW4+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmdyYXkub3BlbjpcbiAgICAgICAgcmV0dXJuICc8Z3JheT4nO1xuXG4gICAgICBjYXNlIF9hbnNpU3R5bGVzLmRlZmF1bHQud2hpdGUub3BlbjpcbiAgICAgICAgcmV0dXJuICc8d2hpdGU+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LnllbGxvdy5vcGVuOlxuICAgICAgICByZXR1cm4gJzx5ZWxsb3c+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJnUmVkLm9wZW46XG4gICAgICAgIHJldHVybiAnPGJnUmVkPic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5iZ0dyZWVuLm9wZW46XG4gICAgICAgIHJldHVybiAnPGJnR3JlZW4+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJnWWVsbG93Lm9wZW46XG4gICAgICAgIHJldHVybiAnPGJnWWVsbG93Pic7XG5cbiAgICAgIGNhc2UgX2Fuc2lTdHlsZXMuZGVmYXVsdC5pbnZlcnNlLm9wZW46XG4gICAgICAgIHJldHVybiAnPGludmVyc2U+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmRpbS5vcGVuOlxuICAgICAgICByZXR1cm4gJzxkaW0+JztcblxuICAgICAgY2FzZSBfYW5zaVN0eWxlcy5kZWZhdWx0LmJvbGQub3BlbjpcbiAgICAgICAgcmV0dXJuICc8Ym9sZD4nO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9KTtcblxuY29uc3QgdGVzdCA9IHZhbCA9PlxuICB0eXBlb2YgdmFsID09PSAnc3RyaW5nJyAmJiAhIXZhbC5tYXRjaCgoMCwgX2Fuc2lSZWdleC5kZWZhdWx0KSgpKTtcblxuZXhwb3J0cy50ZXN0ID0gdGVzdDtcblxuY29uc3Qgc2VyaWFsaXplID0gKHZhbCwgY29uZmlnLCBpbmRlbnRhdGlvbiwgZGVwdGgsIHJlZnMsIHByaW50ZXIpID0+XG4gIHByaW50ZXIodG9IdW1hblJlYWRhYmxlQW5zaSh2YWwpLCBjb25maWcsIGluZGVudGF0aW9uLCBkZXB0aCwgcmVmcyk7XG5cbmV4cG9ydHMuc2VyaWFsaXplID0gc2VyaWFsaXplO1xuY29uc3QgcGx1Z2luID0ge1xuICBzZXJpYWxpemUsXG4gIHRlc3Rcbn07XG52YXIgX2RlZmF1bHQgPSBwbHVnaW47XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLENBQUNFLElBQUksR0FBR0YsT0FBTyxDQUFDRyxTQUFTLEdBQUdILE9BQU8sQ0FBQ0ksT0FBTyxHQUFHLEtBQUssQ0FBQztBQUUzRCxJQUFJQyxVQUFVLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFFOUQsSUFBSUMsV0FBVyxHQUFHRixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRWhFLFNBQVNELHNCQUFzQkEsQ0FBQ0csR0FBRyxFQUFFO0VBQ25DLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFVLEdBQUdELEdBQUcsR0FBRztJQUFDTCxPQUFPLEVBQUVLO0VBQUcsQ0FBQztBQUNyRDs7QUFFQTtBQUNB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