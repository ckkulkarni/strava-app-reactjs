f2991b0f80febaba27efaeb1cfbf9aa2
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _material = require("@mui/material");
var _reactRouter = require("react-router");
var _reactRedux = require("react-redux");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Base = () => {
  const navigation = (0, _reactRouter.useNavigate)();
  const accessToken = localStorage.getItem("access_token");
  (0, _react.useEffect)(() => {
    if (accessToken) {
      navigation("/activities");
    }
  }, []);
  //  const accessToken = useSelector((state: any) => state.strava.accessToken);
  const {
    REACT_APP_CLIENTID
  } = process.env;
  const {
    REACT_APP_CLIENT_SECRET
  } = process.env;
  // console.log(REACT_APP_CLIENTID);
  const redirectUrl = "http://localhost:3000/redirect";
  const scope = "read,activity:read";
  const dispatch = (0, _reactRedux.useDispatch)();
  const handleLogin = () => {
    window.location.href = `http://www.strava.com/oauth/authorize?client_id=${REACT_APP_CLIENTID}&response_type=code&redirect_uri=${redirectUrl}/exchange_token&approval_prompt=force&scope=${scope}`;
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "inputContainer"
  }, /*#__PURE__*/_react.default.createElement(_material.Box, {
    sx: {
      display: "flex",
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "center",
      backgroundColor: "#EEEDED",
      p: 4,
      height: "30vh",
      borderRadius: 2
    }
  }, /*#__PURE__*/_react.default.createElement(_material.Typography, {
    variant: "h4",
    sx: {
      marginBottom: 2,
      color: "#333",
      fontWeight: "bold"
    }
  }, "Welcome to Strava Connect"), /*#__PURE__*/_react.default.createElement(_material.Button, {
    variant: "contained",
    onClick: handleLogin,
    sx: {
      backgroundColor: "#FF5733",
      color: "white",
      "&:hover": {
        backgroundColor: "#FF834A"
      }
    }
  }, "Login With Strava")));
};
var _default = Base;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfbWF0ZXJpYWwiLCJfcmVhY3RSb3V0ZXIiLCJfcmVhY3RSZWR1eCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJCYXNlIiwibmF2aWdhdGlvbiIsInVzZU5hdmlnYXRlIiwiYWNjZXNzVG9rZW4iLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidXNlRWZmZWN0IiwiUkVBQ1RfQVBQX0NMSUVOVElEIiwicHJvY2VzcyIsImVudiIsIlJFQUNUX0FQUF9DTElFTlRfU0VDUkVUIiwicmVkaXJlY3RVcmwiLCJzY29wZSIsImRpc3BhdGNoIiwidXNlRGlzcGF0Y2giLCJoYW5kbGVMb2dpbiIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJCb3giLCJzeCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiYmFja2dyb3VuZENvbG9yIiwicCIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsIlR5cG9ncmFwaHkiLCJ2YXJpYW50IiwibWFyZ2luQm90dG9tIiwiY29sb3IiLCJmb250V2VpZ2h0IiwiQnV0dG9uIiwib25DbGljayIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkJhc2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IEJ1dHRvbiwgVHlwb2dyYXBoeSwgQm94IH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWxcIjtcclxuaW1wb3J0IHsgdXNlTmF2aWdhdGUgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XHJcbmltcG9ydCB7IHVzZURpc3BhdGNoIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmNvbnN0IEJhc2UgPSAoKSA9PiB7XHJcbiAgY29uc3QgbmF2aWdhdGlvbiA9IHVzZU5hdmlnYXRlKCk7XHJcbiAgY29uc3QgYWNjZXNzVG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImFjY2Vzc190b2tlblwiKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmIChhY2Nlc3NUb2tlbikge1xyXG4gICAgICBuYXZpZ2F0aW9uKFwiL2FjdGl2aXRpZXNcIik7XHJcbiAgICB9XHJcbiAgfSwgW10pO1xyXG4gIC8vICBjb25zdCBhY2Nlc3NUb2tlbiA9IHVzZVNlbGVjdG9yKChzdGF0ZTogYW55KSA9PiBzdGF0ZS5zdHJhdmEuYWNjZXNzVG9rZW4pO1xyXG4gIGNvbnN0IHsgUkVBQ1RfQVBQX0NMSUVOVElEIH0gPSBwcm9jZXNzLmVudjtcclxuICBjb25zdCB7IFJFQUNUX0FQUF9DTElFTlRfU0VDUkVUIH0gPSBwcm9jZXNzLmVudjtcclxuICAvLyBjb25zb2xlLmxvZyhSRUFDVF9BUFBfQ0xJRU5USUQpO1xyXG4gIGNvbnN0IHJlZGlyZWN0VXJsID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvcmVkaXJlY3RcIjtcclxuICBjb25zdCBzY29wZSA9IFwicmVhZCxhY3Rpdml0eTpyZWFkXCI7XHJcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG4gIGNvbnN0IGhhbmRsZUxvZ2luID0gKCkgPT4ge1xyXG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBgaHR0cDovL3d3dy5zdHJhdmEuY29tL29hdXRoL2F1dGhvcml6ZT9jbGllbnRfaWQ9JHtSRUFDVF9BUFBfQ0xJRU5USUR9JnJlc3BvbnNlX3R5cGU9Y29kZSZyZWRpcmVjdF91cmk9JHtyZWRpcmVjdFVybH0vZXhjaGFuZ2VfdG9rZW4mYXBwcm92YWxfcHJvbXB0PWZvcmNlJnNjb3BlPSR7c2NvcGV9YDtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJpbnB1dENvbnRhaW5lclwiPlxyXG4gICAgICA8Qm94XHJcbiAgICAgICAgc3g9e3tcclxuICAgICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxyXG4gICAgICAgICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcclxuICAgICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXHJcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcclxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjRUVFREVEXCIsXHJcbiAgICAgICAgICBwOiA0LFxyXG4gICAgICAgICAgaGVpZ2h0OiBcIjMwdmhcIixcclxuICAgICAgICAgIGJvcmRlclJhZGl1czogMixcclxuICAgICAgICB9fVxyXG4gICAgICA+XHJcbiAgICAgICAgPFR5cG9ncmFwaHlcclxuICAgICAgICAgIHZhcmlhbnQ9XCJoNFwiXHJcbiAgICAgICAgICBzeD17eyBtYXJnaW5Cb3R0b206IDIsIGNvbG9yOiBcIiMzMzNcIiwgZm9udFdlaWdodDogXCJib2xkXCIgfX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICBXZWxjb21lIHRvIFN0cmF2YSBDb25uZWN0XHJcbiAgICAgICAgPC9UeXBvZ3JhcGh5PlxyXG4gICAgICAgIDxCdXR0b25cclxuICAgICAgICAgIHZhcmlhbnQ9XCJjb250YWluZWRcIlxyXG4gICAgICAgICAgb25DbGljaz17aGFuZGxlTG9naW59XHJcbiAgICAgICAgICBzeD17e1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI0ZGNTczM1wiLFxyXG4gICAgICAgICAgICBjb2xvcjogXCJ3aGl0ZVwiLFxyXG4gICAgICAgICAgICBcIiY6aG92ZXJcIjoge1xyXG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjRkY4MzRBXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICB9fVxyXG4gICAgICAgID5cclxuICAgICAgICAgIExvZ2luIFdpdGggU3RyYXZhXHJcbiAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDwvQm94PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJhc2U7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsU0FBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsWUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBQTBDLFNBQUFJLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSxDQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFOLHdCQUFBVSxHQUFBLEVBQUFKLFdBQUEsU0FBQUEsV0FBQSxJQUFBSSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxXQUFBRCxHQUFBLFFBQUFBLEdBQUEsb0JBQUFBLEdBQUEsd0JBQUFBLEdBQUEsNEJBQUFFLE9BQUEsRUFBQUYsR0FBQSxVQUFBRyxLQUFBLEdBQUFSLHdCQUFBLENBQUFDLFdBQUEsT0FBQU8sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUosR0FBQSxZQUFBRyxLQUFBLENBQUFFLEdBQUEsQ0FBQUwsR0FBQSxTQUFBTSxNQUFBLFdBQUFDLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUMs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