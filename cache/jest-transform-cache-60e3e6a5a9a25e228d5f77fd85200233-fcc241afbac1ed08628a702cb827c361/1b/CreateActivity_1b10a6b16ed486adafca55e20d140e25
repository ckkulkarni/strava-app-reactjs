9e6dd5081bbc0a56731662e2a8f9272e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _material = require("@mui/material");
var _reactRouter = require("react-router");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const CreateActivity = () => {
  const navigate = (0, _reactRouter.useNavigate)();
  const [activityData, setActivityData] = (0, _react.useState)({
    name: "",
    type: "",
    start_date_local: "",
    elapsed_time: "",
    description: "",
    distance: "",
    trainer: false,
    commute: false
  });
  const handleInputChange = event => {
    const {
      name,
      value,
      type,
      checked
    } = event.target;
    setActivityData(prevData => ({
      ...prevData,
      [name]: type === "checkbox" ? checked : value
    }));
  };
  const handleSubmit = event => {
    event.preventDefault();
    alert("Activity Submitted");
    navigate("/activities");
  };
  return /*#__PURE__*/_react.default.createElement(_material.Container, {
    maxWidth: "md"
  }, /*#__PURE__*/_react.default.createElement(_material.Typography, {
    variant: "h4",
    sx: {
      textAlign: "center",
      marginTop: 4
    }
  }, "Create Activity"), /*#__PURE__*/_react.default.createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/_react.default.createElement(_material.Box, {
    sx: {
      display: "flex",
      flexDirection: "column",
      gap: 2
    }
  }, /*#__PURE__*/_react.default.createElement(_material.TextField, {
    label: "Name",
    name: "name",
    value: activityData.name,
    onChange: handleInputChange,
    required: true
  }), /*#__PURE__*/_react.default.createElement(_material.TextField, {
    label: "Type",
    name: "type",
    value: activityData.type,
    onChange: handleInputChange,
    placeholder: "Enter Start Date",
    required: true
  }), /*#__PURE__*/_react.default.createElement(_material.TextField, {
    name: "start_date_local",
    type: "datetime-local",
    value: activityData.start_date_local,
    onChange: handleInputChange,
    required: true
  }), /*#__PURE__*/_react.default.createElement(_material.TextField, {
    label: "Elapsed Time (seconds)",
    name: "elapsed_time",
    type: "number",
    value: activityData.elapsed_time,
    onChange: handleInputChange,
    required: true
  }), /*#__PURE__*/_react.default.createElement(_material.TextField, {
    label: "Description",
    name: "description",
    value: activityData.description,
    onChange: handleInputChange,
    multiline: true,
    rows: 4
  }), /*#__PURE__*/_react.default.createElement(_material.TextField, {
    label: "Distance (meters)",
    name: "distance",
    type: "number",
    value: activityData.distance,
    onChange: handleInputChange,
    required: true
  }), /*#__PURE__*/_react.default.createElement(_material.Box, {
    sx: {
      display: "flex",
      alignItems: "center"
    }
  }, /*#__PURE__*/_react.default.createElement("label", null, "Trainer:", /*#__PURE__*/_react.default.createElement("input", {
    type: "checkbox",
    name: "trainer",
    checked: activityData.trainer,
    onChange: handleInputChange
  })), /*#__PURE__*/_react.default.createElement("label", {
    style: {
      marginLeft: "16px"
    }
  }, "Commute:", /*#__PURE__*/_react.default.createElement("input", {
    type: "checkbox",
    name: "commute",
    checked: activityData.commute,
    onChange: handleInputChange
  }))), /*#__PURE__*/_react.default.createElement(_material.Button, {
    type: "submit",
    variant: "contained",
    color: "primary"
  }, "Create"))));
};
var _default = CreateActivity;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,